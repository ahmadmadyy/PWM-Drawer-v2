
PWM Drawer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  000031fc  00003290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000031fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000481  00800178  00800178  00003308  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003308  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003338  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00002b88  00000000  00000000  00003378  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0005a5a1  00000000  00000000  00005f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002776  00000000  00000000  000604a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000fc00  00000000  00000000  00062c17  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000110bc  00000000  00000000  00072818  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014ea5  00000000  00000000  000838d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0006ae73  00000000  00000000  00098779  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002a40  00000000  00000000  001035ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__ctors_end>
       4:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
       8:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
       c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      10:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      14:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      18:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      1c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      20:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      24:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      28:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      2c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      30:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      34:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      38:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      3c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      40:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      44:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      48:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      4c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      50:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      54:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      58:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      5c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      60:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>
      64:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	bf 02       	muls	r27, r31
      6a:	03 02       	muls	r16, r19
      6c:	03 04       	cpc	r0, r3
      6e:	01 02       	muls	r16, r17
      70:	04 06       	cpc	r0, r20
      72:	0c 00       	.word	0x000c	; ????
      74:	fe 07       	cpc	r31, r30
      76:	fe 08       	sbc	r15, r14
      78:	ff 01       	movw	r30, r30
      7a:	7b 03       	fmul	r23, r19
      7c:	16 09       	sbc	r17, r6
      7e:	aa 20       	and	r10, r10
      80:	07 e6       	ldi	r16, 0x67	; 103
      82:	f8 f9       	.word	0xf9f8	; ????
      84:	4f 00       	.word	0x004f	; ????
      86:	21 0a       	sbc	r2, r17
      88:	e6 f8       	bld	r14, 6
      8a:	c9 69       	ori	r28, 0x99	; 153
      8c:	77 30       	cpi	r23, 0x07	; 7
      8e:	a7 00       	.word	0x00a7	; ????
      90:	22 0c       	add	r2, r2
      92:	e6 f8       	bld	r14, 6
      94:	e1 24       	eor	r14, r1
      96:	4b b2       	in	r4, 0x1b	; 27
      98:	24 e7       	ldi	r18, 0x74	; 116
      9a:	13 00       	.word	0x0013	; ????
      9c:	23 0f       	add	r18, r19
      9e:	e6 f8       	bld	r14, 6
      a0:	19 93       	st	Y+, r17
      a2:	68 90       	.word	0x9068	; ????
      a4:	92 2c       	mov	r9, r2
      a6:	89 06       	cpc	r8, r25
      a8:	29 c9       	rjmp	.-3502   	; 0xfffff2fc <__eeprom_end+0xff7ef2fc>
      aa:	09 24       	eor	r0, r9
      ac:	0e e6       	ldi	r16, 0x6E	; 110
      ae:	f8 f1       	brcs	.+126    	; 0x12e <__trampolines_end+0xc6>
      b0:	70 4a       	sbci	r23, 0xA0	; 160
      b2:	3a 8e       	std	Y+26, r3	; 0x1a
      b4:	49 a7       	std	Y+41, r20	; 0x29
      b6:	31 87       	std	Z+9, r19	; 0x09
      b8:	00 25       	eor	r16, r0
      ba:	0d e6       	ldi	r16, 0x6D	; 109
      bc:	f8 89       	ldd	r31, Y+16	; 0x10
      be:	52 22       	and	r5, r18
      c0:	85 9d       	mul	r24, r5
      c2:	94 48       	sbci	r25, 0x84	; 132
      c4:	87 01       	movw	r16, r14
      c6:	26 0e       	add	r2, r22
      c8:	e6 f8       	bld	r14, 6
      ca:	a9 61       	ori	r26, 0x19	; 25
      cc:	92 25       	eor	r25, r2
      ce:	61 a5       	ldd	r22, Z+41	; 0x29
      d0:	29 53       	subi	r18, 0x39	; 57
      d2:	72 18       	sub	r7, r2
      d4:	27 09       	sbc	r18, r7
      d6:	e6 f8       	bld	r14, 6
      d8:	f1 b4       	in	r15, 0x21	; 33
      da:	ce 37       	cpi	r28, 0x7E	; 126
      dc:	00 28       	or	r0, r0
      de:	0d e6       	ldi	r16, 0x6D	; 109
      e0:	f8 29       	or	r31, r8
      e2:	61 1a       	sub	r6, r17
      e4:	a6 e5       	ldi	r26, 0x56	; 86
      e6:	34 ce       	rjmp	.-920    	; 0xfffffd50 <__eeprom_end+0xff7efd50>
      e8:	11 00       	.word	0x0011	; ????
      ea:	29 0c       	add	r2, r9
      ec:	e6 f8       	bld	r14, 6
      ee:	e1 6a       	ori	r30, 0xA1	; 161
      f0:	9c 16       	cp	r9, r28
      f2:	d3 30       	cpi	r29, 0x03	; 3
      f4:	c7 00       	.word	0x00c7	; ????
      f6:	2a 0e       	add	r2, r26
      f8:	e6 f8       	bld	r14, 6
      fa:	c9 59       	subi	r28, 0x99	; 153
      fc:	52 1a       	sub	r5, r18
      fe:	c3 29       	or	r28, r3
     100:	a9 e5       	ldi	r26, 0x59	; 89
     102:	14 00       	.word	0x0014	; ????
     104:	2b 0a       	sbc	r2, r27
     106:	e6 f8       	bld	r14, 6
     108:	59 6b       	ori	r21, 0xB9	; 185
     10a:	83 96       	adiw	r24, 0x23	; 35
     10c:	e6 0c       	add	r14, r6
     10e:	2c 09       	sbc	r18, r12
     110:	e6 f8       	bld	r14, 6
     112:	f9 2e       	mov	r15, r25
     114:	6a 3a       	cpi	r22, 0xAA	; 170
     116:	06 2d       	mov	r16, r6
     118:	09 e6       	ldi	r16, 0x69	; 105
     11a:	f8 79       	andi	r31, 0x98	; 152
     11c:	19 74       	andi	r17, 0x49	; 73
     11e:	6e 00       	.word	0x006e	; ????
     120:	2e 09       	sbc	r18, r14
     122:	e6 f8       	bld	r14, 6
     124:	f9 2e       	mov	r15, r25
     126:	ea 14       	cp	r14, r10
     128:	00 2f       	mov	r16, r16
     12a:	0b e6       	ldi	r16, 0x6B	; 107
     12c:	f8 59       	subi	r31, 0x98	; 152
     12e:	c2 34       	cpi	r28, 0x42	; 66
     130:	ac 86       	std	Y+12, r10	; 0x0c
     132:	39 0d       	add	r19, r9
     134:	30 0a       	sbc	r3, r16
     136:	e6 f8       	bld	r14, 6
     138:	c9 5a       	subi	r28, 0xA9	; 169
     13a:	d4 bf       	out	0x34, r29	; 52
     13c:	e9 04       	cpc	r14, r9
     13e:	31 09       	sbc	r19, r1
     140:	e6 f8       	bld	r14, 6
     142:	c9 a1       	ldd	r28, Y+33	; 0x21
     144:	da 71       	andi	r29, 0x1A	; 26
     146:	27 32       	cpi	r18, 0x27	; 39
     148:	0c e6       	ldi	r16, 0x6C	; 108
     14a:	f8 a9       	ldd	r31, Y+48	; 0x30
     14c:	53 96       	adiw	r26, 0x13	; 19
     14e:	86 8d       	ldd	r24, Z+30	; 0x1e
     150:	83 0e       	add	r8, r19
     152:	03 33       	cpi	r16, 0x33	; 51
     154:	0d e6       	ldi	r16, 0x6D	; 109
     156:	f8 89       	ldd	r31, Y+16	; 0x10
     158:	83 1a       	sub	r8, r19
     15a:	86 72       	andi	r24, 0x26	; 38
     15c:	92 45       	sbci	r25, 0x52	; 82
     15e:	3b 01       	movw	r6, r22
     160:	34 0d       	add	r19, r4
     162:	e6 f8       	bld	r14, 6
     164:	e9 a1       	ldd	r30, Y+33	; 0x21
     166:	96 44       	sbci	r25, 0x46	; 70
     168:	a5 41       	sbci	r26, 0x15	; 21
     16a:	4c 73       	andi	r20, 0x3C	; 60
     16c:	02 35       	cpi	r16, 0x52	; 82
     16e:	0d e6       	ldi	r16, 0x6D	; 109
     170:	f8 89       	ldd	r31, Y+16	; 0x10
     172:	83 92       	.word	0x9283	; ????
     174:	0e 71       	andi	r16, 0x1E	; 30
     176:	9a 64       	ori	r25, 0x4A	; 74
     178:	d1 4e       	sbci	r29, 0xE1	; 225
     17a:	36 0d       	add	r19, r6
     17c:	e6 f8       	bld	r14, 6
     17e:	c9 5a       	subi	r28, 0xA9	; 169
     180:	98 0e       	add	r9, r24
     182:	51 96       	adiw	r26, 0x11	; 17
     184:	64 d1       	rcall	.+712    	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     186:	4e 37       	cpi	r20, 0x7E	; 126
     188:	0c e6       	ldi	r16, 0x6C	; 108
     18a:	f8 89       	ldd	r31, Y+16	; 0x10
     18c:	83 1a       	sub	r8, r19
     18e:	a6 61       	ori	r26, 0x16	; 22
     190:	5a a7       	std	Y+42, r21	; 0x2a
     192:	00 38       	cpi	r16, 0x80	; 128
     194:	0e e6       	ldi	r16, 0x6E	; 110
     196:	f8 a9       	ldd	r31, Y+48	; 0x30
     198:	53 96       	adiw	r26, 0x13	; 19
     19a:	64 d1       	rcall	.+712    	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     19c:	94 25       	eor	r25, r4
     19e:	59 b4       	in	r5, 0x29	; 41
     1a0:	13 39       	cpi	r17, 0x93	; 147
     1a2:	0e e6       	ldi	r16, 0x6E	; 110
     1a4:	f8 a9       	ldd	r31, Y+48	; 0x30
     1a6:	53 96       	adiw	r26, 0x13	; 19
     1a8:	64 d1       	rcall	.+712    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     1aa:	90 86       	std	Z+8, r9	; 0x08
     1ac:	99 4e       	sbci	r25, 0xE9	; 233
     1ae:	01 3a       	cpi	r16, 0xA1	; 161
     1b0:	0b e6       	ldi	r16, 0x6B	; 107
     1b2:	f8 b9       	out	0x08, r31	; 8
     1b4:	89 3a       	cpi	r24, 0xA9	; 169
     1b6:	26 ea       	ldi	r18, 0xA6	; 166
     1b8:	14 00       	.word	0x0014	; ????
     1ba:	3b 0b       	sbc	r19, r27
     1bc:	e6 f8       	bld	r14, 6
     1be:	b9 89       	ldd	r27, Y+17	; 0x11
     1c0:	3a 26       	eor	r3, r26
     1c2:	6a 3a       	cpi	r22, 0xAA	; 170
     1c4:	06 3c       	cpi	r16, 0xC6	; 198
     1c6:	09 e6       	ldi	r16, 0x69	; 105
     1c8:	f8 99       	sbic	0x1f, 0	; 31
     1ca:	c3 72       	andi	r28, 0x23	; 35
     1cc:	9d 0c       	add	r9, r13
     1ce:	3d 0a       	sbc	r3, r29
     1d0:	e6 f8       	bld	r14, 6
     1d2:	39 0d       	add	r19, r9
     1d4:	fa a0       	ldd	r15, Y+34	; 0x22
     1d6:	33 02       	muls	r19, r19
     1d8:	3e 09       	sbc	r19, r14
     1da:	e6 f8       	bld	r14, 6
     1dc:	19 e3       	ldi	r17, 0x39	; 57
     1de:	62 9d       	mul	r22, r2
     1e0:	05 3f       	cpi	r16, 0xF5	; 245
     1e2:	0c e6       	ldi	r16, 0x6C	; 108
     1e4:	f8 a9       	ldd	r31, Y+48	; 0x30
     1e6:	53 16       	cp	r5, r19
     1e8:	56 73       	andi	r21, 0x36	; 54
     1ea:	30 a7       	std	Z+40, r19	; 0x28
     1ec:	00 40       	sbci	r16, 0x00	; 0
     1ee:	0d e6       	ldi	r16, 0x6D	; 109
     1f0:	f8 a9       	ldd	r31, Y+48	; 0x30
     1f2:	53 96       	adiw	r26, 0x13	; 19
     1f4:	24 4b       	sbci	r18, 0xB4	; 180
     1f6:	97 25       	eor	r25, r7
     1f8:	de 09       	sbc	r29, r14
     1fa:	41 10       	cpse	r4, r1
     1fc:	e6 f8       	bld	r14, 6
     1fe:	a9 53       	subi	r26, 0x39	; 57
     200:	96 64       	ori	r25, 0x46	; 70
     202:	c9 a0       	ldd	r12, Y+33	; 0x21
     204:	64 49       	sbci	r22, 0x94	; 148
     206:	96 64       	ori	r25, 0x46	; 70
     208:	39 0c       	add	r3, r9
     20a:	42 0d       	add	r20, r2
     20c:	e6 f8       	bld	r14, 6
     20e:	89 43       	sbci	r24, 0x39	; 57
     210:	16 35       	cpi	r17, 0x56	; 86
     212:	6d 51       	subi	r22, 0x1D	; 29
     214:	cb 90       	.word	0x90cb	; ????
     216:	13 43       	sbci	r17, 0x33	; 51
     218:	0b e6       	ldi	r16, 0x6B	; 107
     21a:	f8 a9       	ldd	r31, Y+48	; 0x30
     21c:	53 96       	adiw	r26, 0x13	; 19
     21e:	a4 6d       	ori	r26, 0xD4	; 212
     220:	d1 4e       	sbci	r29, 0xE1	; 225
     222:	44 0b       	sbc	r20, r20
     224:	e6 f8       	bld	r14, 6
     226:	89 43       	sbci	r24, 0x39	; 57
     228:	16 f5       	brtc	.+68     	; 0x26e <__trampolines_end+0x206>
     22a:	2f 43       	sbci	r18, 0x3F	; 63
     22c:	4e 45       	sbci	r20, 0x5E	; 94
     22e:	0e e6       	ldi	r16, 0x6E	; 110
     230:	f8 89       	ldd	r31, Y+16	; 0x10
     232:	83 92       	.word	0x9283	; ????
     234:	a6 43       	sbci	r26, 0x36	; 54
     236:	94 a6       	std	Z+44, r9	; 0x2c
     238:	83 0e       	add	r8, r19
     23a:	03 46       	sbci	r16, 0x63	; 99
     23c:	0d e6       	ldi	r16, 0x6D	; 109
     23e:	f8 89       	ldd	r31, Y+16	; 0x10
     240:	83 92       	.word	0x9283	; ????
     242:	a6 43       	sbci	r26, 0x36	; 54
     244:	94 d6       	rcall	.+3368   	; 0xf6e <u8g2_font_5x8_tf+0x53f>
     246:	69 00       	.word	0x0069	; ????
     248:	47 0d       	add	r20, r7
     24a:	e6 f8       	bld	r14, 6
     24c:	a9 53       	subi	r26, 0x39	; 57
     24e:	96 a4       	ldd	r9, Z+46	; 0x2e
     250:	25 25       	eor	r18, r5
     252:	8b 76       	andi	r24, 0x6B	; 107
     254:	02 48       	sbci	r16, 0x82	; 130
     256:	11 e6       	ldi	r17, 0x61	; 97
     258:	f8 89       	ldd	r31, Y+16	; 0x10
     25a:	59 92       	st	Y+, r5
     25c:	25 59       	subi	r18, 0x95	; 149
     25e:	32 28       	or	r3, r2
     260:	59 92       	st	Y+, r5
     262:	25 59       	subi	r18, 0x95	; 149
     264:	0e 03       	fmul	r16, r22
     266:	49 09       	sbc	r20, r9
     268:	e6 f8       	bld	r14, 6
     26a:	a9 63       	ori	r26, 0x39	; 57
     26c:	da 71       	andi	r29, 0x1A	; 26
     26e:	27 4a       	sbci	r18, 0xA7	; 167
     270:	0b e6       	ldi	r16, 0x6B	; 107
     272:	f8 c9       	rjmp	.-3088   	; 0xfffff664 <__eeprom_end+0xff7ef664>
     274:	63 da       	rcall	.-2874   	; 0xfffff73c <__eeprom_end+0xff7ef73c>
     276:	54 d3       	rcall	.+1704   	; 0x920 <__stack+0x21>
     278:	29 00       	.word	0x0029	; ????
     27a:	4b 0f       	add	r20, r27
     27c:	e6 f8       	bld	r14, 6
     27e:	89 59       	subi	r24, 0x99	; 153
     280:	12 55       	subi	r17, 0x52	; 82
     282:	32 31       	cpi	r19, 0x12	; 18
     284:	c9 a2       	std	Y+33, r12	; 0x21
     286:	5a 0e       	add	r5, r26
     288:	03 4c       	sbci	r16, 0xC3	; 195
     28a:	0a e6       	ldi	r16, 0x6A	; 106
     28c:	f8 89       	ldd	r31, Y+16	; 0x10
     28e:	69 af       	std	Y+57, r22	; 0x39
     290:	83 0e       	add	r8, r19
     292:	03 4d       	sbci	r16, 0xD3	; 211
     294:	0f e6       	ldi	r16, 0x6F	; 111
     296:	f8 89       	ldd	r31, Y+16	; 0x10
     298:	59 62       	ori	r21, 0x29	; 41
     29a:	e9 96       	adiw	r28, 0x39	; 57
     29c:	64 49       	sbci	r22, 0x94	; 148
     29e:	96 64       	ori	r25, 0x46	; 70
     2a0:	39 0c       	add	r3, r9
     2a2:	4e 10       	cpse	r4, r14
     2a4:	e6 f8       	bld	r14, 6
     2a6:	89 59       	subi	r24, 0x99	; 153
     2a8:	92 25       	eor	r25, r2
     2aa:	52 d2       	rcall	.+1188   	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
     2ac:	49 c9       	rjmp	.-3438   	; 0xfffff540 <__eeprom_end+0xff7ef540>
     2ae:	92 2c       	mov	r9, r2
     2b0:	87 01       	movw	r16, r14
     2b2:	4f 0f       	add	r20, r31
     2b4:	e6 f8       	bld	r14, 6
     2b6:	a9 53       	subi	r26, 0x39	; 57
     2b8:	96 64       	ori	r25, 0x46	; 70
     2ba:	49 96       	adiw	r24, 0x19	; 25
     2bc:	64 49       	sbci	r22, 0x94	; 148
     2be:	16 ed       	ldi	r17, 0xD6	; 214
     2c0:	04 50       	subi	r16, 0x04	; 4
     2c2:	0e e6       	ldi	r16, 0x6E	; 110
     2c4:	f8 89       	ldd	r31, Y+16	; 0x10
     2c6:	43 94       	inc	r4
     2c8:	25 59       	subi	r18, 0x95	; 149
     2ca:	32 44       	sbci	r19, 0x42	; 66
     2cc:	69 9d       	mul	r22, r9
     2ce:	06 51       	subi	r16, 0x16	; 22
     2d0:	0f e6       	ldi	r16, 0x6F	; 111
     2d2:	f8 a9       	ldd	r31, Y+48	; 0x30
     2d4:	53 96       	adiw	r26, 0x13	; 19
     2d6:	64 49       	sbci	r22, 0x94	; 148
     2d8:	96 74       	andi	r25, 0x46	; 70
     2da:	ca 94       	dec	r12
     2dc:	1c 06       	cpc	r1, r28
     2de:	52 10       	cpse	r5, r2
     2e0:	e6 f8       	bld	r14, 6
     2e2:	89 43       	sbci	r24, 0x39	; 57
     2e4:	94 25       	eor	r25, r4
     2e6:	59 32       	cpi	r21, 0x29	; 41
     2e8:	44 49       	sbci	r20, 0x94	; 148
     2ea:	16 d5       	rcall	.+2604   	; 0xd18 <u8g2_font_5x8_tf+0x2e9>
     2ec:	72 18       	sub	r7, r2
     2ee:	53 0d       	add	r21, r3
     2f0:	e6 f8       	bld	r14, 6
     2f2:	a9 53       	subi	r26, 0x39	; 57
     2f4:	96 c4       	rjmp	.+2348   	; 0xc22 <u8g2_font_5x8_tf+0x1f3>
     2f6:	73 92       	.word	0x9273	; ????
     2f8:	45 3b       	cpi	r20, 0xB5	; 181
     2fa:	01 54       	subi	r16, 0x41	; 65
     2fc:	0a e6       	ldi	r16, 0x6A	; 106
     2fe:	f8 89       	ldd	r31, Y+16	; 0x10
     300:	83 96       	adiw	r24, 0x23	; 35
     302:	f6 4e       	sbci	r31, 0xE6	; 230
     304:	01 55       	subi	r16, 0x51	; 81
     306:	10 e6       	ldi	r17, 0x60	; 96
     308:	f8 89       	ldd	r31, Y+16	; 0x10
     30a:	59 92       	st	Y+, r5
     30c:	25 59       	subi	r18, 0x95	; 149
     30e:	92 25       	eor	r25, r2
     310:	59 92       	st	Y+, r5
     312:	45 3b       	cpi	r20, 0xB5	; 181
     314:	01 56       	subi	r16, 0x61	; 97
     316:	10 e6       	ldi	r17, 0x60	; 96
     318:	f8 89       	ldd	r31, Y+16	; 0x10
     31a:	59 92       	st	Y+, r5
     31c:	25 59       	subi	r18, 0x95	; 149
     31e:	92 45       	sbci	r25, 0x52	; 82
     320:	49 96       	adiw	r24, 0x19	; 25
     322:	84 39       	cpi	r24, 0x94	; 148
     324:	05 57       	subi	r16, 0x75	; 117
     326:	0f e6       	ldi	r16, 0x6F	; 111
     328:	f8 89       	ldd	r31, Y+16	; 0x10
     32a:	59 92       	st	Y+, r5
     32c:	25 59       	subi	r18, 0x95	; 149
     32e:	92 25       	eor	r25, r2
     330:	7d 4a       	sbci	r23, 0xAD	; 173
     332:	72 02       	muls	r23, r18
     334:	58 10       	cpse	r5, r8
     336:	e6 f8       	bld	r14, 6
     338:	89 59       	subi	r24, 0x99	; 153
     33a:	92 45       	sbci	r25, 0x52	; 82
     33c:	49 58       	subi	r20, 0x89	; 137
     33e:	89 b2       	in	r8, 0x19	; 25
     340:	24 cb       	rjmp	.-2488   	; 0xfffff98a <__eeprom_end+0xff7ef98a>
     342:	61 00       	.word	0x0061	; ????
     344:	59 0d       	add	r21, r9
     346:	e6 f8       	bld	r14, 6
     348:	89 59       	subi	r24, 0x99	; 153
     34a:	92 45       	sbci	r25, 0x52	; 82
     34c:	49 98       	cbi	0x09, 1	; 9
     34e:	b6 53       	subi	r27, 0x36	; 54
     350:	00 5a       	subi	r16, 0xA0	; 160
     352:	0b e6       	ldi	r16, 0x6B	; 107
     354:	f8 89       	ldd	r31, Y+16	; 0x10
     356:	83 1a       	sub	r8, r19
     358:	76 1d       	adc	r23, r6
     35a:	74 18       	sub	r7, r4
     35c:	5b 0a       	sbc	r5, r27
     35e:	e6 f8       	bld	r14, 6
     360:	e1 2d       	mov	r30, r1
     362:	ed eb       	ldi	r30, 0xBD	; 189
     364:	8e 00       	.word	0x008e	; ????
     366:	5c 0b       	sbc	r21, r28
     368:	e6 f8       	bld	r14, 6
     36a:	89 71       	andi	r24, 0x19	; 25
     36c:	1a 57       	subi	r17, 0x7A	; 122
     36e:	e3 1c       	adc	r14, r3
     370:	06 5d       	subi	r16, 0xD6	; 214
     372:	09 e6       	ldi	r16, 0x69	; 105
     374:	f8 e1       	ldi	r31, 0x18	; 24
     376:	b5 df       	rcall	.-150    	; 0x2e2 <__trampolines_end+0x27a>
     378:	76 04       	cpc	r7, r6
     37a:	5e 0b       	sbc	r21, r30
     37c:	e6 f8       	bld	r14, 6
     37e:	f1 30       	cpi	r31, 0x01	; 1
     380:	89 b2       	in	r8, 0x19	; 25
     382:	9c 2f       	mov	r25, r28
     384:	00 5f       	subi	r16, 0xF0	; 240
     386:	08 e6       	ldi	r16, 0x68	; 104
     388:	f8 f9       	.word	0xf9f8	; ????
     38a:	b7 41       	sbci	r27, 0x17	; 23
     38c:	01 60       	ori	r16, 0x01	; 1
     38e:	08 e6       	ldi	r16, 0x68	; 104
     390:	f8 e1       	ldi	r31, 0x18	; 24
     392:	76 3e       	cpi	r23, 0xE6	; 230
     394:	01 61       	ori	r16, 0x11	; 17
     396:	0d e6       	ldi	r16, 0x6D	; 109
     398:	f8 b9       	out	0x08, r31	; 8
     39a:	cd d1       	rcall	.+922    	; 0x736 <__EEPROM_REGION_LENGTH__+0x336>
     39c:	90 64       	ori	r25, 0x40	; 64
     39e:	d1 90       	ld	r13, Z+
     3a0:	c3 00       	.word	0x00c3	; ????
     3a2:	62 0f       	add	r22, r18
     3a4:	e6 f8       	bld	r14, 6
     3a6:	89 69       	ori	r24, 0x99	; 153
     3a8:	3a 44       	sbci	r19, 0x4A	; 74
     3aa:	59 92       	st	Y+, r5
     3ac:	25 59       	subi	r18, 0x95	; 149
     3ae:	32 e4       	ldi	r19, 0x42	; 66
     3b0:	04 63       	ori	r16, 0x34	; 52
     3b2:	0b e6       	ldi	r16, 0x6B	; 107
     3b4:	f8 b9       	out	0x08, r31	; 8
     3b6:	4d 59       	subi	r20, 0x9D	; 157
     3b8:	92 66       	ori	r25, 0x62	; 98
     3ba:	d1 4e       	sbci	r29, 0xE1	; 225
     3bc:	64 10       	cpse	r6, r4
     3be:	e6 f8       	bld	r14, 6
     3c0:	59 d2       	rcall	.+1202   	; 0x874 <__DATA_REGION_LENGTH__+0x74>
     3c2:	68 48       	sbci	r22, 0x88	; 136
     3c4:	b2 24       	eor	r11, r2
     3c6:	4b b2       	in	r4, 0x1b	; 27
     3c8:	68 c8       	rjmp	.-3888   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
     3ca:	61 00       	.word	0x0061	; ????
     3cc:	65 0b       	sbc	r22, r21
     3ce:	e6 f8       	bld	r14, 6
     3d0:	b9 4d       	sbci	r27, 0xD9	; 217
     3d2:	59 32       	cpi	r21, 0x29	; 41
     3d4:	44 f1       	brlt	.+80     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     3d6:	4e 66       	ori	r20, 0x6E	; 110
     3d8:	0b e6       	ldi	r16, 0x6B	; 107
     3da:	f8 c9       	rjmp	.-3088   	; 0xfffff7cc <__eeprom_end+0xff7ef7cc>
     3dc:	5a 54       	subi	r21, 0x4A	; 74
     3de:	1c d3       	rcall	.+1592   	; 0xa18 <__stack+0x119>
     3e0:	3a 09       	sbc	r19, r10
     3e2:	67 0e       	add	r6, r23
     3e4:	e6 f8       	bld	r14, 6
     3e6:	b9 4d       	sbci	r27, 0xD9	; 217
     3e8:	59 92       	st	Y+, r5
     3ea:	25 59       	subi	r18, 0x95	; 149
     3ec:	34 a4       	ldd	r3, Z+44	; 0x2c
     3ee:	d1 04       	cpc	r13, r1
     3f0:	68 10       	cpse	r6, r8
     3f2:	e6 f8       	bld	r14, 6
     3f4:	89 69       	ori	r24, 0x99	; 153
     3f6:	3a 44       	sbci	r19, 0x4A	; 74
     3f8:	59 92       	st	Y+, r5
     3fa:	25 59       	subi	r18, 0x95	; 149
     3fc:	92 e5       	ldi	r25, 0x52	; 82
     3fe:	30 00       	.word	0x0030	; ????
     400:	69 0a       	sbc	r6, r25
     402:	e6 f8       	bld	r14, 6
     404:	c9 39       	cpi	r28, 0x99	; 153
     406:	a6 36       	cpi	r26, 0x66	; 102
     408:	ee 04       	cpc	r14, r14
     40a:	6a 0b       	sbc	r22, r26
     40c:	e6 f8       	bld	r14, 6
     40e:	59 72       	andi	r21, 0x29	; 41
     410:	4c ed       	ldi	r20, 0xDC	; 220
     412:	54 93       	xch	Z, r21
     414:	00 6b       	ori	r16, 0xB0	; 176
     416:	0e e6       	ldi	r16, 0x6E	; 110
     418:	f8 89       	ldd	r31, Y+16	; 0x10
     41a:	69 2d       	mov	r22, r9
     41c:	89 a2       	std	Y+33, r8	; 0x21
     41e:	2d aa       	std	Y+53, r2	; 0x35
     420:	e5 30       	cpi	r30, 0x05	; 5
     422:	00 6c       	ori	r16, 0xC0	; 192
     424:	09 e6       	ldi	r16, 0x69	; 105
     426:	f8 a9       	ldd	r31, Y+48	; 0x30
     428:	6a 8f       	std	Y+26, r22	; 0x1a
     42a:	3b 01       	movw	r6, r22
     42c:	6d 0b       	sbc	r22, r29
     42e:	e6 f8       	bld	r14, 6
     430:	39 29       	or	r19, r9
     432:	51 d2       	rcall	.+1186   	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
     434:	ff 0e       	add	r15, r31
     436:	03 6e       	ori	r16, 0xE3	; 227
     438:	0e e6       	ldi	r16, 0x6E	; 110
     43a:	f8 39       	cpi	r31, 0x98	; 152
     43c:	25 92       	las	Z, r2
     43e:	94 64       	ori	r25, 0x44	; 68
     440:	49 96       	adiw	r24, 0x19	; 25
     442:	64 39       	cpi	r22, 0x94	; 148
     444:	0c 6f       	ori	r16, 0xFC	; 252
     446:	0c e6       	ldi	r16, 0x6C	; 108
     448:	f8 b9       	out	0x08, r31	; 8
     44a:	4d 59       	subi	r20, 0x9D	; 157
     44c:	92 25       	eor	r25, r2
     44e:	59 b4       	in	r5, 0x29	; 41
     450:	13 70       	andi	r17, 0x03	; 3
     452:	0f e6       	ldi	r16, 0x6F	; 111
     454:	f8 39       	cpi	r31, 0x98	; 152
     456:	0d 51       	subi	r16, 0x1D	; 29
     458:	96 64       	ori	r25, 0x46	; 70
     45a:	49 96       	adiw	r24, 0x19	; 25
     45c:	0c 51       	subi	r16, 0x1C	; 28
     45e:	9a 02       	muls	r25, r26
     460:	71 0e       	add	r7, r17
     462:	e6 f8       	bld	r14, 6
     464:	b9 0d       	add	r27, r9
     466:	49 96       	adiw	r24, 0x19	; 25
     468:	64 49       	sbci	r22, 0x94	; 148
     46a:	16 0d       	add	r17, r6
     46c:	69 05       	cpc	r22, r9
     46e:	72 0c       	add	r7, r2
     470:	e6 f8       	bld	r14, 6
     472:	39 25       	eor	r19, r9
     474:	92 94       	swap	r9
     476:	a4 75       	andi	r26, 0x54	; 84
     478:	1a 00       	.word	0x001a	; ????
     47a:	73 0b       	sbc	r23, r19
     47c:	e6 f8       	bld	r14, 6
     47e:	b9 0d       	add	r27, r9
     480:	49 3c       	cpi	r20, 0xC9	; 201
     482:	27 43       	sbci	r18, 0x37	; 55
     484:	4e 74       	andi	r20, 0x4E	; 78
     486:	0c e6       	ldi	r16, 0x6C	; 108
     488:	f8 c9       	rjmp	.-3088   	; 0xfffff87a <__eeprom_end+0xff7ef87a>
     48a:	69 36       	cpi	r22, 0x69	; 105
     48c:	68 69       	ori	r22, 0x98	; 152
     48e:	59 87       	std	Y+9, r21	; 0x09
     490:	01 75       	andi	r16, 0x51	; 81
     492:	0e e6       	ldi	r16, 0x6E	; 110
     494:	f8 39       	cpi	r31, 0x98	; 152
     496:	65 49       	sbci	r22, 0x95	; 149
     498:	96 64       	ori	r25, 0x46	; 70
     49a:	49 64       	ori	r20, 0x49	; 73
     49c:	c9 61       	ori	r28, 0x19	; 25
     49e:	00 76       	andi	r16, 0x60	; 96
     4a0:	0e e6       	ldi	r16, 0x6E	; 110
     4a2:	f8 39       	cpi	r31, 0x98	; 152
     4a4:	65 49       	sbci	r22, 0x95	; 149
     4a6:	96 64       	ori	r25, 0x46	; 70
     4a8:	51 12       	cpse	r5, r17
     4aa:	e6 14       	cp	r14, r6
     4ac:	00 77       	andi	r16, 0x70	; 112
     4ae:	0c e6       	ldi	r16, 0x6C	; 108
     4b0:	f8 39       	cpi	r31, 0x98	; 152
     4b2:	65 49       	sbci	r22, 0x95	; 149
     4b4:	96 f4       	brtc	.+36     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
     4b6:	29 c9       	rjmp	.-3502   	; 0xfffff70a <__eeprom_end+0xff7ef70a>
     4b8:	09 78       	andi	r16, 0x89	; 137
     4ba:	0d e6       	ldi	r16, 0x6D	; 109
     4bc:	f8 39       	cpi	r31, 0x98	; 152
     4be:	65 51       	subi	r22, 0x15	; 21
     4c0:	12 56       	subi	r17, 0x62	; 98
     4c2:	a2 2c       	mov	r10, r2
     4c4:	87 01       	movw	r16, r14
     4c6:	79 0d       	add	r23, r9
     4c8:	e6 f8       	bld	r14, 6
     4ca:	39 65       	ori	r19, 0x59	; 89
     4cc:	49 96       	adiw	r24, 0x19	; 25
     4ce:	64 51       	subi	r22, 0x14	; 20
     4d0:	12 b6       	in	r1, 0x32	; 50
     4d2:	02 7a       	andi	r16, 0xA2	; 162
     4d4:	0b e6       	ldi	r16, 0x6B	; 107
     4d6:	f8 39       	cpi	r31, 0x98	; 152
     4d8:	0d 62       	ori	r16, 0x2D	; 45
     4da:	e3 a0       	ldd	r14, Z+35	; 0x23
     4dc:	c3 00       	.word	0x00c3	; ????
     4de:	7b 0c       	add	r7, r11
     4e0:	e6 f8       	bld	r14, 6
     4e2:	29 61       	ori	r18, 0x19	; 25
     4e4:	5a 8c       	ldd	r5, Y+26	; 0x1a
     4e6:	d3 72       	andi	r29, 0x23	; 35
     4e8:	8e 00       	.word	0x008e	; ????
     4ea:	7c 09       	sbc	r23, r12
     4ec:	e6 f8       	bld	r14, 6
     4ee:	f1 b4       	in	r15, 0x21	; 33
     4f0:	bf 43       	sbci	r27, 0x3F	; 63
     4f2:	00 7d       	andi	r16, 0xD0	; 208
     4f4:	0b e6       	ldi	r16, 0x6B	; 107
     4f6:	f8 e1       	ldi	r31, 0x18	; 24
     4f8:	6a 39       	cpi	r22, 0x9A	; 154
     4fa:	4c 8b       	std	Y+20, r20	; 0x14
     4fc:	39 06       	cpc	r3, r25
     4fe:	7e 0a       	sbc	r7, r30
     500:	e6 f8       	bld	r14, 6
     502:	b9 45       	sbci	r27, 0x59	; 89
     504:	49 a7       	std	Y+41, r20	; 0x29
     506:	9c 15       	cp	r25, r12
     508:	a0 07       	cpc	r26, r16
     50a:	e6 f8       	bld	r14, 6
     50c:	f9 4f       	sbci	r31, 0xF9	; 249
     50e:	00 a1       	ldd	r16, Z+32	; 0x20
     510:	0a e6       	ldi	r16, 0x6A	; 106
     512:	f8 c9       	rjmp	.-3088   	; 0xfffff904 <__eeprom_end+0xff7ef904>
     514:	39 98       	cbi	0x07, 1	; 7
     516:	76 a7       	std	Z+46, r23	; 0x2e
     518:	00 a2       	std	Z+32, r0	; 0x20
     51a:	0d e6       	ldi	r16, 0x6D	; 109
     51c:	f8 59       	subi	r31, 0x98	; 152
     51e:	c3 29       	or	r28, r3
     520:	e9 96       	adiw	r28, 0x39	; 57
     522:	94 c6       	rjmp	.+3368   	; 0x124c <u8g2_font_get_byte+0x8>
     524:	1c 02       	muls	r17, r28
     526:	a3 0d       	add	r26, r3
     528:	e6 f8       	bld	r14, 6
     52a:	c9 5a       	subi	r28, 0xA9	; 169
     52c:	54 1c       	adc	r5, r4
     52e:	d3 28       	or	r13, r3
     530:	49 74       	andi	r20, 0x49	; 73
     532:	02 a4       	ldd	r0, Z+42	; 0x2a
     534:	0f e6       	ldi	r16, 0x6F	; 111
     536:	f8 39       	cpi	r31, 0x98	; 152
     538:	25 a5       	ldd	r18, Z+45	; 0x2d
     53a:	24 ca       	rjmp	.-3000   	; 0xfffff984 <__eeprom_end+0xff7ef984>
     53c:	a2 24       	eor	r10, r2
     53e:	4a ea       	ldi	r20, 0xAA	; 170
     540:	30 00       	.word	0x0030	; ????
     542:	a5 0f       	add	r26, r21
     544:	e6 f8       	bld	r14, 6
     546:	89 59       	subi	r24, 0x99	; 153
     548:	94 44       	sbci	r25, 0x44	; 68
     54a:	83 96       	adiw	r24, 0x23	; 35
     54c:	0d 5a       	subi	r16, 0xAD	; 173
     54e:	9a 53       	subi	r25, 0x3A	; 58
     550:	00 a6       	std	Z+40, r0	; 0x28
     552:	0b e6       	ldi	r16, 0x6B	; 107
     554:	f8 c9       	rjmp	.-3088   	; 0xfffff946 <__eeprom_end+0xff7ef946>
     556:	69 1d       	adc	r22, r9
     558:	4c eb       	ldi	r20, 0xBC	; 188
     55a:	14 00       	.word	0x0014	; ????
     55c:	a7 0c       	add	r10, r7
     55e:	e6 f8       	bld	r14, 6
     560:	f1 29       	or	r31, r1
     562:	d6 a2       	std	Z+38, r13	; 0x26
     564:	36 39       	cpi	r19, 0x96	; 150
     566:	da 09       	sbc	r29, r10
     568:	a8 08       	sbc	r10, r8
     56a:	e6 f8       	bld	r14, 6
     56c:	e1 24       	eor	r14, r1
     56e:	e7 0f       	add	r30, r23
     570:	a9 10       	cpse	r10, r9
     572:	e6 f8       	bld	r14, 6
     574:	a9 43       	sbci	r26, 0x39	; 57
     576:	12 4a       	sbci	r17, 0xA2	; 162
     578:	89 12       	cpse	r8, r25
     57a:	49 89       	ldd	r20, Y+17	; 0x11
     57c:	98 0c       	add	r9, r8
     57e:	39 0c       	add	r3, r9
     580:	aa 0b       	sbc	r26, r26
     582:	e6 f8       	bld	r14, 6
     584:	11 2d       	mov	r17, r1
     586:	09 75       	andi	r16, 0x59	; 89
     588:	68 e7       	ldi	r22, 0x78	; 120
     58a:	0d ab       	std	Y+53, r16	; 0x35
     58c:	0e e6       	ldi	r16, 0x6E	; 110
     58e:	f8 39       	cpi	r31, 0x98	; 152
     590:	26 51       	subi	r18, 0x16	; 22
     592:	12 25       	eor	r17, r2
     594:	61 12       	cpse	r6, r17
     596:	26 39       	cpi	r18, 0x96	; 150
     598:	0c ac       	ldd	r0, Y+60	; 0x3c
     59a:	09 e6       	ldi	r16, 0x69	; 105
     59c:	f8 79       	andi	r31, 0x98	; 152
     59e:	19 d4       	rcall	.+2098   	; 0xdd2 <u8g2_font_5x8_tf+0x3a3>
     5a0:	3a 15       	cp	r19, r10
     5a2:	ad 08       	sbc	r10, r13
     5a4:	e6 f8       	bld	r14, 6
     5a6:	79 da       	rcall	.-2830   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     5a8:	39 02       	muls	r19, r25
     5aa:	ae 10       	cpse	r10, r14
     5ac:	e6 f8       	bld	r14, 6
     5ae:	a9 43       	sbci	r26, 0x39	; 57
     5b0:	12 2a       	or	r1, r18
     5b2:	96 48       	sbci	r25, 0x86	; 134
     5b4:	89 c4       	rjmp	.+2322   	; 0xec8 <u8g2_font_5x8_tf+0x499>
     5b6:	64 c8       	rjmp	.-3896   	; 0xfffff680 <__eeprom_end+0xff7ef680>
     5b8:	61 00       	.word	0x0061	; ????
     5ba:	af 09       	sbc	r26, r15
     5bc:	e6 f8       	bld	r14, 6
     5be:	d1 41       	sbci	r29, 0x11	; 17
     5c0:	e7 67       	ori	r30, 0x77	; 119
     5c2:	00 b0       	in	r0, 0x00	; 0
     5c4:	0a e6       	ldi	r16, 0x6A	; 106
     5c6:	f8 11       	cpse	r31, r8
     5c8:	2d 6a       	ori	r18, 0xAD	; 173
     5ca:	d3 f9       	bld	r29, 3
     5cc:	04 b1       	in	r16, 0x04	; 4
     5ce:	0d e6       	ldi	r16, 0x6D	; 109
     5d0:	f8 c9       	rjmp	.-3088   	; 0xfffff9c2 <__eeprom_end+0xff7ef9c2>
     5d2:	69 36       	cpi	r22, 0x69	; 105
     5d4:	68 69       	ori	r22, 0x98	; 152
     5d6:	0e 0d       	add	r16, r14
     5d8:	3a 0c       	add	r3, r10
     5da:	b2 0b       	sbc	r27, r18
     5dc:	e6 b8       	out	0x06, r14	; 6
     5de:	c2 24       	eor	r12, r2
     5e0:	0d c3       	rjmp	.+1562   	; 0xbfc <u8g2_font_5x8_tf+0x1cd>
     5e2:	9d 4f       	sbci	r25, 0xFD	; 253
     5e4:	00 b3       	in	r16, 0x10	; 16
     5e6:	0a e6       	ldi	r16, 0x6A	; 106
     5e8:	78 e4       	ldi	r23, 0x48	; 72
     5ea:	30 ce       	rjmp	.-928    	; 0x24c <__trampolines_end+0x1e4>
     5ec:	74 be       	out	0x34, r7	; 52
     5ee:	01 b4       	in	r0, 0x21	; 33
     5f0:	09 e6       	ldi	r16, 0x69	; 105
     5f2:	f8 29       	or	r31, r8
     5f4:	61 9d       	mul	r22, r1
     5f6:	8f 00       	.word	0x008f	; ????
     5f8:	b5 0e       	add	r11, r21
     5fa:	e6 f8       	bld	r14, 6
     5fc:	39 65       	ori	r19, 0x59	; 89
     5fe:	49 96       	adiw	r24, 0x19	; 25
     600:	64 49       	sbci	r22, 0x94	; 148
     602:	a4 2c       	mov	r10, r4
     604:	d5 14       	cp	r13, r5
     606:	b6 12       	cpse	r11, r22
     608:	e6 f8       	bld	r14, 6
     60a:	e1 21       	and	r30, r1
     60c:	59 92       	st	Y+, r5
     60e:	25 59       	subi	r18, 0x95	; 149
     610:	22 25       	eor	r18, r2
     612:	4b b2       	in	r4, 0x1b	; 27
     614:	24 4b       	sbci	r18, 0xB4	; 180
     616:	72 18       	sub	r7, r2
     618:	b7 08       	sbc	r11, r7
     61a:	e6 f8       	bld	r14, 6
     61c:	39 da       	rcall	.-2958   	; 0xfffffa90 <__eeprom_end+0xff7efa90>
     61e:	39 02       	muls	r19, r25
     620:	b8 08       	sbc	r11, r8
     622:	e6 f8       	bld	r14, 6
     624:	f9 7b       	andi	r31, 0xB9	; 185
     626:	a6 01       	movw	r20, r12
     628:	b9 09       	sbc	r27, r9
     62a:	e6 b8       	out	0x06, r14	; 6
     62c:	42 b5       	in	r20, 0x22	; 34
     62e:	b8 f3       	brcs	.-18     	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
     630:	09 ba       	out	0x19, r0	; 25
     632:	0b e6       	ldi	r16, 0x6B	; 107
     634:	b8 c2       	rjmp	.+1392   	; 0xba6 <u8g2_font_5x8_tf+0x177>
     636:	24 cc       	rjmp	.-1976   	; 0xfffffe80 <__eeprom_end+0xff7efe80>
     638:	b1 9d       	mul	r27, r1
     63a:	4f 00       	.word	0x004f	; ????
     63c:	bb 0e       	add	r11, r27
     63e:	e6 f8       	bld	r14, 6
     640:	39 25       	eor	r19, r9
     642:	61 12       	cpse	r6, r17
     644:	26 51       	subi	r18, 0x16	; 22
     646:	12 25       	eor	r17, r2
     648:	39 05       	cpc	r19, r9
     64a:	bc 0e       	add	r11, r28
     64c:	e6 78       	andi	r30, 0x86	; 134
     64e:	42 b5       	in	r20, 0x22	; 34
     650:	25 d4       	rcall	.+2122   	; 0xe9c <u8g2_font_5x8_tf+0x46d>
     652:	92 6c       	ori	r25, 0xC2	; 194
     654:	08 d3       	rcall	.+1552   	; 0xc66 <u8g2_font_5x8_tf+0x237>
     656:	9c 00       	.word	0x009c	; ????
     658:	bd 0d       	add	r27, r13
     65a:	e6 78       	andi	r30, 0x86	; 134
     65c:	42 b5       	in	r20, 0x22	; 34
     65e:	25 4c       	sbci	r18, 0xC5	; 197
     660:	d2 b0       	in	r13, 0x02	; 2
     662:	ba c3       	rjmp	.+1908   	; 0xdd8 <u8g2_font_5x8_tf+0x3a9>
     664:	00 be       	out	0x30, r0	; 48
     666:	0f e6       	ldi	r16, 0x6F	; 111
     668:	38 e4       	ldi	r19, 0x48	; 72
     66a:	30 ce       	rjmp	.-928    	; 0x2cc <__trampolines_end+0x264>
     66c:	94 50       	subi	r25, 0x04	; 4
     66e:	4b b2       	in	r4, 0x1b	; 27
     670:	21 4c       	sbci	r18, 0xC1	; 193
     672:	73 02       	muls	r23, r19
     674:	bf 0b       	sbc	r27, r31
     676:	e6 f8       	bld	r14, 6
     678:	c9 39       	cpi	r28, 0x99	; 153
     67a:	98 86       	std	Y+8, r9	; 0x08
     67c:	b5 68       	ori	r27, 0x85	; 133
     67e:	27 c0       	rjmp	.+78     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
     680:	12 e6       	ldi	r17, 0x62	; 98
     682:	78 e2       	ldi	r23, 0x28	; 40
     684:	1c 9b       	sbis	0x03, 4	; 3
     686:	b2 24       	eor	r11, r2
     688:	4b 06       	cpc	r4, r27
     68a:	25 4b       	sbci	r18, 0xB5	; 181
     68c:	b2 24       	eor	r11, r2
     68e:	cb 61       	ori	r28, 0x1B	; 27
     690:	00 c1       	rjmp	.+512    	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     692:	12 e6       	ldi	r17, 0x62	; 98
     694:	f8 c2       	rjmp	.+1520   	; 0xc86 <u8g2_font_5x8_tf+0x257>
     696:	1c 9b       	sbis	0x03, 4	; 3
     698:	b2 24       	eor	r11, r2
     69a:	4b 06       	cpc	r4, r27
     69c:	25 4b       	sbci	r18, 0xB5	; 181
     69e:	b2 24       	eor	r11, r2
     6a0:	cb 61       	ori	r28, 0x1B	; 27
     6a2:	00 c2       	rjmp	.+1024   	; 0xaa4 <u8g2_font_5x8_tf+0x75>
     6a4:	12 e6       	ldi	r17, 0x62	; 98
     6a6:	b8 c2       	rjmp	.+1392   	; 0xc18 <u8g2_font_5x8_tf+0x1e9>
     6a8:	24 87       	std	Z+12, r18	; 0x0c
     6aa:	a6 2c       	mov	r10, r6
     6ac:	c9 92       	st	Y+, r12
     6ae:	41 c9       	rjmp	.-3454   	; 0xfffff932 <__eeprom_end+0xff7ef932>
     6b0:	92 2c       	mov	r9, r2
     6b2:	c9 72       	andi	r28, 0x29	; 41
     6b4:	18 c3       	rjmp	.+1584   	; 0xce6 <u8g2_font_5x8_tf+0x2b7>
     6b6:	13 e6       	ldi	r17, 0x63	; 99
     6b8:	78 94       	sei
     6ba:	8a 0e       	add	r8, r26
     6bc:	4d 59       	subi	r20, 0x9D	; 157
     6be:	92 25       	eor	r25, r2
     6c0:	83 92       	.word	0x9283	; ????
     6c2:	25 59       	subi	r18, 0x95	; 149
     6c4:	92 e5       	ldi	r25, 0x52	; 82
     6c6:	30 00       	.word	0x0030	; ????
     6c8:	c4 12       	cpse	r12, r20
     6ca:	e6 f8       	bld	r14, 6
     6cc:	93 1c       	adc	r9, r3
     6ce:	9a b2       	in	r9, 0x1a	; 26
     6d0:	24 4b       	sbci	r18, 0xB4	; 180
     6d2:	06 25       	eor	r16, r6
     6d4:	4b b2       	in	r4, 0x1b	; 27
     6d6:	24 cb       	rjmp	.-2488   	; 0xfffffd20 <__eeprom_end+0xff7efd20>
     6d8:	61 00       	.word	0x0061	; ????
     6da:	c5 12       	cpse	r12, r21
     6dc:	e6 b8       	out	0x06, r14	; 6
     6de:	c2 24       	eor	r12, r2
     6e0:	0c a7       	std	Y+44, r16	; 0x2c
     6e2:	2c c9       	rjmp	.-3496   	; 0xfffff93c <__eeprom_end+0xff7ef93c>
     6e4:	92 41       	sbci	r25, 0x12	; 18
     6e6:	c9 92       	st	Y+, r12
     6e8:	2c c9       	rjmp	.-3496   	; 0xfffff942 <__eeprom_end+0xff7ef942>
     6ea:	72 18       	sub	r7, r2
     6ec:	c6 10       	cpse	r12, r6
     6ee:	e6 f8       	bld	r14, 6
     6f0:	a9 43       	sbci	r26, 0x39	; 57
     6f2:	52 4b       	sbci	r21, 0xB2	; 178
     6f4:	b2 21       	and	r27, r2
     6f6:	4a b2       	in	r4, 0x1a	; 26
     6f8:	24 4b       	sbci	r18, 0xB4	; 180
     6fa:	76 18       	sub	r7, r6
     6fc:	c7 0d       	add	r28, r7
     6fe:	e6 f8       	bld	r14, 6
     700:	a9 53       	subi	r26, 0x39	; 57
     702:	96 a4       	ldd	r9, Z+46	; 0x2e
     704:	6d d1       	rcall	.+730    	; 0x9e0 <__stack+0xe1>
     706:	9a 69       	ori	r25, 0x9A	; 154
     708:	00 c8       	rjmp	.-4096   	; 0xfffff70a <__eeprom_end+0xff7ef70a>
     70a:	0f e6       	ldi	r16, 0x6F	; 111
     70c:	78 e2       	ldi	r23, 0x28	; 40
     70e:	1c 1a       	sub	r1, r28
     710:	94 34       	cpi	r25, 0x44	; 68
     712:	1d a2       	std	Y+37, r1	; 0x25
     714:	34 1d       	adc	r19, r4
     716:	74 18       	sub	r7, r4
     718:	c9 0f       	add	r28, r25
     71a:	e6 f8       	bld	r14, 6
     71c:	c2 1c       	adc	r12, r2
     71e:	1a 94       	dec	r1
     720:	34 1d       	adc	r19, r4
     722:	a2 34       	cpi	r26, 0x42	; 66
     724:	1d 74       	andi	r17, 0x4D	; 77
     726:	18 ca       	rjmp	.-3024   	; 0xfffffb58 <__eeprom_end+0xff7efb58>
     728:	10 e6       	ldi	r17, 0x60	; 96
     72a:	b8 c2       	rjmp	.+1392   	; 0xc9c <u8g2_font_5x8_tf+0x26d>
     72c:	24 47       	sbci	r18, 0x74	; 116
     72e:	06 25       	eor	r16, r6
     730:	4d 87       	std	Y+13, r20	; 0x0d
     732:	28 4d       	sbci	r18, 0xD8	; 216
     734:	07 1d       	adc	r16, r7
     736:	06 cb       	rjmp	.-2548   	; 0xfffffd44 <__eeprom_end+0xff7efd44>
     738:	0f e6       	ldi	r16, 0x6F	; 111
     73a:	f8 93       	.word	0x93f8	; ????
     73c:	1c 19       	sub	r17, r12
     73e:	94 34       	cpi	r25, 0x44	; 68
     740:	1d a2       	std	Y+37, r1	; 0x25
     742:	34 1d       	adc	r19, r4
     744:	74 18       	sub	r7, r4
     746:	cc 0b       	sbc	r28, r28
     748:	e6 78       	andi	r30, 0x86	; 134
     74a:	e2 1c       	adc	r14, r2
     74c:	1b d3       	rcall	.+1590   	; 0xd84 <u8g2_font_5x8_tf+0x355>
     74e:	8e 3b       	cpi	r24, 0xBE	; 190
     750:	01 cd       	rjmp	.-1534   	; 0x154 <__trampolines_end+0xec>
     752:	0b e6       	ldi	r16, 0x6B	; 107
     754:	f8 c2       	rjmp	.+1520   	; 0xd46 <u8g2_font_5x8_tf+0x317>
     756:	1c 1b       	sub	r17, r28
     758:	d3 8e       	std	Z+27, r13	; 0x1b
     75a:	3b 01       	movw	r6, r22
     75c:	ce 0b       	sbc	r28, r30
     75e:	e6 b8       	out	0x06, r14	; 6
     760:	c2 24       	eor	r12, r2
     762:	87 c6       	rjmp	.+3342   	; 0x1472 <u8g2_add_vector_x+0xc>
     764:	b4 e3       	ldi	r27, 0x34	; 52
     766:	4e cf       	rjmp	.-356    	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
     768:	0b e6       	ldi	r16, 0x6B	; 107
     76a:	f8 93       	.word	0x93f8	; ????
     76c:	1c 1a       	sub	r1, r28
     76e:	d3 8e       	std	Z+27, r13	; 0x1b
     770:	3b 01       	movw	r6, r22
     772:	d0 0c       	add	r13, r0
     774:	e6 f8       	bld	r14, 6
     776:	a9 5b       	subi	r26, 0xB9	; 185
     778:	d4 b2       	in	r13, 0x14	; 20
     77a:	44 9d       	mul	r20, r4
     77c:	76 02       	muls	r23, r22
     77e:	d1 12       	cpse	r13, r17
     780:	e6 78       	andi	r30, 0x86	; 134
     782:	94 8a       	std	Z+20, r9	; 0x14
     784:	8e 64       	ori	r24, 0x4E	; 78
     786:	49 96       	adiw	r24, 0x19	; 25
     788:	48 49       	sbci	r20, 0x98	; 152
     78a:	27 25       	eor	r18, r7
     78c:	4b b2       	in	r4, 0x1b	; 27
     78e:	1c 06       	cpc	r1, r28
     790:	d2 10       	cpse	r13, r2
     792:	e6 78       	andi	r30, 0x86	; 134
     794:	e2 1c       	adc	r14, r2
     796:	9b b2       	in	r9, 0x1b	; 27
     798:	24 4b       	sbci	r18, 0xB4	; 180
     79a:	b2 24       	eor	r11, r2
     79c:	4b b2       	in	r4, 0x1b	; 27
     79e:	68 27       	eor	r22, r24
     7a0:	d3 10       	cpse	r13, r3
     7a2:	e6 f8       	bld	r14, 6
     7a4:	c2 1c       	adc	r12, r2
     7a6:	9b b2       	in	r9, 0x1b	; 27
     7a8:	24 4b       	sbci	r18, 0xB4	; 180
     7aa:	b2 24       	eor	r11, r2
     7ac:	4b b2       	in	r4, 0x1b	; 27
     7ae:	68 27       	eor	r22, r24
     7b0:	d4 11       	cpse	r29, r4
     7b2:	e6 b8       	out	0x06, r14	; 6
     7b4:	c2 24       	eor	r12, r2
     7b6:	87 a6       	std	Z+47, r8	; 0x2f
     7b8:	2c c9       	rjmp	.-3496   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
     7ba:	92 2c       	mov	r9, r2
     7bc:	c9 92       	st	Y+, r12
     7be:	2c da       	rcall	.-2984   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
     7c0:	09 d5       	rcall	.+2578   	; 0x11d4 <u8g2_SendBuffer+0x8>
     7c2:	11 e6       	ldi	r17, 0x61	; 97
     7c4:	78 94       	sei
     7c6:	8a 0e       	add	r8, r26
     7c8:	4d 59       	subi	r20, 0x9D	; 157
     7ca:	92 25       	eor	r25, r2
     7cc:	59 92       	st	Y+, r5
     7ce:	25 59       	subi	r18, 0x95	; 149
     7d0:	b4 13       	cpse	r27, r20
     7d2:	d6 10       	cpse	r13, r6
     7d4:	e6 f8       	bld	r14, 6
     7d6:	93 1c       	adc	r9, r3
     7d8:	9a b2       	in	r9, 0x1a	; 26
     7da:	24 4b       	sbci	r18, 0xB4	; 180
     7dc:	b2 24       	eor	r11, r2
     7de:	4b b2       	in	r4, 0x1b	; 27
     7e0:	68 27       	eor	r22, r24
     7e2:	d7 0c       	add	r13, r7
     7e4:	e6 f8       	bld	r14, 6
     7e6:	d9 4a       	sbci	r29, 0xA9	; 169
     7e8:	49 58       	subi	r20, 0x89	; 137
     7ea:	89 b2       	in	r8, 0x19	; 25
     7ec:	9c 0a       	sbc	r9, r28
     7ee:	d8 0e       	add	r13, r24
     7f0:	e6 f8       	bld	r14, 6
     7f2:	49 d1       	rcall	.+658    	; 0xa86 <u8g2_font_5x8_tf+0x57>
     7f4:	14 29       	or	r17, r4
     7f6:	fd 8b       	std	Y+21, r31	; 0x15
     7f8:	14 4d       	sbci	r17, 0xD4	; 212
     7fa:	39 08       	sbc	r3, r9
     7fc:	d9 11       	cpse	r29, r9
     7fe:	e6 78       	andi	r30, 0x86	; 134
     800:	e2 1c       	adc	r14, r2
     802:	ca 92       	st	-Y, r12
     804:	2c c9       	rjmp	.-3496   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
     806:	92 2c       	mov	r9, r2
     808:	c9 92       	st	Y+, r12
     80a:	2c da       	rcall	.-2984   	; 0xfffffc64 <__eeprom_end+0xff7efc64>
     80c:	09 da       	rcall	.-3054   	; 0xfffffc20 <__eeprom_end+0xff7efc20>
     80e:	11 e6       	ldi	r17, 0x61	; 97
     810:	f8 c2       	rjmp	.+1520   	; 0xe02 <u8g2_font_5x8_tf+0x3d3>
     812:	1c ca       	rjmp	.-3016   	; 0xfffffc4c <__eeprom_end+0xff7efc4c>
     814:	92 2c       	mov	r9, r2
     816:	c9 92       	st	Y+, r12
     818:	2c c9       	rjmp	.-3496   	; 0xfffffa72 <__eeprom_end+0xff7efa72>
     81a:	92 2c       	mov	r9, r2
     81c:	da 09       	sbc	r29, r10
     81e:	db 12       	cpse	r13, r27
     820:	e6 b8       	out	0x06, r14	; 6
     822:	c2 24       	eor	r12, r2
     824:	47 b2       	in	r4, 0x17	; 23
     826:	24 4b       	sbci	r18, 0xB4	; 180
     828:	b2 24       	eor	r11, r2
     82a:	4b b2       	in	r4, 0x1b	; 27
     82c:	24 8b       	std	Z+20, r18	; 0x14
     82e:	76 02       	muls	r23, r22
     830:	dc 11       	cpse	r29, r12
     832:	e6 f8       	bld	r14, 6
     834:	93 1c       	adc	r9, r3
     836:	c9 92       	st	Y+, r12
     838:	2c c9       	rjmp	.-3496   	; 0xfffffa92 <__eeprom_end+0xff7efa92>
     83a:	92 2c       	mov	r9, r2
     83c:	c9 92       	st	Y+, r12
     83e:	2c da       	rcall	.-2984   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     840:	09 dd       	rcall	.-1518   	; 0x254 <__trampolines_end+0x1ec>
     842:	0e e6       	ldi	r16, 0x6E	; 110
     844:	f8 c2       	rjmp	.+1520   	; 0xe36 <u8g2_font_5x8_tf+0x407>
     846:	1c ca       	rjmp	.-3016   	; 0xfffffc80 <__eeprom_end+0xff7efc80>
     848:	92 2c       	mov	r9, r2
     84a:	4a c2       	rjmp	.+1172   	; 0xce0 <u8g2_font_5x8_tf+0x2b1>
     84c:	b4 9d       	mul	r27, r4
     84e:	02 de       	rcall	.-1020   	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     850:	0c e6       	ldi	r16, 0x6C	; 108
     852:	f8 a9       	ldd	r31, Y+48	; 0x30
     854:	e9 16       	cp	r14, r25
     856:	f5 b4       	in	r15, 0x25	; 37
     858:	e5 24       	eor	r14, r5
     85a:	00 df       	rcall	.-512    	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
     85c:	0e e6       	ldi	r16, 0x6E	; 110
     85e:	f8 a9       	ldd	r31, Y+48	; 0x30
     860:	53 96       	adiw	r26, 0x13	; 19
     862:	44 95       	.word	0x9544	; ????
     864:	2c aa       	std	Y+52, r2	; 0x34
     866:	25 89       	ldd	r18, Z+21	; 0x15
     868:	4e e0       	ldi	r20, 0x0E	; 14
     86a:	0e e6       	ldi	r16, 0x6E	; 110
     86c:	f8 e1       	ldi	r31, 0x18	; 24
     86e:	3a 36       	cpi	r19, 0x6A	; 106
     870:	47 43       	sbci	r20, 0x37	; 55
     872:	92 45       	sbci	r25, 0x52	; 82
     874:	43 0e       	add	r4, r19
     876:	03 e1       	ldi	r16, 0x13	; 19
     878:	0f e6       	ldi	r16, 0x6F	; 111
     87a:	f8 29       	or	r31, r8
     87c:	61 8e       	std	Z+25, r6	; 0x19
     87e:	cd d1       	rcall	.+922    	; 0xc1a <u8g2_font_5x8_tf+0x1eb>
     880:	90 64       	ori	r25, 0x40	; 64
     882:	d1 90       	ld	r13, Z+
     884:	c3 00       	.word	0x00c3	; ????
     886:	e2 0f       	add	r30, r18
     888:	e6 f8       	bld	r14, 6
     88a:	f1 30       	cpi	r31, 0x01	; 1
     88c:	c9 a1       	ldd	r28, Y+33	; 0x21
     88e:	39 1a       	sub	r3, r25
     890:	92 2c       	mov	r9, r2
     892:	1a 72       	andi	r17, 0x2A	; 42
     894:	18 e3       	ldi	r17, 0x38	; 56
     896:	10 e6       	ldi	r17, 0x60	; 96
     898:	f8 61       	ori	r31, 0x18	; 24
     89a:	a5 a2       	std	Z+37, r10	; 0x25
     89c:	43 73       	andi	r20, 0x33	; 51
     89e:	34 24       	eor	r3, r4
     8a0:	59 34       	cpi	r21, 0x49	; 73
     8a2:	e4 30       	cpi	r30, 0x04	; 4
     8a4:	00 e4       	ldi	r16, 0x40	; 64
     8a6:	0f e6       	ldi	r16, 0x6F	; 111
     8a8:	f8 a9       	ldd	r31, Y+48	; 0x30
     8aa:	49 0e       	add	r4, r25
     8ac:	cd d1       	rcall	.+922    	; 0xc48 <u8g2_font_5x8_tf+0x219>
     8ae:	90 64       	ori	r25, 0x40	; 64
     8b0:	d1 90       	ld	r13, Z+
     8b2:	c3 00       	.word	0x00c3	; ????
     8b4:	e5 0f       	add	r30, r21
     8b6:	e6 f8       	bld	r14, 6
     8b8:	f1 30       	cpi	r31, 0x01	; 1
     8ba:	09 c3       	rjmp	.+1554   	; 0xece <u8g2_font_5x8_tf+0x49f>
     8bc:	39 1a       	sub	r3, r25
     8be:	92 2c       	mov	r9, r2
     8c0:	1a 72       	andi	r17, 0x2A	; 42
     8c2:	18 e6       	ldi	r17, 0x68	; 104
     8c4:	0d e6       	ldi	r16, 0x6D	; 109
     8c6:	f8 b9       	out	0x08, r31	; 8
     8c8:	8d 49       	sbci	r24, 0x9D	; 157
     8ca:	34 25       	eor	r19, r4
     8cc:	e1 90       	ld	r14, Z+
     8ce:	c3 00       	.word	0x00c3	; ????
     8d0:	e7 0d       	add	r30, r7
     8d2:	e6 f8       	bld	r14, 6
     8d4:	b9 4d       	sbci	r27, 0xD9	; 217
     8d6:	59 92       	st	Y+, r5
     8d8:	66 d1       	rcall	.+716    	; 0xba6 <u8g2_font_5x8_tf+0x177>
     8da:	9a 69       	ori	r25, 0x9A	; 154
     8dc:	00 e8       	ldi	r16, 0x80	; 128
     8de:	0d e6       	ldi	r16, 0x6D	; 109
     8e0:	f8 e1       	ldi	r31, 0x18	; 24
     8e2:	3a 36       	cpi	r19, 0x6A	; 106
     8e4:	65 c9       	rjmp	.-3382   	; 0xfffffbb0 <__eeprom_end+0xff7efbb0>
     8e6:	10 c5       	rjmp	.+2592   	; 0x1308 <u8g2_read_font_info+0x8a>
     8e8:	3b 01       	movw	r6, r22
     8ea:	e9 0d       	add	r30, r9
     8ec:	e6 f8       	bld	r14, 6
     8ee:	29 61       	ori	r18, 0x19	; 25
     8f0:	8e 4d       	sbci	r24, 0xDE	; 222
     8f2:	59 32       	cpi	r21, 0x29	; 41
     8f4:	44 f1       	brlt	.+80     	; 0x946 <__stack+0x47>
     8f6:	4e ea       	ldi	r20, 0xAE	; 174
     8f8:	0e e6       	ldi	r16, 0x6E	; 110
     8fa:	f8 f1       	brcs	.+126    	; 0x97a <__stack+0x7b>
     8fc:	30 c9       	rjmp	.-3488   	; 0xfffffb5e <__eeprom_end+0xff7efb5e>
     8fe:	a1 29       	or	r26, r1
     900:	4b 86       	std	Y+11, r4	; 0x0b
     902:	28 de       	rcall	.-944    	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
     904:	09 eb       	ldi	r16, 0xB9	; 185
     906:	0d e6       	ldi	r16, 0x6D	; 109
     908:	f8 a9       	ldd	r31, Y+48	; 0x30
     90a:	49 0e       	add	r4, r25
     90c:	4d 59       	subi	r20, 0x9D	; 157
     90e:	32 44       	sbci	r19, 0x42	; 66
     910:	f1 4e       	sbci	r31, 0xE1	; 225
     912:	ec 0a       	sbc	r14, r28
     914:	e6 f8       	bld	r14, 6
     916:	e1 3a       	cpi	r30, 0xA1	; 161
     918:	a6 36       	cpi	r26, 0x66	; 102
     91a:	ee 04       	cpc	r14, r14
     91c:	ed 0b       	sbc	r30, r29
     91e:	e6 f8       	bld	r14, 6
     920:	29 61       	ori	r18, 0x19	; 25
     922:	8e a9       	ldd	r24, Y+54	; 0x36
     924:	8d 3b       	cpi	r24, 0xBD	; 189
     926:	01 ee       	ldi	r16, 0xE1	; 225
     928:	0b e6       	ldi	r16, 0x6B	; 107
     92a:	f8 f1       	brcs	.+126    	; 0x9aa <__stack+0xab>
     92c:	30 c9       	rjmp	.-3488   	; 0xfffffb8e <__eeprom_end+0xff7efb8e>
     92e:	21 b5       	in	r18, 0x21	; 33
     930:	71 27       	eor	r23, r17
     932:	ef 0b       	sbc	r30, r31
     934:	e6 f8       	bld	r14, 6
     936:	a9 49       	sbci	r26, 0x99	; 153
     938:	0e a9       	ldd	r16, Y+54	; 0x36
     93a:	8d 3b       	cpi	r24, 0xBD	; 189
     93c:	01 f0       	breq	.+0      	; 0x93e <__stack+0x3f>
     93e:	10 e6       	ldi	r17, 0x60	; 96
     940:	f8 93       	.word	0x93f8	; ????
     942:	b0 12       	cpse	r11, r16
     944:	47 43       	sbci	r20, 0x37	; 55
     946:	92 25       	eor	r25, r2
     948:	59 92       	st	Y+, r5
     94a:	45 3b       	cpi	r20, 0xB5	; 181
     94c:	01 f1       	breq	.+64     	; 0x98e <__stack+0x8f>
     94e:	11 e6       	ldi	r17, 0x61	; 97
     950:	f8 61       	ori	r31, 0x18	; 24
     952:	a5 a2       	std	Z+37, r10	; 0x25
     954:	23 89       	ldd	r18, Z+19	; 0x13
     956:	24 25       	eor	r18, r4
     958:	59 92       	st	Y+, r5
     95a:	25 59       	subi	r18, 0x95	; 149
     95c:	0e 03       	fmul	r16, r22
     95e:	f2 0d       	add	r31, r2
     960:	e6 f8       	bld	r14, 6
     962:	e1 3a       	cpi	r30, 0xA1	; 161
     964:	36 65       	ori	r19, 0x56	; 86
     966:	49 96       	adiw	r24, 0x19	; 25
     968:	64 d1       	rcall	.+712    	; 0xc32 <u8g2_font_5x8_tf+0x203>
     96a:	4e f3       	brts	.-46     	; 0x93e <__stack+0x3f>
     96c:	0e e6       	ldi	r16, 0x6E	; 110
     96e:	f8 29       	or	r31, r8
     970:	61 8e       	std	Z+25, r6	; 0x19
     972:	4d 59       	subi	r20, 0x9D	; 157
     974:	92 25       	eor	r25, r2
     976:	59 b4       	in	r5, 0x29	; 41
     978:	13 f4       	brvc	.+4      	; 0x97e <__stack+0x7f>
     97a:	0f e6       	ldi	r16, 0x6F	; 111
     97c:	f8 f1       	brcs	.+126    	; 0x9fc <__stack+0xfd>
     97e:	30 c9       	rjmp	.-3488   	; 0xfffffbe0 <__eeprom_end+0xff7efbe0>
     980:	a1 29       	or	r26, r1
     982:	4b b2       	in	r4, 0x1b	; 27
     984:	24 8b       	std	Z+20, r18	; 0x14
     986:	76 02       	muls	r23, r22
     988:	f5 0f       	add	r31, r21
     98a:	e6 f8       	bld	r14, 6
     98c:	61 a5       	ldd	r22, Z+41	; 0x29
     98e:	a2 43       	sbci	r26, 0x32	; 50
     990:	53 96       	adiw	r26, 0x13	; 19
     992:	64 49       	sbci	r22, 0x94	; 148
     994:	16 ed       	ldi	r17, 0xD6	; 214
     996:	04 f6       	brge	.-128    	; 0x918 <__stack+0x19>
     998:	0e e6       	ldi	r16, 0x6E	; 110
     99a:	f8 a9       	ldd	r31, Y+48	; 0x30
     99c:	49 0e       	add	r4, r25
     99e:	4d 59       	subi	r20, 0x9D	; 157
     9a0:	92 25       	eor	r25, r2
     9a2:	59 b4       	in	r5, 0x29	; 41
     9a4:	13 f7       	brvc	.-60     	; 0x96a <__stack+0x6b>
     9a6:	0b e6       	ldi	r16, 0x6B	; 107
     9a8:	f8 59       	subi	r31, 0x98	; 152
     9aa:	73 68       	ori	r23, 0x83	; 131
     9ac:	d0 a1       	ldd	r29, Z+32	; 0x20
     9ae:	9c 01       	movw	r18, r24
     9b0:	f8 0d       	add	r31, r8
     9b2:	e6 f8       	bld	r14, 6
     9b4:	b9 0d       	add	r27, r9
     9b6:	49 a4       	ldd	r4, Y+41	; 0x29
     9b8:	b4 48       	sbci	r27, 0x84	; 132
     9ba:	c9 90       	ld	r12, Y+
     9bc:	13 f9       	bld	r17, 3
     9be:	0e e6       	ldi	r16, 0x6E	; 110
     9c0:	f8 e1       	ldi	r31, 0x18	; 24
     9c2:	3a 94       	dec	r3
     9c4:	25 59       	subi	r18, 0x95	; 149
     9c6:	92 25       	eor	r25, r2
     9c8:	59 b4       	in	r5, 0x29	; 41
     9ca:	13 fa       	bst	r1, 3
     9cc:	0f e6       	ldi	r16, 0x6F	; 111
     9ce:	f8 29       	or	r31, r8
     9d0:	61 0e       	add	r6, r17
     9d2:	65 49       	sbci	r22, 0x95	; 149
     9d4:	96 64       	ori	r25, 0x46	; 70
     9d6:	49 16       	cp	r4, r25
     9d8:	ed 04       	cpc	r14, r13
     9da:	fb 10       	cpse	r15, r11
     9dc:	e6 f8       	bld	r14, 6
     9de:	f1 30       	cpi	r31, 0x01	; 1
     9e0:	c9 91       	ld	r28, Y+	; undefined
     9e2:	2c c9       	rjmp	.-3496   	; 0xfffffc3c <__eeprom_end+0xff7efc3c>
     9e4:	92 2c       	mov	r9, r2
     9e6:	c9 a2       	std	Y+33, r12	; 0x21
     9e8:	9d 00       	.word	0x009d	; ????
     9ea:	fc 0f       	add	r31, r28
     9ec:	e6 f8       	bld	r14, 6
     9ee:	a9 49       	sbci	r26, 0x99	; 153
     9f0:	8e 64       	ori	r24, 0x4E	; 78
     9f2:	49 96       	adiw	r24, 0x19	; 25
     9f4:	64 49       	sbci	r22, 0x94	; 148
     9f6:	16 ed       	ldi	r17, 0xD6	; 214
     9f8:	04 fd       	sbrc	r16, 4
     9fa:	0f e6       	ldi	r16, 0x6F	; 111
     9fc:	f8 29       	or	r31, r8
     9fe:	61 0e       	add	r6, r17
     a00:	65 49       	sbci	r22, 0x95	; 149
     a02:	96 64       	ori	r25, 0x46	; 70
     a04:	51 12       	cpse	r5, r17
     a06:	b6 02       	muls	r27, r22
     a08:	fe 10       	cpse	r15, r14
     a0a:	e6 f8       	bld	r14, 6
     a0c:	89 69       	ori	r24, 0x99	; 153
     a0e:	3a 44       	sbci	r19, 0x4A	; 74
     a10:	59 92       	st	Y+, r5
     a12:	25 59       	subi	r18, 0x95	; 149
     a14:	32 44       	sbci	r19, 0x42	; 66
     a16:	69 0a       	sbc	r6, r25
     a18:	ff 0f       	add	r31, r31
     a1a:	e6 f8       	bld	r14, 6
     a1c:	a9 49       	sbci	r26, 0x99	; 153
     a1e:	8e 64       	ori	r24, 0x4E	; 78
     a20:	49 96       	adiw	r24, 0x19	; 25
     a22:	64 51       	subi	r22, 0x14	; 20
     a24:	12 b6       	in	r1, 0x32	; 50
     a26:	02 00       	.word	0x0002	; ????
     a28:	00 00       	nop
     a2a:	04 ff       	sbrs	r16, 4
     a2c:	ff 00       	.word	0x00ff	; ????
	...

00000a2f <u8g2_font_5x8_tf>:
     a2f:	bf 00 02 02 03 04 03 04 04 05 08 00 ff 06 ff 06     ................
     a3f:	00 01 1a 02 31 06 96 20 05 00 7e 03 21 07 31 63     ....1.. ..~.!.1c
     a4f:	33 52 00 22 07 9b 6e 93 ac 00 23 0d 3d 62 57 a6     3R."..n...#.=bW.
     a5f:	34 54 35 54 99 12 00 24 0a 3d 62 9b 57 bd 53 da     4T5T...$.=b.W.S.
     a6f:	11 25 08 ab 66 13 53 67 00 26 0a 3c 62 17 53 b3     .%..f.Sg.&.<b.S.
     a7f:	6a a6 00 27 05 19 6f 33 28 07 b2 62 a7 9a 01 29     j..'..o3(..b...)
     a8f:	08 b2 62 13 53 a5 00 2a 0a 2c 62 13 93 1a 49 c5     ..b.S..*.,b...I.
     a9f:	00 2b 0a 2d 62 9b 51 1c 32 a3 08 2c 07 9b 5e a7     .+.-b.Q.2..,..^.
     aaf:	4a 00 2d 06 0c 6a 33 02 2e 07 9b 5e 97 56 02 2f     J.-..j3....^.V./
     abf:	08 34 62 5f b6 33 00 30 08 b3 62 57 b9 2a 00 31     .4b_.3.0..bW.*.1
     acf:	07 b3 62 97 64 6b 32 0a 34 62 a7 62 4e 2a 8f 00     ..b.dk2.4b.bN*..
     adf:	33 0a 34 62 33 62 d4 48 26 05 34 0a 34 62 1b 55     3.4b3b.H&.4.4b.U
     aef:	35 62 4e 00 35 0a 34 62 33 f4 46 32 29 00 36 0a     5bN.5.4b3.F2).6.
     aff:	34 62 a7 f2 8a 32 29 00 37 0a 34 62 33 72 cc 31     4b...2).7.4b3r.1
     b0f:	47 00 38 0a 34 62 a7 62 52 51 26 05 39 0a 34 62     G.8.4b.bRQ&.9.4b
     b1f:	a7 a2 4c 3b 29 00 3a 07 aa 62 33 e2 08 3b 08 b3     ..L;).:..b3..;..
     b2f:	5e 67 23 55 02 3c 07 b3 62 9b ca 5c 3d 08 1c 66     ^g#U.<..b..\=..f
     b3f:	33 32 1a 01 3e 08 b3 62 93 cb 54 02 3f 09 b3 62     32..>..b..T.?..b
     b4f:	d7 4c 19 26 00 40 0c 45 5e 2b a3 5c 49 25 59 43     .L.&.@.E^+.\I%YC
     b5f:	05 41 09 34 62 a7 a2 1c 53 06 42 0a 34 62 b3 e2     .A.4b...S.B.4b..
     b6f:	48 51 8e 04 43 09 34 62 a7 a2 2e 93 02 44 09 34     HQ..C.4b.....D.4
     b7f:	62 b3 a2 73 24 00 45 09 34 62 33 f4 ca 79 04 46     b..s$.E.4b3..y.F
     b8f:	09 34 62 33 f4 ca 35 00 47 0a 34 62 a7 a2 4e 33     .4b3..5.G.4b..N3
     b9f:	29 00 48 09 34 62 13 e5 98 66 00 49 07 b3 62 b3     ).H.4b...f.I..b.
     baf:	62 6b 4a 09 34 62 37 73 55 46 00 4b 09 34 62 13     bkJ.4b7sUF.K.4b.
     bbf:	55 92 a9 33 4c 08 34 62 93 bb 47 00 4d 09 34 62     U..3L.4b..G.M.4b
     bcf:	13 c7 11 cd 00 4e 09 34 62 13 d7 58 67 00 4f 09     .....N.4b..Xg.O.
     bdf:	34 62 a7 a2 33 29 00 50 0a 34 62 b3 a2 1c 29 67     4b..3).P.4b...)g
     bef:	00 51 09 3c 5e a7 a2 5c 6e 14 52 0a 34 62 b3 a2     .Q.<^..\n.R.4b..
     bff:	1c 29 ca 00 53 0a 34 62 a7 62 ca a8 4c 0a 54 08     .)..S.4b.b..L.T.
     c0f:	b3 62 b3 62 17 00 55 08 34 62 13 3d 93 02 56 09     .b.b..U.4b.=..V.
     c1f:	34 62 13 9d 49 2a 00 57 09 34 62 13 cd 71 c4 00     4b..I*.W.4b..q..
     c2f:	58 0a 34 62 13 65 92 2a ca 00 59 0b 35 62 93 75     X.4b.e.*..Y.5b.u
     c3f:	aa 33 ca 28 02 5a 09 34 62 33 72 6c 8f 00 5b 07     .3.(.Z.4b3rl..[.
     c4f:	b3 62 33 62 73 5c 0a 34 62 93 33 ca 28 a3 1c 5d     .b3bs\.4b.3.(..]
     c5f:	07 b3 62 33 9b 23 5e 06 93 72 d7 00 5f 06 0c 5e     ..b3.#^..r.._..^
     c6f:	33 02 60 06 92 72 13 03 61 08 24 62 37 a2 4c 03     3.`..r..a.$b7.L.
     c7f:	62 0a 34 62 93 f3 8a 72 24 00 63 07 a3 62 37 b3     b.4b...r$.c..b7.
     c8f:	00 64 09 34 62 5f 8d 28 d3 00 65 08 24 62 a7 d2     .d.4b_.(..e.$b..
     c9f:	c8 0a 66 09 34 62 5b 95 33 47 00 67 09 2c 5e a7     ..f.4b[.3G.g.,^.
     caf:	62 da 49 01 68 09 34 62 93 f3 8a 66 00 69 08 b3     b.I.h.4b...f.i..
     cbf:	62 97 91 ac 06 6a 09 bb 5e 9b 61 a9 2a 00 6b 09     b....j..^.a.*.k.
     ccf:	34 62 93 cb 91 a2 0c 6c 07 b3 62 23 bb 06 6d 09     4b.....l..b#..m.
     cdf:	25 62 a3 5a 2a a9 02 6e 07 24 62 b3 a2 19 6f 08     %b.Z*..n.$b...o.
     cef:	24 62 a7 a2 4c 0a 70 09 2c 5e b3 e2 48 39 03 71     $b..L.p.,^..H9.q
     cff:	08 2c 5e 37 62 da 05 72 08 24 62 93 92 9d 01 73     .,^7b..r.$b....s
     d0f:	07 a3 62 37 f2 02 74 0a 34 62 97 e3 cc 29 26 00     ..b7..t.4b...)&.
     d1f:	75 07 24 62 13 cd 34 76 07 a3 62 93 ac 0a 77 09     u.$b..4v..b...w.
     d2f:	25 62 93 55 52 5d 00 78 08 24 62 13 93 54 31 79     %b.UR].x.$b..T1y
     d3f:	0a 2c 5e 13 65 1a 31 29 00 7a 08 24 62 33 62 39     .,^.e.1).z.$b3b9
     d4f:	02 7b 0b 3c 62 ab 32 4a 1a c5 8c 04 7c 05 31 63     .{.<b.2J....|.1c
     d5f:	73 7d 0c 3c 62 a3 51 cc 48 65 94 24 00 7e 07 14     s}.<b.Q.He.$.~..
     d6f:	72 97 54 02 a0 05 00 7e 03 a1 07 31 63 93 46 00     r.T....~...1c.F.
     d7f:	a2 09 34 5e 1b 47 6a ce 04 a3 0a 34 62 5b 8d 98     ..4^.Gj....4b[..
     d8f:	93 4a 00 a4 0a 2d 62 93 d3 4c 71 e5 00 a5 0b 35     .J...-b..Lq....5
     d9f:	62 93 53 35 64 1c 32 02 a6 06 39 63 b3 06 a7 0a     b.S5d.2...9c....
     daf:	3c 62 37 f2 8a 69 8f 04 a8 06 8b 76 93 02 a9 0a     <b7..i.....v....
     dbf:	35 62 b7 aa 39 55 b5 00 aa 07 ab 6a b7 92 1e ab     5b..9U.....j....
     dcf:	08 1c 66 97 54 4c 01 ac 06 9b 62 33 0b ad 05 8b     ..f.TL....b3....
     ddf:	6a 33 ae 09 35 62 f7 a1 96 5a 00 af 05 8b 76 33     j3..5b...Z....v3
     def:	b0 06 9b 6e d7 05 b1 08 ab 62 97 56 46 03 b2 07     ...n.....b.VF...
     dff:	ab 6a d7 4c 69 b3 07 ab 6a a3 2f 00 b4 06 92 72     .j.Li...j./....r
     e0f:	a7 00 b5 09 2c 5e 13 cd 91 32 00 b6 0c 35 62 37     ....,^...2...5b7
     e1f:	46 1a 29 a9 98 62 0a b7 05 09 6b 13 b8 06 92 5e     F.)..b....k....^
     e2f:	a7 00 b9 07 ab 6a 97 64 35 ba 07 ab 6a d7 8d 06     .....j.d5...j...
     e3f:	bb 08 1c 66 93 62 52 09 bc 0a 3c 62 93 5b 51 8d     ...f.bR...<b.[Q.
     e4f:	98 00 bd 0a 3c 62 93 ab a4 72 8c 03 be 0c 3c 62     ....<b...r....<b
     e5f:	93 51 cc 48 55 23 26 00 bf 09 b3 62 97 61 8a a9     .Q.HU#&....b.a..
     e6f:	02 c0 0a 3c 62 97 51 54 71 4c 19 c1 09 3c 62 5b     ...<b.QTqL...<b[
     e7f:	ab 38 a6 0c c2 0a 3c 62 a7 62 52 71 4c 19 c3 0a     .8....<b.bRqL...
     e8f:	3c 62 97 54 54 71 4c 19 c4 0a 3c 62 13 33 54 71     <b.TTqL...<b.3Tq
     e9f:	4c 19 c5 0a 3c 62 a7 62 52 71 4c 19 c6 09 34 62     L...<b.bRqL...4b
     eaf:	37 52 6b a8 4a c7 0a 3c 5e a7 a2 2e 93 8c 00 c8     7Rk.J..<^.......
     ebf:	0a 3c 62 97 51 1a 7a e5 11 c9 09 3c 62 5b 0e bd     .<b.Q.z....<b[..
     ecf:	f2 08 ca 0a 3c 62 a7 e2 d8 2b 8f 00 cb 0a 3c 62     ....<b...+....<b
     edf:	13 33 1a 7a e5 11 cc 09 bb 62 93 d3 8a d5 00 cd     .3.z.....b......
     eef:	09 bb 62 9b d2 8a d5 00 ce 09 bb 62 57 8d 14 ab     ..b........bW...
     eff:	01 cf 09 bb 62 93 f2 8a d5 00 d0 0b 35 62 37 e3     ....b.......5b7.
     f0f:	48 65 8a 69 01 d1 0a 3c 62 97 54 b9 d4 94 01 d2     He.i...<b.T.....
     f1f:	0a 3c 62 97 51 54 d1 4c 0a d3 09 3c 62 5b ab 68     .<b.QT.L...<b[.h
     f2f:	26 05 d4 0a 3c 62 a7 62 52 d1 4c 0a d5 0a 3c 62     &...<b.bR.L...<b
     f3f:	97 54 54 d1 4c 0a d6 0a 3c 62 13 33 54 d1 4c 0a     .TT.L...<b.3T.L.
     f4f:	d7 06 9b 62 93 3a d8 09 34 62 37 d2 91 8e 04 d9     ...b.:..4b7.....
     f5f:	09 3c 62 97 51 e9 4c 0a da 08 3c 62 db 74 26 05     .<b.Q.L...<b.t&.
     f6f:	db 09 3c 62 a7 a2 67 52 00 dc 0a 3c 62 13 33 8a     ..<b..gR...<b.3.
     f7f:	ce a4 00 dd 0b 3d 62 5f e6 54 67 94 51 04 de 0a     .....=b_.Tg.Q...
     f8f:	34 62 93 57 94 23 65 00 df 09 34 62 a7 a2 ea 54     4b.W.#e...4b...T
     f9f:	09 e0 0a 3c 62 97 51 c6 23 ca 34 e1 09 3c 62 5b     ...<b.Q.#.4..<b[
     faf:	53 23 ca 34 e2 0a 3c 62 5b 65 38 a2 4c 03 e3 0a     S#.4..<b[e8.L...
     fbf:	3c 62 97 54 c6 23 ca 34 e4 09 34 62 57 c3 11 65     <b.T.#.4..4bW..e
     fcf:	1a e5 0a 3c 62 a7 62 92 23 ca 34 e6 09 25 62 33     ...<b.b.#.4..%b3
     fdf:	a2 32 47 00 e7 08 ab 5e 37 b3 4a 00 e8 0b 3c 62     .2G....^7.J...<b
     fef:	97 51 c6 2a 8d ac 00 e9 0a 3c 62 5b 53 2a 8d ac     .Q.*.....<b[S*..
     fff:	00 ea 0b 3c 62 a7 62 86 2a 8d ac 00 eb 0a 34 62     ...<b.b.*.....4b
    100f:	57 43 95 46 56 00 ec 09 bb 62 93 33 92 d5 00 ed     WC.FV....b.3....
    101f:	09 bb 62 9b 32 92 d5 00 ee 08 bb 62 d7 96 d5 00     ..b.2......b....
    102f:	ef 08 b3 62 93 b2 ac 06 f0 0c 3c 62 93 62 95 51     ...b......<b.b.Q
    103f:	1a 31 29 00 f1 0a 3c 62 97 54 86 2b 9a 01 f2 0b     .1)...<b.T.+....
    104f:	3c 62 97 51 c6 2a ca a4 00 f3 0a 3c 62 5b 53 2a     <b.Q.*.....<b[S*
    105f:	ca a4 00 f4 0b 3c 62 a7 62 86 2a ca a4 00 f5 0b     .....<b.b.*.....
    106f:	3c 62 97 54 c6 2a ca a4 00 f6 0a 34 62 13 33 54     <b.T.*.....4b.3T
    107f:	51 26 05 f7 08 ab 62 97 d1 46 09 f8 09 24 62 37     Q&....b..F...$b7
    108f:	d2 48 23 01 f9 0a 3c 62 97 51 86 d1 4c 03 fa 09     .H#...<b.Q..L...
    109f:	3c 62 5b e3 68 a6 01 fb 0a 3c 62 a7 62 46 d1 4c     <b[.h....<b.bF.L
    10af:	03 fc 09 34 62 13 33 8a 66 1a fd 0b 44 5e 5b e3     ...4b.3.f...D^[.
    10bf:	28 d3 88 49 01 fe 0a 3c 5e 93 f3 8a 23 e5 0c ff     (..I...<^...#...
    10cf:	0c 3c 5e 13 33 8a 32 8d 98 14 00 00 00 00 04 ff     .<^.3.2.........
    10df:	ff 00 00                                            ...

000010e2 <__ctors_end>:
    10e2:	11 24       	eor	r1, r1
    10e4:	1f be       	out	0x3f, r1	; 63
    10e6:	cf ef       	ldi	r28, 0xFF	; 255
    10e8:	d8 e0       	ldi	r29, 0x08	; 8
    10ea:	de bf       	out	0x3e, r29	; 62
    10ec:	cd bf       	out	0x3d, r28	; 61

000010ee <__do_copy_data>:
    10ee:	11 e0       	ldi	r17, 0x01	; 1
    10f0:	a0 e0       	ldi	r26, 0x00	; 0
    10f2:	b1 e0       	ldi	r27, 0x01	; 1
    10f4:	ec ef       	ldi	r30, 0xFC	; 252
    10f6:	f1 e3       	ldi	r31, 0x31	; 49
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <__do_copy_data+0x10>
    10fa:	05 90       	lpm	r0, Z+
    10fc:	0d 92       	st	X+, r0
    10fe:	a8 37       	cpi	r26, 0x78	; 120
    1100:	b1 07       	cpc	r27, r17
    1102:	d9 f7       	brne	.-10     	; 0x10fa <__do_copy_data+0xc>

00001104 <__do_clear_bss>:
    1104:	25 e0       	ldi	r18, 0x05	; 5
    1106:	a8 e7       	ldi	r26, 0x78	; 120
    1108:	b1 e0       	ldi	r27, 0x01	; 1
    110a:	01 c0       	rjmp	.+2      	; 0x110e <.do_clear_bss_start>

0000110c <.do_clear_bss_loop>:
    110c:	1d 92       	st	X+, r1

0000110e <.do_clear_bss_start>:
    110e:	a9 3f       	cpi	r26, 0xF9	; 249
    1110:	b2 07       	cpc	r27, r18
    1112:	e1 f7       	brne	.-8      	; 0x110c <.do_clear_bss_loop>
    1114:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <main>
    1118:	0c 94 fc 18 	jmp	0x31f8	; 0x31f8 <_exit>

0000111c <__bad_interrupt>:
    111c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001120 <u8g2_send_tile_row>:
}

/*============================================*/

static void u8g2_send_tile_row(u8g2_t *u8g2, uint8_t src_tile_row, uint8_t dest_tile_row)
{
    1120:	0f 93       	push	r16
    1122:	1f 93       	push	r17
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1124:	dc 01       	movw	r26, r24
    1126:	ed 91       	ld	r30, X+
    1128:	fc 91       	ld	r31, X
    112a:	11 97       	sbiw	r26, 0x01	; 1
    112c:	20 89       	ldd	r18, Z+16	; 0x10
  offset = src_tile_row;
  ptr = u8g2->tile_buf_ptr;
    112e:	92 96       	adiw	r26, 0x22	; 34
    1130:	0d 91       	ld	r16, X+
    1132:	1c 91       	ld	r17, X
    1134:	93 97       	sbiw	r26, 0x23	; 35
  offset *= w;
    1136:	62 9f       	mul	r22, r18
    1138:	b0 01       	movw	r22, r0
    113a:	11 24       	eor	r1, r1
  offset *= 8;
    113c:	66 0f       	add	r22, r22
    113e:	77 1f       	adc	r23, r23
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	66 0f       	add	r22, r22
    1146:	77 1f       	adc	r23, r23
  ptr += offset;
    1148:	06 0f       	add	r16, r22
    114a:	17 1f       	adc	r17, r23
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	0e 94 0e 12 	call	0x241c	; 0x241c <u8x8_DrawTile>
}
    1152:	1f 91       	pop	r17
    1154:	0f 91       	pop	r16
    1156:	08 95       	ret

00001158 <u8g2_send_buffer>:
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	8c 01       	movw	r16, r24
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
    1166:	dc 01       	movw	r26, r24
    1168:	94 96       	adiw	r26, 0x24	; 36
    116a:	fc 90       	ld	r15, X
    116c:	94 97       	sbiw	r26, 0x24	; 36
  dest_row = u8g2->tile_curr_row;
    116e:	95 96       	adiw	r26, 0x25	; 37
    1170:	dc 91       	ld	r29, X
    1172:	95 97       	sbiw	r26, 0x25	; 37
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    1174:	ed 91       	ld	r30, X+
    1176:	fc 91       	ld	r31, X
    1178:	e1 88       	ldd	r14, Z+17	; 0x11
  uint8_t src_row;
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
    117a:	c0 e0       	ldi	r28, 0x00	; 0
  dest_row = u8g2->tile_curr_row;
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    117c:	4d 2f       	mov	r20, r29
    117e:	6c 2f       	mov	r22, r28
    1180:	c8 01       	movw	r24, r16
    1182:	0e 94 90 08 	call	0x1120	; 0x1120 <u8g2_send_tile_row>
    src_row++;
    1186:	cf 5f       	subi	r28, 0xFF	; 255
    dest_row++;
    1188:	df 5f       	subi	r29, 0xFF	; 255
  } while( src_row < src_max && dest_row < dest_max );
    118a:	cf 15       	cp	r28, r15
    118c:	10 f4       	brcc	.+4      	; 0x1192 <u8g2_send_buffer+0x3a>
    118e:	de 15       	cp	r29, r14
    1190:	a8 f3       	brcs	.-22     	; 0x117c <u8g2_send_buffer+0x24>
}
    1192:	df 91       	pop	r29
    1194:	cf 91       	pop	r28
    1196:	1f 91       	pop	r17
    1198:	0f 91       	pop	r16
    119a:	ff 90       	pop	r15
    119c:	ef 90       	pop	r14
    119e:	08 95       	ret

000011a0 <u8g2_ClearBuffer>:
#include "u8g2.h"
#include <string.h>

/*============================================*/
void u8g2_ClearBuffer(u8g2_t *u8g2)
{
    11a0:	fc 01       	movw	r30, r24
  size_t cnt;
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    11a2:	a0 81       	ld	r26, Z
    11a4:	b1 81       	ldd	r27, Z+1	; 0x01
    11a6:	50 96       	adiw	r26, 0x10	; 16
    11a8:	9c 91       	ld	r25, X
  cnt *= u8g2->tile_buf_height;
    11aa:	44 a1       	ldd	r20, Z+36	; 0x24
    11ac:	94 9f       	mul	r25, r20
    11ae:	a0 01       	movw	r20, r0
    11b0:	11 24       	eor	r1, r1
  cnt *= 8;
    11b2:	44 0f       	add	r20, r20
    11b4:	55 1f       	adc	r21, r21
    11b6:	44 0f       	add	r20, r20
    11b8:	55 1f       	adc	r21, r21
    11ba:	44 0f       	add	r20, r20
    11bc:	55 1f       	adc	r21, r21
  memset(u8g2->tile_buf_ptr, 0, cnt);
    11be:	60 e0       	ldi	r22, 0x00	; 0
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	82 a1       	ldd	r24, Z+34	; 0x22
    11c4:	93 a1       	ldd	r25, Z+35	; 0x23
    11c6:	0e 94 8f 18 	call	0x311e	; 0x311e <memset>
    11ca:	08 95       	ret

000011cc <u8g2_SendBuffer>:
  } while( src_row < src_max && dest_row < dest_max );
}

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
    11cc:	cf 93       	push	r28
    11ce:	df 93       	push	r29
    11d0:	ec 01       	movw	r28, r24
  u8g2_send_buffer(u8g2);
    11d2:	0e 94 ac 08 	call	0x1158	; 0x1158 <u8g2_send_buffer>
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    11d6:	ce 01       	movw	r24, r28
    11d8:	0e 94 52 12 	call	0x24a4	; 0x24a4 <u8x8_RefreshDisplay>
}
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	08 95       	ret

000011e2 <u8g2_m_16_8_f>:
  #ifdef U8G2_USE_DYNAMIC_ALLOC
  *page_cnt = 8;
  return 0;
  #else
  static uint8_t buf[1024];
  *page_cnt = 8;
    11e2:	28 e0       	ldi	r18, 0x08	; 8
    11e4:	fc 01       	movw	r30, r24
    11e6:	20 83       	st	Z, r18
  return buf;
  #endif
}
    11e8:	88 e7       	ldi	r24, 0x78	; 120
    11ea:	91 e0       	ldi	r25, 0x01	; 1
    11ec:	08 95       	ret

000011ee <u8g2_Setup_ssd1306_i2c_128x64_noname_f>:
  buf = u8g2_m_16_8_2(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
}
/* ssd1306 f */
void u8g2_Setup_ssd1306_i2c_128x64_noname_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    11ee:	cf 92       	push	r12
    11f0:	df 92       	push	r13
    11f2:	ef 92       	push	r14
    11f4:	ff 92       	push	r15
    11f6:	0f 93       	push	r16
    11f8:	1f 93       	push	r17
    11fa:	cf 93       	push	r28
    11fc:	df 93       	push	r29
    11fe:	1f 92       	push	r1
    1200:	cd b7       	in	r28, 0x3d	; 61
    1202:	de b7       	in	r29, 0x3e	; 62
    1204:	7c 01       	movw	r14, r24
    1206:	6b 01       	movw	r12, r22
  uint8_t tile_buf_height;
  uint8_t *buf;
  u8g2_SetupDisplay(u8g2, u8x8_d_ssd1306_128x64_noname, u8x8_cad_ssd13xx_fast_i2c, byte_cb, gpio_and_delay_cb);
    1208:	89 01       	movw	r16, r18
    120a:	9a 01       	movw	r18, r20
    120c:	45 e5       	ldi	r20, 0x55	; 85
    120e:	51 e1       	ldi	r21, 0x11	; 17
    1210:	66 ee       	ldi	r22, 0xE6	; 230
    1212:	72 e1       	ldi	r23, 0x12	; 18
    1214:	0e 94 2b 13 	call	0x2656	; 0x2656 <u8x8_Setup>
  buf = u8g2_m_16_8_f(&tile_buf_height);
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <u8g2_m_16_8_f>
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
    1220:	86 01       	movw	r16, r12
    1222:	2e e0       	ldi	r18, 0x0E	; 14
    1224:	3f e0       	ldi	r19, 0x0F	; 15
    1226:	49 81       	ldd	r20, Y+1	; 0x01
    1228:	bc 01       	movw	r22, r24
    122a:	c7 01       	movw	r24, r14
    122c:	0e 94 42 10 	call	0x2084	; 0x2084 <u8g2_SetupBuffer>
}
    1230:	0f 90       	pop	r0
    1232:	df 91       	pop	r29
    1234:	cf 91       	pop	r28
    1236:	1f 91       	pop	r17
    1238:	0f 91       	pop	r16
    123a:	ff 90       	pop	r15
    123c:	ef 90       	pop	r14
    123e:	df 90       	pop	r13
    1240:	cf 90       	pop	r12
    1242:	08 95       	ret

00001244 <u8g2_font_get_byte>:
  return tmp;
}

void u8g2_SetFontPosCenter(u8g2_t *u8g2)
{
  u8g2->font_calc_vref = u8g2_font_calc_vref_center;
    1244:	86 0f       	add	r24, r22
    1246:	91 1d       	adc	r25, r1
    1248:	fc 01       	movw	r30, r24
    124a:	84 91       	lpm	r24, Z
    124c:	08 95       	ret

0000124e <u8g2_font_get_word>:
    124e:	fc 01       	movw	r30, r24
    1250:	e6 0f       	add	r30, r22
    1252:	f1 1d       	adc	r31, r1
    1254:	84 91       	lpm	r24, Z
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	31 96       	adiw	r30, 0x01	; 1
    125a:	98 2f       	mov	r25, r24
    125c:	88 27       	eor	r24, r24
    125e:	e4 91       	lpm	r30, Z
    1260:	8e 0f       	add	r24, r30
    1262:	91 1d       	adc	r25, r1
    1264:	08 95       	ret

00001266 <u8g2_font_calc_vref_font>:
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	08 95       	ret

0000126c <u8g2_font_calc_vref_top>:
    126c:	80 59       	subi	r24, 0x90	; 144
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	fc 01       	movw	r30, r24
    1272:	80 81       	ld	r24, Z
    1274:	08 2e       	mov	r0, r24
    1276:	00 0c       	add	r0, r0
    1278:	99 0b       	sbc	r25, r25
    127a:	01 96       	adiw	r24, 0x01	; 1
    127c:	08 95       	ret

0000127e <u8g2_read_font_info>:
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	ec 01       	movw	r28, r24
    1288:	8b 01       	movw	r16, r22
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	c8 01       	movw	r24, r16
    128e:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    1292:	88 83       	st	Y, r24
    1294:	61 e0       	ldi	r22, 0x01	; 1
    1296:	c8 01       	movw	r24, r16
    1298:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    129c:	89 83       	std	Y+1, r24	; 0x01
    129e:	62 e0       	ldi	r22, 0x02	; 2
    12a0:	c8 01       	movw	r24, r16
    12a2:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12a6:	8a 83       	std	Y+2, r24	; 0x02
    12a8:	63 e0       	ldi	r22, 0x03	; 3
    12aa:	c8 01       	movw	r24, r16
    12ac:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12b0:	8b 83       	std	Y+3, r24	; 0x03
    12b2:	64 e0       	ldi	r22, 0x04	; 4
    12b4:	c8 01       	movw	r24, r16
    12b6:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12ba:	8c 83       	std	Y+4, r24	; 0x04
    12bc:	65 e0       	ldi	r22, 0x05	; 5
    12be:	c8 01       	movw	r24, r16
    12c0:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12c4:	8d 83       	std	Y+5, r24	; 0x05
    12c6:	66 e0       	ldi	r22, 0x06	; 6
    12c8:	c8 01       	movw	r24, r16
    12ca:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12ce:	8e 83       	std	Y+6, r24	; 0x06
    12d0:	67 e0       	ldi	r22, 0x07	; 7
    12d2:	c8 01       	movw	r24, r16
    12d4:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12d8:	8f 83       	std	Y+7, r24	; 0x07
    12da:	68 e0       	ldi	r22, 0x08	; 8
    12dc:	c8 01       	movw	r24, r16
    12de:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12e2:	88 87       	std	Y+8, r24	; 0x08
    12e4:	69 e0       	ldi	r22, 0x09	; 9
    12e6:	c8 01       	movw	r24, r16
    12e8:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12ec:	89 87       	std	Y+9, r24	; 0x09
    12ee:	6a e0       	ldi	r22, 0x0A	; 10
    12f0:	c8 01       	movw	r24, r16
    12f2:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    12f6:	8a 87       	std	Y+10, r24	; 0x0a
    12f8:	6b e0       	ldi	r22, 0x0B	; 11
    12fa:	c8 01       	movw	r24, r16
    12fc:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    1300:	8b 87       	std	Y+11, r24	; 0x0b
    1302:	6c e0       	ldi	r22, 0x0C	; 12
    1304:	c8 01       	movw	r24, r16
    1306:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    130a:	8c 87       	std	Y+12, r24	; 0x0c
    130c:	6d e0       	ldi	r22, 0x0D	; 13
    130e:	c8 01       	movw	r24, r16
    1310:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    1314:	8d 87       	std	Y+13, r24	; 0x0d
    1316:	6e e0       	ldi	r22, 0x0E	; 14
    1318:	c8 01       	movw	r24, r16
    131a:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    131e:	8e 87       	std	Y+14, r24	; 0x0e
    1320:	6f e0       	ldi	r22, 0x0F	; 15
    1322:	c8 01       	movw	r24, r16
    1324:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    1328:	8f 87       	std	Y+15, r24	; 0x0f
    132a:	60 e1       	ldi	r22, 0x10	; 16
    132c:	c8 01       	movw	r24, r16
    132e:	0e 94 22 09 	call	0x1244	; 0x1244 <u8g2_font_get_byte>
    1332:	88 8b       	std	Y+16, r24	; 0x10
    1334:	61 e1       	ldi	r22, 0x11	; 17
    1336:	c8 01       	movw	r24, r16
    1338:	0e 94 27 09 	call	0x124e	; 0x124e <u8g2_font_get_word>
    133c:	9a 8b       	std	Y+18, r25	; 0x12
    133e:	89 8b       	std	Y+17, r24	; 0x11
    1340:	63 e1       	ldi	r22, 0x13	; 19
    1342:	c8 01       	movw	r24, r16
    1344:	0e 94 27 09 	call	0x124e	; 0x124e <u8g2_font_get_word>
    1348:	9c 8b       	std	Y+20, r25	; 0x14
    134a:	8b 8b       	std	Y+19, r24	; 0x13
    134c:	65 e1       	ldi	r22, 0x15	; 21
    134e:	c8 01       	movw	r24, r16
    1350:	0e 94 27 09 	call	0x124e	; 0x124e <u8g2_font_get_word>
    1354:	9e 8b       	std	Y+22, r25	; 0x16
    1356:	8d 8b       	std	Y+21, r24	; 0x15
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	1f 91       	pop	r17
    135e:	0f 91       	pop	r16
    1360:	08 95       	ret

00001362 <u8g2_font_decode_get_unsigned_bits>:
    1362:	dc 01       	movw	r26, r24
    1364:	1a 96       	adiw	r26, 0x0a	; 10
    1366:	4c 91       	ld	r20, X
    1368:	1a 97       	sbiw	r26, 0x0a	; 10
    136a:	ed 91       	ld	r30, X+
    136c:	fc 91       	ld	r31, X
    136e:	11 97       	sbiw	r26, 0x01	; 1
    1370:	24 91       	lpm	r18, Z
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	04 2e       	mov	r0, r20
    1376:	02 c0       	rjmp	.+4      	; 0x137c <u8g2_font_decode_get_unsigned_bits+0x1a>
    1378:	35 95       	asr	r19
    137a:	27 95       	ror	r18
    137c:	0a 94       	dec	r0
    137e:	e2 f7       	brpl	.-8      	; 0x1378 <u8g2_font_decode_get_unsigned_bits+0x16>
    1380:	82 2f       	mov	r24, r18
    1382:	94 2f       	mov	r25, r20
    1384:	96 0f       	add	r25, r22
    1386:	98 30       	cpi	r25, 0x08	; 8
    1388:	80 f0       	brcs	.+32     	; 0x13aa <u8g2_font_decode_get_unsigned_bits+0x48>
    138a:	88 e0       	ldi	r24, 0x08	; 8
    138c:	84 1b       	sub	r24, r20
    138e:	31 96       	adiw	r30, 0x01	; 1
    1390:	11 96       	adiw	r26, 0x01	; 1
    1392:	fc 93       	st	X, r31
    1394:	ee 93       	st	-X, r30
    1396:	e4 91       	lpm	r30, Z
    1398:	f0 e0       	ldi	r31, 0x00	; 0
    139a:	02 c0       	rjmp	.+4      	; 0x13a0 <u8g2_font_decode_get_unsigned_bits+0x3e>
    139c:	ee 0f       	add	r30, r30
    139e:	ff 1f       	adc	r31, r31
    13a0:	8a 95       	dec	r24
    13a2:	e2 f7       	brpl	.-8      	; 0x139c <u8g2_font_decode_get_unsigned_bits+0x3a>
    13a4:	8e 2f       	mov	r24, r30
    13a6:	82 2b       	or	r24, r18
    13a8:	98 50       	subi	r25, 0x08	; 8
    13aa:	21 e0       	ldi	r18, 0x01	; 1
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <u8g2_font_decode_get_unsigned_bits+0x52>
    13b0:	22 0f       	add	r18, r18
    13b2:	33 1f       	adc	r19, r19
    13b4:	6a 95       	dec	r22
    13b6:	e2 f7       	brpl	.-8      	; 0x13b0 <u8g2_font_decode_get_unsigned_bits+0x4e>
    13b8:	21 50       	subi	r18, 0x01	; 1
    13ba:	1a 96       	adiw	r26, 0x0a	; 10
    13bc:	9c 93       	st	X, r25
    13be:	82 23       	and	r24, r18
    13c0:	08 95       	ret

000013c2 <u8g2_font_setup_decode>:
    13c2:	0f 93       	push	r16
    13c4:	1f 93       	push	r17
    13c6:	cf 93       	push	r28
    13c8:	df 93       	push	r29
    13ca:	ec 01       	movw	r28, r24
    13cc:	8c 01       	movw	r16, r24
    13ce:	08 5b       	subi	r16, 0xB8	; 184
    13d0:	1f 4f       	sbci	r17, 0xFF	; 255
    13d2:	f8 01       	movw	r30, r16
    13d4:	71 83       	std	Z+1, r23	; 0x01
    13d6:	60 83       	st	Z, r22
    13d8:	12 86       	std	Z+10, r1	; 0x0a
    13da:	73 96       	adiw	r30, 0x13	; 19
    13dc:	60 81       	ld	r22, Z
    13de:	c8 01       	movw	r24, r16
    13e0:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    13e4:	f8 01       	movw	r30, r16
    13e6:	80 87       	std	Z+8, r24	; 0x08
    13e8:	74 96       	adiw	r30, 0x14	; 20
    13ea:	60 81       	ld	r22, Z
    13ec:	c8 01       	movw	r24, r16
    13ee:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    13f2:	f8 01       	movw	r30, r16
    13f4:	81 87       	std	Z+9, r24	; 0x09
    13f6:	bc 96       	adiw	r30, 0x2c	; 44
    13f8:	80 81       	ld	r24, Z
    13fa:	f8 01       	movw	r30, r16
    13fc:	84 87       	std	Z+12, r24	; 0x0c
    13fe:	91 e0       	ldi	r25, 0x01	; 1
    1400:	81 11       	cpse	r24, r1
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	c8 5b       	subi	r28, 0xB8	; 184
    1406:	df 4f       	sbci	r29, 0xFF	; 255
    1408:	9d 87       	std	Y+13, r25	; 0x0d
    140a:	df 91       	pop	r29
    140c:	cf 91       	pop	r28
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	08 95       	ret

00001414 <u8g2_font_decode_get_signed_bits>:
    1414:	cf 93       	push	r28
    1416:	c6 2f       	mov	r28, r22
    1418:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    141c:	c1 50       	subi	r28, 0x01	; 1
    141e:	21 e0       	ldi	r18, 0x01	; 1
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	02 c0       	rjmp	.+4      	; 0x1428 <u8g2_font_decode_get_signed_bits+0x14>
    1424:	22 0f       	add	r18, r18
    1426:	33 1f       	adc	r19, r19
    1428:	ca 95       	dec	r28
    142a:	e2 f7       	brpl	.-8      	; 0x1424 <u8g2_font_decode_get_signed_bits+0x10>
    142c:	82 1b       	sub	r24, r18
    142e:	cf 91       	pop	r28
    1430:	08 95       	ret

00001432 <u8g2_add_vector_y>:
    1432:	21 30       	cpi	r18, 0x01	; 1
    1434:	49 f0       	breq	.+18     	; 0x1448 <u8g2_add_vector_y+0x16>
    1436:	18 f0       	brcs	.+6      	; 0x143e <u8g2_add_vector_y+0xc>
    1438:	22 30       	cpi	r18, 0x02	; 2
    143a:	59 f0       	breq	.+22     	; 0x1452 <u8g2_add_vector_y+0x20>
    143c:	0f c0       	rjmp	.+30     	; 0x145c <u8g2_add_vector_y+0x2a>
    143e:	84 0f       	add	r24, r20
    1440:	91 1d       	adc	r25, r1
    1442:	47 fd       	sbrc	r20, 7
    1444:	9a 95       	dec	r25
    1446:	08 95       	ret
    1448:	86 0f       	add	r24, r22
    144a:	91 1d       	adc	r25, r1
    144c:	67 fd       	sbrc	r22, 7
    144e:	9a 95       	dec	r25
    1450:	08 95       	ret
    1452:	84 1b       	sub	r24, r20
    1454:	91 09       	sbc	r25, r1
    1456:	47 fd       	sbrc	r20, 7
    1458:	93 95       	inc	r25
    145a:	08 95       	ret
    145c:	86 1b       	sub	r24, r22
    145e:	91 09       	sbc	r25, r1
    1460:	67 fd       	sbrc	r22, 7
    1462:	93 95       	inc	r25
    1464:	08 95       	ret

00001466 <u8g2_add_vector_x>:
    1466:	21 30       	cpi	r18, 0x01	; 1
    1468:	49 f0       	breq	.+18     	; 0x147c <u8g2_add_vector_x+0x16>
    146a:	18 f0       	brcs	.+6      	; 0x1472 <u8g2_add_vector_x+0xc>
    146c:	22 30       	cpi	r18, 0x02	; 2
    146e:	59 f0       	breq	.+22     	; 0x1486 <u8g2_add_vector_x+0x20>
    1470:	0f c0       	rjmp	.+30     	; 0x1490 <u8g2_add_vector_x+0x2a>
    1472:	86 0f       	add	r24, r22
    1474:	91 1d       	adc	r25, r1
    1476:	67 fd       	sbrc	r22, 7
    1478:	9a 95       	dec	r25
    147a:	08 95       	ret
    147c:	84 1b       	sub	r24, r20
    147e:	91 09       	sbc	r25, r1
    1480:	47 fd       	sbrc	r20, 7
    1482:	93 95       	inc	r25
    1484:	08 95       	ret
    1486:	86 1b       	sub	r24, r22
    1488:	91 09       	sbc	r25, r1
    148a:	67 fd       	sbrc	r22, 7
    148c:	93 95       	inc	r25
    148e:	08 95       	ret
    1490:	84 0f       	add	r24, r20
    1492:	91 1d       	adc	r25, r1
    1494:	47 fd       	sbrc	r20, 7
    1496:	9a 95       	dec	r25
    1498:	08 95       	ret

0000149a <u8g2_font_decode_len>:
    149a:	6f 92       	push	r6
    149c:	7f 92       	push	r7
    149e:	8f 92       	push	r8
    14a0:	9f 92       	push	r9
    14a2:	af 92       	push	r10
    14a4:	bf 92       	push	r11
    14a6:	cf 92       	push	r12
    14a8:	df 92       	push	r13
    14aa:	ef 92       	push	r14
    14ac:	ff 92       	push	r15
    14ae:	0f 93       	push	r16
    14b0:	1f 93       	push	r17
    14b2:	cf 93       	push	r28
    14b4:	df 93       	push	r29
    14b6:	7c 01       	movw	r14, r24
    14b8:	16 2f       	mov	r17, r22
    14ba:	74 2e       	mov	r7, r20
    14bc:	fc 01       	movw	r30, r24
    14be:	e8 5b       	subi	r30, 0xB8	; 184
    14c0:	ff 4f       	sbci	r31, 0xFF	; 255
    14c2:	96 80       	ldd	r9, Z+6	; 0x06
    14c4:	d7 81       	ldd	r29, Z+7	; 0x07
    14c6:	f7 01       	movw	r30, r14
    14c8:	e8 5b       	subi	r30, 0xB8	; 184
    14ca:	ff 4f       	sbci	r31, 0xFF	; 255
    14cc:	c0 85       	ldd	r28, Z+8	; 0x08
    14ce:	c9 19       	sub	r28, r9
    14d0:	1c 17       	cp	r17, r28
    14d2:	10 f0       	brcs	.+4      	; 0x14d8 <u8g2_font_decode_len+0x3e>
    14d4:	6c 2e       	mov	r6, r28
    14d6:	01 c0       	rjmp	.+2      	; 0x14da <u8g2_font_decode_len+0x40>
    14d8:	61 2e       	mov	r6, r17
    14da:	f7 01       	movw	r30, r14
    14dc:	e8 5b       	subi	r30, 0xB8	; 184
    14de:	ff 4f       	sbci	r31, 0xFF	; 255
    14e0:	c4 80       	ldd	r12, Z+4	; 0x04
    14e2:	d5 80       	ldd	r13, Z+5	; 0x05
    14e4:	06 85       	ldd	r16, Z+14	; 0x0e
    14e6:	8d 2e       	mov	r8, r29
    14e8:	20 2f       	mov	r18, r16
    14ea:	4d 2f       	mov	r20, r29
    14ec:	69 2d       	mov	r22, r9
    14ee:	82 81       	ldd	r24, Z+2	; 0x02
    14f0:	93 81       	ldd	r25, Z+3	; 0x03
    14f2:	0e 94 33 0a 	call	0x1466	; 0x1466 <u8g2_add_vector_x>
    14f6:	5c 01       	movw	r10, r24
    14f8:	20 2f       	mov	r18, r16
    14fa:	4d 2f       	mov	r20, r29
    14fc:	69 2d       	mov	r22, r9
    14fe:	c6 01       	movw	r24, r12
    1500:	0e 94 19 0a 	call	0x1432	; 0x1432 <u8g2_add_vector_y>
    1504:	77 20       	and	r7, r7
    1506:	71 f0       	breq	.+28     	; 0x1524 <u8g2_font_decode_len+0x8a>
    1508:	f7 01       	movw	r30, r14
    150a:	e8 5b       	subi	r30, 0xB8	; 184
    150c:	ff 4f       	sbci	r31, 0xFF	; 255
    150e:	24 85       	ldd	r18, Z+12	; 0x0c
    1510:	bc 96       	adiw	r30, 0x2c	; 44
    1512:	20 83       	st	Z, r18
    1514:	26 2d       	mov	r18, r6
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	ac 01       	movw	r20, r24
    151a:	b5 01       	movw	r22, r10
    151c:	c7 01       	movw	r24, r14
    151e:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <u8g2_DrawHVLine>
    1522:	10 c0       	rjmp	.+32     	; 0x1544 <u8g2_font_decode_len+0xaa>
    1524:	f7 01       	movw	r30, r14
    1526:	e8 5b       	subi	r30, 0xB8	; 184
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	23 85       	ldd	r18, Z+11	; 0x0b
    152c:	21 11       	cpse	r18, r1
    152e:	0a c0       	rjmp	.+20     	; 0x1544 <u8g2_font_decode_len+0xaa>
    1530:	25 85       	ldd	r18, Z+13	; 0x0d
    1532:	bc 96       	adiw	r30, 0x2c	; 44
    1534:	20 83       	st	Z, r18
    1536:	26 2d       	mov	r18, r6
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	ac 01       	movw	r20, r24
    153c:	b5 01       	movw	r22, r10
    153e:	c7 01       	movw	r24, r14
    1540:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <u8g2_DrawHVLine>
    1544:	1c 17       	cp	r17, r28
    1546:	20 f0       	brcs	.+8      	; 0x1550 <u8g2_font_decode_len+0xb6>
    1548:	1c 1b       	sub	r17, r28
    154a:	df 5f       	subi	r29, 0xFF	; 255
    154c:	91 2c       	mov	r9, r1
    154e:	bb cf       	rjmp	.-138    	; 0x14c6 <u8g2_font_decode_len+0x2c>
    1550:	61 2f       	mov	r22, r17
    1552:	69 0d       	add	r22, r9
    1554:	f7 01       	movw	r30, r14
    1556:	e8 5b       	subi	r30, 0xB8	; 184
    1558:	ff 4f       	sbci	r31, 0xFF	; 255
    155a:	66 83       	std	Z+6, r22	; 0x06
    155c:	87 82       	std	Z+7, r8	; 0x07
    155e:	df 91       	pop	r29
    1560:	cf 91       	pop	r28
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	ff 90       	pop	r15
    1568:	ef 90       	pop	r14
    156a:	df 90       	pop	r13
    156c:	cf 90       	pop	r12
    156e:	bf 90       	pop	r11
    1570:	af 90       	pop	r10
    1572:	9f 90       	pop	r9
    1574:	8f 90       	pop	r8
    1576:	7f 90       	pop	r7
    1578:	6f 90       	pop	r6
    157a:	08 95       	ret

0000157c <u8g2_font_decode_glyph>:
    157c:	6f 92       	push	r6
    157e:	7f 92       	push	r7
    1580:	8f 92       	push	r8
    1582:	9f 92       	push	r9
    1584:	af 92       	push	r10
    1586:	bf 92       	push	r11
    1588:	cf 92       	push	r12
    158a:	df 92       	push	r13
    158c:	ef 92       	push	r14
    158e:	ff 92       	push	r15
    1590:	0f 93       	push	r16
    1592:	1f 93       	push	r17
    1594:	cf 93       	push	r28
    1596:	df 93       	push	r29
    1598:	ec 01       	movw	r28, r24
    159a:	7c 01       	movw	r14, r24
    159c:	88 e4       	ldi	r24, 0x48	; 72
    159e:	e8 0e       	add	r14, r24
    15a0:	f1 1c       	adc	r15, r1
    15a2:	ce 01       	movw	r24, r28
    15a4:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <u8g2_font_setup_decode>
    15a8:	fe 01       	movw	r30, r28
    15aa:	ef 5a       	subi	r30, 0xAF	; 175
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	c0 80       	ld	r12, Z
    15b0:	3c 96       	adiw	r30, 0x0c	; 12
    15b2:	60 81       	ld	r22, Z
    15b4:	c7 01       	movw	r24, r14
    15b6:	0e 94 0a 0a 	call	0x1414	; 0x1414 <u8g2_font_decode_get_signed_bits>
    15ba:	78 2e       	mov	r7, r24
    15bc:	fe 01       	movw	r30, r28
    15be:	e2 5a       	subi	r30, 0xA2	; 162
    15c0:	ff 4f       	sbci	r31, 0xFF	; 255
    15c2:	60 81       	ld	r22, Z
    15c4:	c7 01       	movw	r24, r14
    15c6:	0e 94 0a 0a 	call	0x1414	; 0x1414 <u8g2_font_decode_get_signed_bits>
    15ca:	18 2f       	mov	r17, r24
    15cc:	fe 01       	movw	r30, r28
    15ce:	e1 5a       	subi	r30, 0xA1	; 161
    15d0:	ff 4f       	sbci	r31, 0xFF	; 255
    15d2:	60 81       	ld	r22, Z
    15d4:	c7 01       	movw	r24, r14
    15d6:	0e 94 0a 0a 	call	0x1414	; 0x1414 <u8g2_font_decode_get_signed_bits>
    15da:	d8 2e       	mov	r13, r24
    15dc:	f7 01       	movw	r30, r14
    15de:	60 84       	ldd	r6, Z+8	; 0x08
    15e0:	16 14       	cp	r1, r6
    15e2:	0c f0       	brlt	.+2      	; 0x15e6 <u8g2_font_decode_glyph+0x6a>
    15e4:	9b c0       	rjmp	.+310    	; 0x171c <u8g2_font_decode_glyph+0x1a0>
    15e6:	06 85       	ldd	r16, Z+14	; 0x0e
    15e8:	1c 0d       	add	r17, r12
    15ea:	11 95       	neg	r17
    15ec:	20 2f       	mov	r18, r16
    15ee:	41 2f       	mov	r20, r17
    15f0:	67 2d       	mov	r22, r7
    15f2:	82 81       	ldd	r24, Z+2	; 0x02
    15f4:	93 81       	ldd	r25, Z+3	; 0x03
    15f6:	0e 94 33 0a 	call	0x1466	; 0x1466 <u8g2_add_vector_x>
    15fa:	5c 01       	movw	r10, r24
    15fc:	f7 01       	movw	r30, r14
    15fe:	93 83       	std	Z+3, r25	; 0x03
    1600:	82 83       	std	Z+2, r24	; 0x02
    1602:	20 2f       	mov	r18, r16
    1604:	41 2f       	mov	r20, r17
    1606:	67 2d       	mov	r22, r7
    1608:	84 81       	ldd	r24, Z+4	; 0x04
    160a:	95 81       	ldd	r25, Z+5	; 0x05
    160c:	0e 94 19 0a 	call	0x1432	; 0x1432 <u8g2_add_vector_y>
    1610:	f7 01       	movw	r30, r14
    1612:	95 83       	std	Z+5, r25	; 0x05
    1614:	84 83       	std	Z+4, r24	; 0x04
    1616:	01 30       	cpi	r16, 0x01	; 1
    1618:	89 f0       	breq	.+34     	; 0x163c <u8g2_font_decode_glyph+0xc0>
    161a:	28 f0       	brcs	.+10     	; 0x1626 <u8g2_font_decode_glyph+0xaa>
    161c:	02 30       	cpi	r16, 0x02	; 2
    161e:	01 f1       	breq	.+64     	; 0x1660 <u8g2_font_decode_glyph+0xe4>
    1620:	03 30       	cpi	r16, 0x03	; 3
    1622:	a1 f1       	breq	.+104    	; 0x168c <u8g2_font_decode_glyph+0x110>
    1624:	43 c0       	rjmp	.+134    	; 0x16ac <u8g2_font_decode_glyph+0x130>
    1626:	95 01       	movw	r18, r10
    1628:	26 0d       	add	r18, r6
    162a:	31 1d       	adc	r19, r1
    162c:	67 fc       	sbrc	r6, 7
    162e:	3a 95       	dec	r19
    1630:	8c 01       	movw	r16, r24
    1632:	0c 0d       	add	r16, r12
    1634:	11 1d       	adc	r17, r1
    1636:	c7 fc       	sbrc	r12, 7
    1638:	1a 95       	dec	r17
    163a:	3a c0       	rjmp	.+116    	; 0x16b0 <u8g2_font_decode_glyph+0x134>
    163c:	a5 01       	movw	r20, r10
    163e:	4c 19       	sub	r20, r12
    1640:	51 09       	sbc	r21, r1
    1642:	c7 fc       	sbrc	r12, 7
    1644:	53 95       	inc	r21
    1646:	95 01       	movw	r18, r10
    1648:	2f 5f       	subi	r18, 0xFF	; 255
    164a:	3f 4f       	sbci	r19, 0xFF	; 255
    164c:	8c 01       	movw	r16, r24
    164e:	06 0d       	add	r16, r6
    1650:	11 1d       	adc	r17, r1
    1652:	67 fc       	sbrc	r6, 7
    1654:	1a 95       	dec	r17
    1656:	ba 01       	movw	r22, r20
    1658:	6f 5f       	subi	r22, 0xFF	; 255
    165a:	7f 4f       	sbci	r23, 0xFF	; 255
    165c:	5b 01       	movw	r10, r22
    165e:	28 c0       	rjmp	.+80     	; 0x16b0 <u8g2_font_decode_glyph+0x134>
    1660:	a5 01       	movw	r20, r10
    1662:	46 19       	sub	r20, r6
    1664:	51 09       	sbc	r21, r1
    1666:	67 fc       	sbrc	r6, 7
    1668:	53 95       	inc	r21
    166a:	95 01       	movw	r18, r10
    166c:	2f 5f       	subi	r18, 0xFF	; 255
    166e:	3f 4f       	sbci	r19, 0xFF	; 255
    1670:	bc 01       	movw	r22, r24
    1672:	6c 19       	sub	r22, r12
    1674:	71 09       	sbc	r23, r1
    1676:	c7 fc       	sbrc	r12, 7
    1678:	73 95       	inc	r23
    167a:	8c 01       	movw	r16, r24
    167c:	0f 5f       	subi	r16, 0xFF	; 255
    167e:	1f 4f       	sbci	r17, 0xFF	; 255
    1680:	cb 01       	movw	r24, r22
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	fa 01       	movw	r30, r20
    1686:	31 96       	adiw	r30, 0x01	; 1
    1688:	5f 01       	movw	r10, r30
    168a:	12 c0       	rjmp	.+36     	; 0x16b0 <u8g2_font_decode_glyph+0x134>
    168c:	95 01       	movw	r18, r10
    168e:	2c 0d       	add	r18, r12
    1690:	31 1d       	adc	r19, r1
    1692:	c7 fc       	sbrc	r12, 7
    1694:	3a 95       	dec	r19
    1696:	ac 01       	movw	r20, r24
    1698:	46 19       	sub	r20, r6
    169a:	51 09       	sbc	r21, r1
    169c:	67 fc       	sbrc	r6, 7
    169e:	53 95       	inc	r21
    16a0:	8c 01       	movw	r16, r24
    16a2:	0f 5f       	subi	r16, 0xFF	; 255
    16a4:	1f 4f       	sbci	r17, 0xFF	; 255
    16a6:	ca 01       	movw	r24, r20
    16a8:	01 96       	adiw	r24, 0x01	; 1
    16aa:	02 c0       	rjmp	.+4      	; 0x16b0 <u8g2_font_decode_glyph+0x134>
    16ac:	8c 01       	movw	r16, r24
    16ae:	95 01       	movw	r18, r10
    16b0:	ac 01       	movw	r20, r24
    16b2:	b5 01       	movw	r22, r10
    16b4:	ce 01       	movw	r24, r28
    16b6:	0e 94 5d 0e 	call	0x1cba	; 0x1cba <u8g2_IsIntersection>
    16ba:	88 23       	and	r24, r24
    16bc:	79 f1       	breq	.+94     	; 0x171c <u8g2_font_decode_glyph+0x1a0>
    16be:	fe 01       	movw	r30, r28
    16c0:	e8 5b       	subi	r30, 0xB8	; 184
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	16 82       	std	Z+6, r1	; 0x06
    16c6:	17 82       	std	Z+7, r1	; 0x07
    16c8:	fe 01       	movw	r30, r28
    16ca:	e7 5a       	subi	r30, 0xA7	; 167
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	60 81       	ld	r22, Z
    16d0:	c7 01       	movw	r24, r14
    16d2:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    16d6:	08 2f       	mov	r16, r24
    16d8:	fe 01       	movw	r30, r28
    16da:	e6 5a       	subi	r30, 0xA6	; 166
    16dc:	ff 4f       	sbci	r31, 0xFF	; 255
    16de:	60 81       	ld	r22, Z
    16e0:	c7 01       	movw	r24, r14
    16e2:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    16e6:	18 2f       	mov	r17, r24
    16e8:	40 e0       	ldi	r20, 0x00	; 0
    16ea:	60 2f       	mov	r22, r16
    16ec:	ce 01       	movw	r24, r28
    16ee:	0e 94 4d 0a 	call	0x149a	; 0x149a <u8g2_font_decode_len>
    16f2:	41 e0       	ldi	r20, 0x01	; 1
    16f4:	61 2f       	mov	r22, r17
    16f6:	ce 01       	movw	r24, r28
    16f8:	0e 94 4d 0a 	call	0x149a	; 0x149a <u8g2_font_decode_len>
    16fc:	61 e0       	ldi	r22, 0x01	; 1
    16fe:	c7 01       	movw	r24, r14
    1700:	0e 94 b1 09 	call	0x1362	; 0x1362 <u8g2_font_decode_get_unsigned_bits>
    1704:	81 11       	cpse	r24, r1
    1706:	f0 cf       	rjmp	.-32     	; 0x16e8 <u8g2_font_decode_glyph+0x16c>
    1708:	fe 01       	movw	r30, r28
    170a:	e8 5b       	subi	r30, 0xB8	; 184
    170c:	ff 4f       	sbci	r31, 0xFF	; 255
    170e:	87 81       	ldd	r24, Z+7	; 0x07
    1710:	8c 15       	cp	r24, r12
    1712:	d4 f2       	brlt	.-76     	; 0x16c8 <u8g2_font_decode_glyph+0x14c>
    1714:	84 85       	ldd	r24, Z+12	; 0x0c
    1716:	cc 58       	subi	r28, 0x8C	; 140
    1718:	df 4f       	sbci	r29, 0xFF	; 255
    171a:	88 83       	st	Y, r24
    171c:	8d 2d       	mov	r24, r13
    171e:	df 91       	pop	r29
    1720:	cf 91       	pop	r28
    1722:	1f 91       	pop	r17
    1724:	0f 91       	pop	r16
    1726:	ff 90       	pop	r15
    1728:	ef 90       	pop	r14
    172a:	df 90       	pop	r13
    172c:	cf 90       	pop	r12
    172e:	bf 90       	pop	r11
    1730:	af 90       	pop	r10
    1732:	9f 90       	pop	r9
    1734:	8f 90       	pop	r8
    1736:	7f 90       	pop	r7
    1738:	6f 90       	pop	r6
    173a:	08 95       	ret

0000173c <u8g2_font_get_glyph_data>:
    173c:	ef 92       	push	r14
    173e:	ff 92       	push	r15
    1740:	0f 93       	push	r16
    1742:	1f 93       	push	r17
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	fc 01       	movw	r30, r24
    174a:	ec 5b       	subi	r30, 0xBC	; 188
    174c:	ff 4f       	sbci	r31, 0xFF	; 255
    174e:	c0 81       	ld	r28, Z
    1750:	d1 81       	ldd	r29, Z+1	; 0x01
    1752:	67 96       	adiw	r28, 0x17	; 23
    1754:	6f 3f       	cpi	r22, 0xFF	; 255
    1756:	71 05       	cpc	r23, r1
    1758:	09 f0       	breq	.+2      	; 0x175c <u8g2_font_get_glyph_data+0x20>
    175a:	38 f5       	brcc	.+78     	; 0x17aa <u8g2_font_get_glyph_data+0x6e>
    175c:	61 36       	cpi	r22, 0x61	; 97
    175e:	71 05       	cpc	r23, r1
    1760:	30 f0       	brcs	.+12     	; 0x176e <u8g2_font_get_glyph_data+0x32>
    1762:	b6 96       	adiw	r30, 0x26	; 38
    1764:	80 81       	ld	r24, Z
    1766:	91 81       	ldd	r25, Z+1	; 0x01
    1768:	c8 0f       	add	r28, r24
    176a:	d9 1f       	adc	r29, r25
    176c:	0a c0       	rjmp	.+20     	; 0x1782 <u8g2_font_get_glyph_data+0x46>
    176e:	61 34       	cpi	r22, 0x41	; 65
    1770:	71 05       	cpc	r23, r1
    1772:	38 f0       	brcs	.+14     	; 0x1782 <u8g2_font_get_glyph_data+0x46>
    1774:	fc 01       	movw	r30, r24
    1776:	e8 59       	subi	r30, 0x98	; 152
    1778:	ff 4f       	sbci	r31, 0xFF	; 255
    177a:	80 81       	ld	r24, Z
    177c:	91 81       	ldd	r25, Z+1	; 0x01
    177e:	c8 0f       	add	r28, r24
    1780:	d9 1f       	adc	r29, r25
    1782:	ce 01       	movw	r24, r28
    1784:	01 96       	adiw	r24, 0x01	; 1
    1786:	fc 01       	movw	r30, r24
    1788:	24 91       	lpm	r18, Z
    178a:	22 23       	and	r18, r18
    178c:	09 f4       	brne	.+2      	; 0x1790 <u8g2_font_get_glyph_data+0x54>
    178e:	3c c0       	rjmp	.+120    	; 0x1808 <u8g2_font_get_glyph_data+0xcc>
    1790:	fe 01       	movw	r30, r28
    1792:	24 91       	lpm	r18, Z
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	62 17       	cp	r22, r18
    1798:	73 07       	cpc	r23, r19
    179a:	11 f4       	brne	.+4      	; 0x17a0 <u8g2_font_get_glyph_data+0x64>
    179c:	01 96       	adiw	r24, 0x01	; 1
    179e:	39 c0       	rjmp	.+114    	; 0x1812 <u8g2_font_get_glyph_data+0xd6>
    17a0:	fc 01       	movw	r30, r24
    17a2:	84 91       	lpm	r24, Z
    17a4:	c8 0f       	add	r28, r24
    17a6:	d1 1d       	adc	r29, r1
    17a8:	ec cf       	rjmp	.-40     	; 0x1782 <u8g2_font_get_glyph_data+0x46>
    17aa:	8b 01       	movw	r16, r22
    17ac:	fc 01       	movw	r30, r24
    17ae:	e4 59       	subi	r30, 0x94	; 148
    17b0:	ff 4f       	sbci	r31, 0xFF	; 255
    17b2:	80 81       	ld	r24, Z
    17b4:	91 81       	ldd	r25, Z+1	; 0x01
    17b6:	c8 0f       	add	r28, r24
    17b8:	d9 1f       	adc	r29, r25
    17ba:	7e 01       	movw	r14, r28
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	c7 01       	movw	r24, r14
    17c0:	0e 94 27 09 	call	0x124e	; 0x124e <u8g2_font_get_word>
    17c4:	c8 0f       	add	r28, r24
    17c6:	d9 1f       	adc	r29, r25
    17c8:	62 e0       	ldi	r22, 0x02	; 2
    17ca:	c7 01       	movw	r24, r14
    17cc:	0e 94 27 09 	call	0x124e	; 0x124e <u8g2_font_get_word>
    17d0:	f4 e0       	ldi	r31, 0x04	; 4
    17d2:	ef 0e       	add	r14, r31
    17d4:	f1 1c       	adc	r15, r1
    17d6:	80 17       	cp	r24, r16
    17d8:	91 07       	cpc	r25, r17
    17da:	80 f3       	brcs	.-32     	; 0x17bc <u8g2_font_get_glyph_data+0x80>
    17dc:	fe 01       	movw	r30, r28
    17de:	84 91       	lpm	r24, Z
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	98 2f       	mov	r25, r24
    17e4:	88 27       	eor	r24, r24
    17e6:	31 96       	adiw	r30, 0x01	; 1
    17e8:	e4 91       	lpm	r30, Z
    17ea:	8e 2b       	or	r24, r30
    17ec:	00 97       	sbiw	r24, 0x00	; 0
    17ee:	79 f0       	breq	.+30     	; 0x180e <u8g2_font_get_glyph_data+0xd2>
    17f0:	08 17       	cp	r16, r24
    17f2:	19 07       	cpc	r17, r25
    17f4:	19 f4       	brne	.+6      	; 0x17fc <u8g2_font_get_glyph_data+0xc0>
    17f6:	ce 01       	movw	r24, r28
    17f8:	03 96       	adiw	r24, 0x03	; 3
    17fa:	0b c0       	rjmp	.+22     	; 0x1812 <u8g2_font_get_glyph_data+0xd6>
    17fc:	fe 01       	movw	r30, r28
    17fe:	32 96       	adiw	r30, 0x02	; 2
    1800:	e4 91       	lpm	r30, Z
    1802:	ce 0f       	add	r28, r30
    1804:	d1 1d       	adc	r29, r1
    1806:	ea cf       	rjmp	.-44     	; 0x17dc <u8g2_font_get_glyph_data+0xa0>
    1808:	80 e0       	ldi	r24, 0x00	; 0
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <u8g2_font_get_glyph_data+0xd6>
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	ff 90       	pop	r15
    181c:	ef 90       	pop	r14
    181e:	08 95       	ret

00001820 <u8g2_font_draw_glyph>:
    1820:	cf 93       	push	r28
    1822:	df 93       	push	r29
    1824:	ec 01       	movw	r28, r24
    1826:	fc 01       	movw	r30, r24
    1828:	e6 5b       	subi	r30, 0xB6	; 182
    182a:	ff 4f       	sbci	r31, 0xFF	; 255
    182c:	71 83       	std	Z+1, r23	; 0x01
    182e:	60 83       	st	Z, r22
    1830:	32 96       	adiw	r30, 0x02	; 2
    1832:	51 83       	std	Z+1, r21	; 0x01
    1834:	40 83       	st	Z, r20
    1836:	b9 01       	movw	r22, r18
    1838:	0e 94 9e 0b 	call	0x173c	; 0x173c <u8g2_font_get_glyph_data>
    183c:	00 97       	sbiw	r24, 0x00	; 0
    183e:	41 f0       	breq	.+16     	; 0x1850 <u8g2_font_draw_glyph+0x30>
    1840:	bc 01       	movw	r22, r24
    1842:	ce 01       	movw	r24, r28
    1844:	0e 94 be 0a 	call	0x157c	; 0x157c <u8g2_font_decode_glyph>
    1848:	08 2e       	mov	r0, r24
    184a:	00 0c       	add	r0, r0
    184c:	99 0b       	sbc	r25, r25
    184e:	02 c0       	rjmp	.+4      	; 0x1854 <u8g2_font_draw_glyph+0x34>
    1850:	80 e0       	ldi	r24, 0x00	; 0
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	df 91       	pop	r29
    1856:	cf 91       	pop	r28
    1858:	08 95       	ret

0000185a <u8g2_DrawGlyph>:
    185a:	cf 92       	push	r12
    185c:	df 92       	push	r13
    185e:	ef 92       	push	r14
    1860:	ff 92       	push	r15
    1862:	0f 93       	push	r16
    1864:	1f 93       	push	r17
    1866:	cf 93       	push	r28
    1868:	df 93       	push	r29
    186a:	ec 01       	movw	r28, r24
    186c:	8b 01       	movw	r16, r22
    186e:	7a 01       	movw	r14, r20
    1870:	69 01       	movw	r12, r18
    1872:	fc 01       	movw	r30, r24
    1874:	ea 5a       	subi	r30, 0xAA	; 170
    1876:	ff 4f       	sbci	r31, 0xFF	; 255
    1878:	80 81       	ld	r24, Z
    187a:	81 30       	cpi	r24, 0x01	; 1
    187c:	89 f0       	breq	.+34     	; 0x18a0 <u8g2_DrawGlyph+0x46>
    187e:	28 f0       	brcs	.+10     	; 0x188a <u8g2_DrawGlyph+0x30>
    1880:	82 30       	cpi	r24, 0x02	; 2
    1882:	c9 f0       	breq	.+50     	; 0x18b6 <u8g2_DrawGlyph+0x5c>
    1884:	83 30       	cpi	r24, 0x03	; 3
    1886:	11 f1       	breq	.+68     	; 0x18cc <u8g2_DrawGlyph+0x72>
    1888:	2b c0       	rjmp	.+86     	; 0x18e0 <u8g2_DrawGlyph+0x86>
    188a:	fe 01       	movw	r30, r28
    188c:	ea 5b       	subi	r30, 0xBA	; 186
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	01 90       	ld	r0, Z+
    1892:	f0 81       	ld	r31, Z
    1894:	e0 2d       	mov	r30, r0
    1896:	ce 01       	movw	r24, r28
    1898:	09 95       	icall
    189a:	e8 0e       	add	r14, r24
    189c:	f9 1e       	adc	r15, r25
    189e:	20 c0       	rjmp	.+64     	; 0x18e0 <u8g2_DrawGlyph+0x86>
    18a0:	fe 01       	movw	r30, r28
    18a2:	ea 5b       	subi	r30, 0xBA	; 186
    18a4:	ff 4f       	sbci	r31, 0xFF	; 255
    18a6:	01 90       	ld	r0, Z+
    18a8:	f0 81       	ld	r31, Z
    18aa:	e0 2d       	mov	r30, r0
    18ac:	ce 01       	movw	r24, r28
    18ae:	09 95       	icall
    18b0:	08 1b       	sub	r16, r24
    18b2:	19 0b       	sbc	r17, r25
    18b4:	15 c0       	rjmp	.+42     	; 0x18e0 <u8g2_DrawGlyph+0x86>
    18b6:	fe 01       	movw	r30, r28
    18b8:	ea 5b       	subi	r30, 0xBA	; 186
    18ba:	ff 4f       	sbci	r31, 0xFF	; 255
    18bc:	01 90       	ld	r0, Z+
    18be:	f0 81       	ld	r31, Z
    18c0:	e0 2d       	mov	r30, r0
    18c2:	ce 01       	movw	r24, r28
    18c4:	09 95       	icall
    18c6:	e8 1a       	sub	r14, r24
    18c8:	f9 0a       	sbc	r15, r25
    18ca:	0a c0       	rjmp	.+20     	; 0x18e0 <u8g2_DrawGlyph+0x86>
    18cc:	fe 01       	movw	r30, r28
    18ce:	ea 5b       	subi	r30, 0xBA	; 186
    18d0:	ff 4f       	sbci	r31, 0xFF	; 255
    18d2:	01 90       	ld	r0, Z+
    18d4:	f0 81       	ld	r31, Z
    18d6:	e0 2d       	mov	r30, r0
    18d8:	ce 01       	movw	r24, r28
    18da:	09 95       	icall
    18dc:	08 0f       	add	r16, r24
    18de:	19 1f       	adc	r17, r25
    18e0:	96 01       	movw	r18, r12
    18e2:	a7 01       	movw	r20, r14
    18e4:	b8 01       	movw	r22, r16
    18e6:	ce 01       	movw	r24, r28
    18e8:	0e 94 10 0c 	call	0x1820	; 0x1820 <u8g2_font_draw_glyph>
    18ec:	df 91       	pop	r29
    18ee:	cf 91       	pop	r28
    18f0:	1f 91       	pop	r17
    18f2:	0f 91       	pop	r16
    18f4:	ff 90       	pop	r15
    18f6:	ef 90       	pop	r14
    18f8:	df 90       	pop	r13
    18fa:	cf 90       	pop	r12
    18fc:	08 95       	ret

000018fe <u8g2_draw_string>:
    18fe:	af 92       	push	r10
    1900:	bf 92       	push	r11
    1902:	cf 92       	push	r12
    1904:	df 92       	push	r13
    1906:	ef 92       	push	r14
    1908:	ff 92       	push	r15
    190a:	0f 93       	push	r16
    190c:	1f 93       	push	r17
    190e:	cf 93       	push	r28
    1910:	df 93       	push	r29
    1912:	ec 01       	movw	r28, r24
    1914:	5b 01       	movw	r10, r22
    1916:	6a 01       	movw	r12, r20
    1918:	89 01       	movw	r16, r18
    191a:	0e 94 7f 10 	call	0x20fe	; 0x20fe <u8x8_utf8_init>
    191e:	e1 2c       	mov	r14, r1
    1920:	f1 2c       	mov	r15, r1
    1922:	ea 81       	ldd	r30, Y+2	; 0x02
    1924:	fb 81       	ldd	r31, Y+3	; 0x03
    1926:	d8 01       	movw	r26, r16
    1928:	6c 91       	ld	r22, X
    192a:	ce 01       	movw	r24, r28
    192c:	09 95       	icall
    192e:	8f 3f       	cpi	r24, 0xFF	; 255
    1930:	bf ef       	ldi	r27, 0xFF	; 255
    1932:	9b 07       	cpc	r25, r27
    1934:	39 f1       	breq	.+78     	; 0x1984 <u8g2_draw_string+0x86>
    1936:	0f 5f       	subi	r16, 0xFF	; 255
    1938:	1f 4f       	sbci	r17, 0xFF	; 255
    193a:	8e 3f       	cpi	r24, 0xFE	; 254
    193c:	2f ef       	ldi	r18, 0xFF	; 255
    193e:	92 07       	cpc	r25, r18
    1940:	81 f3       	breq	.-32     	; 0x1922 <u8g2_draw_string+0x24>
    1942:	9c 01       	movw	r18, r24
    1944:	a6 01       	movw	r20, r12
    1946:	b5 01       	movw	r22, r10
    1948:	ce 01       	movw	r24, r28
    194a:	0e 94 2d 0c 	call	0x185a	; 0x185a <u8g2_DrawGlyph>
    194e:	9c 01       	movw	r18, r24
    1950:	fe 01       	movw	r30, r28
    1952:	ea 5a       	subi	r30, 0xAA	; 170
    1954:	ff 4f       	sbci	r31, 0xFF	; 255
    1956:	90 81       	ld	r25, Z
    1958:	91 30       	cpi	r25, 0x01	; 1
    195a:	49 f0       	breq	.+18     	; 0x196e <u8g2_draw_string+0x70>
    195c:	28 f0       	brcs	.+10     	; 0x1968 <u8g2_draw_string+0x6a>
    195e:	92 30       	cpi	r25, 0x02	; 2
    1960:	49 f0       	breq	.+18     	; 0x1974 <u8g2_draw_string+0x76>
    1962:	93 30       	cpi	r25, 0x03	; 3
    1964:	51 f0       	breq	.+20     	; 0x197a <u8g2_draw_string+0x7c>
    1966:	0b c0       	rjmp	.+22     	; 0x197e <u8g2_draw_string+0x80>
    1968:	a2 0e       	add	r10, r18
    196a:	b3 1e       	adc	r11, r19
    196c:	08 c0       	rjmp	.+16     	; 0x197e <u8g2_draw_string+0x80>
    196e:	c2 0e       	add	r12, r18
    1970:	d3 1e       	adc	r13, r19
    1972:	05 c0       	rjmp	.+10     	; 0x197e <u8g2_draw_string+0x80>
    1974:	a2 1a       	sub	r10, r18
    1976:	b3 0a       	sbc	r11, r19
    1978:	02 c0       	rjmp	.+4      	; 0x197e <u8g2_draw_string+0x80>
    197a:	c2 1a       	sub	r12, r18
    197c:	d3 0a       	sbc	r13, r19
    197e:	e2 0e       	add	r14, r18
    1980:	f3 1e       	adc	r15, r19
    1982:	cf cf       	rjmp	.-98     	; 0x1922 <u8g2_draw_string+0x24>
    1984:	c7 01       	movw	r24, r14
    1986:	df 91       	pop	r29
    1988:	cf 91       	pop	r28
    198a:	1f 91       	pop	r17
    198c:	0f 91       	pop	r16
    198e:	ff 90       	pop	r15
    1990:	ef 90       	pop	r14
    1992:	df 90       	pop	r13
    1994:	cf 90       	pop	r12
    1996:	bf 90       	pop	r11
    1998:	af 90       	pop	r10
    199a:	08 95       	ret

0000199c <u8g2_DrawStr>:
    199c:	e2 e7       	ldi	r30, 0x72	; 114
    199e:	f0 e1       	ldi	r31, 0x10	; 16
    19a0:	dc 01       	movw	r26, r24
    19a2:	13 96       	adiw	r26, 0x03	; 3
    19a4:	fc 93       	st	X, r31
    19a6:	ee 93       	st	-X, r30
    19a8:	12 97       	sbiw	r26, 0x02	; 2
    19aa:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <u8g2_draw_string>
    19ae:	08 95       	ret

000019b0 <u8g2_UpdateRefHeight>:
    19b0:	fc 01       	movw	r30, r24
    19b2:	ec 5b       	subi	r30, 0xBC	; 188
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	20 81       	ld	r18, Z
    19b8:	31 81       	ldd	r19, Z+1	; 0x01
    19ba:	23 2b       	or	r18, r19
    19bc:	e1 f1       	breq	.+120    	; 0x1a36 <u8g2_UpdateRefHeight+0x86>
    19be:	b0 96       	adiw	r30, 0x20	; 32
    19c0:	20 81       	ld	r18, Z
    19c2:	3c 96       	adiw	r30, 0x0c	; 12
    19c4:	20 83       	st	Z, r18
    19c6:	3b 97       	sbiw	r30, 0x0b	; 11
    19c8:	40 81       	ld	r20, Z
    19ca:	3c 96       	adiw	r30, 0x0c	; 12
    19cc:	40 83       	st	Z, r20
    19ce:	32 97       	sbiw	r30, 0x02	; 2
    19d0:	30 81       	ld	r19, Z
    19d2:	33 23       	and	r19, r19
    19d4:	81 f1       	breq	.+96     	; 0x1a36 <u8g2_UpdateRefHeight+0x86>
    19d6:	31 30       	cpi	r19, 0x01	; 1
    19d8:	79 f4       	brne	.+30     	; 0x19f8 <u8g2_UpdateRefHeight+0x48>
    19da:	39 97       	sbiw	r30, 0x09	; 9
    19dc:	30 81       	ld	r19, Z
    19de:	23 17       	cp	r18, r19
    19e0:	14 f4       	brge	.+4      	; 0x19e6 <u8g2_UpdateRefHeight+0x36>
    19e2:	3a 96       	adiw	r30, 0x0a	; 10
    19e4:	30 83       	st	Z, r19
    19e6:	fc 01       	movw	r30, r24
    19e8:	e9 59       	subi	r30, 0x99	; 153
    19ea:	ff 4f       	sbci	r31, 0xFF	; 255
    19ec:	20 81       	ld	r18, Z
    19ee:	24 17       	cp	r18, r20
    19f0:	14 f5       	brge	.+68     	; 0x1a36 <u8g2_UpdateRefHeight+0x86>
    19f2:	3a 96       	adiw	r30, 0x0a	; 10
    19f4:	20 83       	st	Z, r18
    19f6:	08 95       	ret
    19f8:	02 2e       	mov	r0, r18
    19fa:	00 0c       	add	r0, r0
    19fc:	33 0b       	sbc	r19, r19
    19fe:	fc 01       	movw	r30, r24
    1a00:	ef 59       	subi	r30, 0x9F	; 159
    1a02:	ff 4f       	sbci	r31, 0xFF	; 255
    1a04:	e0 81       	ld	r30, Z
    1a06:	dc 01       	movw	r26, r24
    1a08:	ad 59       	subi	r26, 0x9D	; 157
    1a0a:	bf 4f       	sbci	r27, 0xFF	; 255
    1a0c:	5c 91       	ld	r21, X
    1a0e:	65 2f       	mov	r22, r21
    1a10:	05 2e       	mov	r0, r21
    1a12:	00 0c       	add	r0, r0
    1a14:	77 0b       	sbc	r23, r23
    1a16:	6e 0f       	add	r22, r30
    1a18:	71 1d       	adc	r23, r1
    1a1a:	e7 fd       	sbrc	r30, 7
    1a1c:	7a 95       	dec	r23
    1a1e:	26 17       	cp	r18, r22
    1a20:	37 07       	cpc	r19, r23
    1a22:	1c f4       	brge	.+6      	; 0x1a2a <u8g2_UpdateRefHeight+0x7a>
    1a24:	1d 96       	adiw	r26, 0x0d	; 13
    1a26:	e5 0f       	add	r30, r21
    1a28:	ec 93       	st	X, r30
    1a2a:	54 17       	cp	r21, r20
    1a2c:	24 f4       	brge	.+8      	; 0x1a36 <u8g2_UpdateRefHeight+0x86>
    1a2e:	fc 01       	movw	r30, r24
    1a30:	ef 58       	subi	r30, 0x8F	; 143
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	50 83       	st	Z, r21
    1a36:	08 95       	ret

00001a38 <u8g2_SetFontRefHeightText>:
    1a38:	fc 01       	movw	r30, r24
    1a3a:	e1 59       	subi	r30, 0x91	; 145
    1a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3e:	10 82       	st	Z, r1
    1a40:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <u8g2_UpdateRefHeight>
    1a44:	08 95       	ret

00001a46 <u8g2_SetFontPosBaseline>:
    1a46:	8a 5b       	subi	r24, 0xBA	; 186
    1a48:	9f 4f       	sbci	r25, 0xFF	; 255
    1a4a:	23 e3       	ldi	r18, 0x33	; 51
    1a4c:	39 e0       	ldi	r19, 0x09	; 9
    1a4e:	fc 01       	movw	r30, r24
    1a50:	31 83       	std	Z+1, r19	; 0x01
    1a52:	20 83       	st	Z, r18
    1a54:	08 95       	ret

00001a56 <u8g2_SetFontPosTop>:
    1a56:	8a 5b       	subi	r24, 0xBA	; 186
    1a58:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5a:	26 e3       	ldi	r18, 0x36	; 54
    1a5c:	39 e0       	ldi	r19, 0x09	; 9
    1a5e:	fc 01       	movw	r30, r24
    1a60:	31 83       	std	Z+1, r19	; 0x01
    1a62:	20 83       	st	Z, r18
    1a64:	08 95       	ret

00001a66 <u8g2_SetFont>:
}

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
{
    1a66:	cf 93       	push	r28
    1a68:	df 93       	push	r29
  if ( u8g2->font != font )
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	ec 5b       	subi	r30, 0xBC	; 188
    1a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a70:	20 81       	ld	r18, Z
    1a72:	31 81       	ldd	r19, Z+1	; 0x01
    1a74:	26 17       	cp	r18, r22
    1a76:	37 07       	cpc	r19, r23
    1a78:	51 f0       	breq	.+20     	; 0x1a8e <u8g2_SetFont+0x28>
    1a7a:	ec 01       	movw	r28, r24
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    1a7c:	71 83       	std	Z+1, r23	; 0x01
    1a7e:	60 83       	st	Z, r22
    u8g2_read_font_info(&(u8g2->font_info), font);
    1a80:	89 5a       	subi	r24, 0xA9	; 169
    1a82:	9f 4f       	sbci	r25, 0xFF	; 255
    1a84:	0e 94 3f 09 	call	0x127e	; 0x127e <u8g2_read_font_info>
    u8g2_UpdateRefHeight(u8g2);
    1a88:	ce 01       	movw	r24, r28
    1a8a:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <u8g2_UpdateRefHeight>
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    1a8e:	df 91       	pop	r29
    1a90:	cf 91       	pop	r28
    1a92:	08 95       	ret

00001a94 <u8g2_clip_intersection2>:
// #ifdef U8G2_WITH_INTERSECTION
//   if ( u8g2_IsIntersection(u8g2, x, y, x+1, y+len) == 0 ) 
//     return;
// #endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, len, 1);
}
    1a94:	cf 93       	push	r28
    1a96:	df 93       	push	r29
    1a98:	ec 01       	movw	r28, r24
    1a9a:	a8 81       	ld	r26, Y
    1a9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1a9e:	eb 01       	movw	r28, r22
    1aa0:	e8 81       	ld	r30, Y
    1aa2:	f9 81       	ldd	r31, Y+1	; 0x01
    1aa4:	ea 0f       	add	r30, r26
    1aa6:	fb 1f       	adc	r31, r27
    1aa8:	ea 17       	cp	r30, r26
    1aaa:	fb 07       	cpc	r31, r27
    1aac:	38 f4       	brcc	.+14     	; 0x1abc <u8g2_clip_intersection2+0x28>
    1aae:	a2 17       	cp	r26, r18
    1ab0:	b3 07       	cpc	r27, r19
    1ab2:	18 f4       	brcc	.+6      	; 0x1aba <u8g2_clip_intersection2+0x26>
    1ab4:	f9 01       	movw	r30, r18
    1ab6:	31 97       	sbiw	r30, 0x01	; 1
    1ab8:	01 c0       	rjmp	.+2      	; 0x1abc <u8g2_clip_intersection2+0x28>
    1aba:	da 01       	movw	r26, r20
    1abc:	a2 17       	cp	r26, r18
    1abe:	b3 07       	cpc	r27, r19
    1ac0:	a8 f4       	brcc	.+42     	; 0x1aec <u8g2_clip_intersection2+0x58>
    1ac2:	4e 17       	cp	r20, r30
    1ac4:	5f 07       	cpc	r21, r31
    1ac6:	a0 f4       	brcc	.+40     	; 0x1af0 <u8g2_clip_intersection2+0x5c>
    1ac8:	a4 17       	cp	r26, r20
    1aca:	b5 07       	cpc	r27, r21
    1acc:	08 f0       	brcs	.+2      	; 0x1ad0 <u8g2_clip_intersection2+0x3c>
    1ace:	ad 01       	movw	r20, r26
    1ad0:	2e 17       	cp	r18, r30
    1ad2:	3f 07       	cpc	r19, r31
    1ad4:	08 f0       	brcs	.+2      	; 0x1ad8 <u8g2_clip_intersection2+0x44>
    1ad6:	9f 01       	movw	r18, r30
    1ad8:	fc 01       	movw	r30, r24
    1ada:	51 83       	std	Z+1, r21	; 0x01
    1adc:	40 83       	st	Z, r20
    1ade:	24 1b       	sub	r18, r20
    1ae0:	35 0b       	sbc	r19, r21
    1ae2:	eb 01       	movw	r28, r22
    1ae4:	39 83       	std	Y+1, r19	; 0x01
    1ae6:	28 83       	st	Y, r18
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	03 c0       	rjmp	.+6      	; 0x1af2 <u8g2_clip_intersection2+0x5e>
    1aec:	80 e0       	ldi	r24, 0x00	; 0
    1aee:	01 c0       	rjmp	.+2      	; 0x1af2 <u8g2_clip_intersection2+0x5e>
    1af0:	80 e0       	ldi	r24, 0x00	; 0
    1af2:	df 91       	pop	r29
    1af4:	cf 91       	pop	r28
    1af6:	08 95       	ret

00001af8 <u8g2_draw_hv_line_2dir>:
    1af8:	0f 93       	push	r16
    1afa:	dc 01       	movw	r26, r24
    1afc:	9a 96       	adiw	r26, 0x2a	; 42
    1afe:	ed 91       	ld	r30, X+
    1b00:	fc 91       	ld	r31, X
    1b02:	9b 97       	sbiw	r26, 0x2b	; 43
    1b04:	4e 1b       	sub	r20, r30
    1b06:	5f 0b       	sbc	r21, r31
    1b08:	5e 96       	adiw	r26, 0x1e	; 30
    1b0a:	ed 91       	ld	r30, X+
    1b0c:	fc 91       	ld	r31, X
    1b0e:	5f 97       	sbiw	r26, 0x1f	; 31
    1b10:	09 95       	icall
    1b12:	0f 91       	pop	r16
    1b14:	08 95       	ret

00001b16 <u8g2_DrawHVLine>:
    1b16:	ef 92       	push	r14
    1b18:	ff 92       	push	r15
    1b1a:	0f 93       	push	r16
    1b1c:	1f 93       	push	r17
    1b1e:	cf 93       	push	r28
    1b20:	df 93       	push	r29
    1b22:	00 d0       	rcall	.+0      	; 0x1b24 <u8g2_DrawHVLine+0xe>
    1b24:	00 d0       	rcall	.+0      	; 0x1b26 <u8g2_DrawHVLine+0x10>
    1b26:	00 d0       	rcall	.+0      	; 0x1b28 <u8g2_DrawHVLine+0x12>
    1b28:	cd b7       	in	r28, 0x3d	; 61
    1b2a:	de b7       	in	r29, 0x3e	; 62
    1b2c:	7a 83       	std	Y+2, r23	; 0x02
    1b2e:	69 83       	std	Y+1, r22	; 0x01
    1b30:	5c 83       	std	Y+4, r21	; 0x04
    1b32:	4b 83       	std	Y+3, r20	; 0x03
    1b34:	3e 83       	std	Y+6, r19	; 0x06
    1b36:	2d 83       	std	Y+5, r18	; 0x05
    1b38:	fc 01       	movw	r30, r24
    1b3a:	e2 59       	subi	r30, 0x92	; 146
    1b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3e:	20 81       	ld	r18, Z
    1b40:	22 23       	and	r18, r18
    1b42:	09 f4       	brne	.+2      	; 0x1b46 <u8g2_DrawHVLine+0x30>
    1b44:	74 c0       	rjmp	.+232    	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1b46:	2d 81       	ldd	r18, Y+5	; 0x05
    1b48:	3e 81       	ldd	r19, Y+6	; 0x06
    1b4a:	21 15       	cp	r18, r1
    1b4c:	31 05       	cpc	r19, r1
    1b4e:	09 f4       	brne	.+2      	; 0x1b52 <u8g2_DrawHVLine+0x3c>
    1b50:	6e c0       	rjmp	.+220    	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1b52:	22 30       	cpi	r18, 0x02	; 2
    1b54:	31 05       	cpc	r19, r1
    1b56:	b0 f0       	brcs	.+44     	; 0x1b84 <u8g2_DrawHVLine+0x6e>
    1b58:	02 30       	cpi	r16, 0x02	; 2
    1b5a:	41 f4       	brne	.+16     	; 0x1b6c <u8g2_DrawHVLine+0x56>
    1b5c:	62 1b       	sub	r22, r18
    1b5e:	73 0b       	sbc	r23, r19
    1b60:	9b 01       	movw	r18, r22
    1b62:	2f 5f       	subi	r18, 0xFF	; 255
    1b64:	3f 4f       	sbci	r19, 0xFF	; 255
    1b66:	3a 83       	std	Y+2, r19	; 0x02
    1b68:	29 83       	std	Y+1, r18	; 0x01
    1b6a:	0c c0       	rjmp	.+24     	; 0x1b84 <u8g2_DrawHVLine+0x6e>
    1b6c:	03 30       	cpi	r16, 0x03	; 3
    1b6e:	51 f4       	brne	.+20     	; 0x1b84 <u8g2_DrawHVLine+0x6e>
    1b70:	4b 81       	ldd	r20, Y+3	; 0x03
    1b72:	5c 81       	ldd	r21, Y+4	; 0x04
    1b74:	da 01       	movw	r26, r20
    1b76:	a2 1b       	sub	r26, r18
    1b78:	b3 0b       	sbc	r27, r19
    1b7a:	9d 01       	movw	r18, r26
    1b7c:	2f 5f       	subi	r18, 0xFF	; 255
    1b7e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b80:	3c 83       	std	Y+4, r19	; 0x04
    1b82:	2b 83       	std	Y+3, r18	; 0x03
    1b84:	7c 01       	movw	r14, r24
    1b86:	10 2f       	mov	r17, r16
    1b88:	11 70       	andi	r17, 0x01	; 1
    1b8a:	00 fd       	sbrc	r16, 0
    1b8c:	1d c0       	rjmp	.+58     	; 0x1bc8 <u8g2_DrawHVLine+0xb2>
    1b8e:	fc 01       	movw	r30, r24
    1b90:	20 ad       	ldd	r18, Z+56	; 0x38
    1b92:	31 ad       	ldd	r19, Z+57	; 0x39
    1b94:	8b 81       	ldd	r24, Y+3	; 0x03
    1b96:	9c 81       	ldd	r25, Y+4	; 0x04
    1b98:	82 17       	cp	r24, r18
    1b9a:	93 07       	cpc	r25, r19
    1b9c:	08 f4       	brcc	.+2      	; 0x1ba0 <u8g2_DrawHVLine+0x8a>
    1b9e:	47 c0       	rjmp	.+142    	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1ba0:	22 ad       	ldd	r18, Z+58	; 0x3a
    1ba2:	33 ad       	ldd	r19, Z+59	; 0x3b
    1ba4:	82 17       	cp	r24, r18
    1ba6:	93 07       	cpc	r25, r19
    1ba8:	08 f0       	brcs	.+2      	; 0x1bac <u8g2_DrawHVLine+0x96>
    1baa:	41 c0       	rjmp	.+130    	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1bac:	26 a9       	ldd	r18, Z+54	; 0x36
    1bae:	37 a9       	ldd	r19, Z+55	; 0x37
    1bb0:	44 a9       	ldd	r20, Z+52	; 0x34
    1bb2:	55 a9       	ldd	r21, Z+53	; 0x35
    1bb4:	be 01       	movw	r22, r28
    1bb6:	6b 5f       	subi	r22, 0xFB	; 251
    1bb8:	7f 4f       	sbci	r23, 0xFF	; 255
    1bba:	ce 01       	movw	r24, r28
    1bbc:	01 96       	adiw	r24, 0x01	; 1
    1bbe:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <u8g2_clip_intersection2>
    1bc2:	81 11       	cpse	r24, r1
    1bc4:	23 c0       	rjmp	.+70     	; 0x1c0c <u8g2_DrawHVLine+0xf6>
    1bc6:	33 c0       	rjmp	.+102    	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1bc8:	dc 01       	movw	r26, r24
    1bca:	d4 96       	adiw	r26, 0x34	; 52
    1bcc:	2d 91       	ld	r18, X+
    1bce:	3c 91       	ld	r19, X
    1bd0:	d5 97       	sbiw	r26, 0x35	; 53
    1bd2:	89 81       	ldd	r24, Y+1	; 0x01
    1bd4:	9a 81       	ldd	r25, Y+2	; 0x02
    1bd6:	82 17       	cp	r24, r18
    1bd8:	93 07       	cpc	r25, r19
    1bda:	48 f1       	brcs	.+82     	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1bdc:	d6 96       	adiw	r26, 0x36	; 54
    1bde:	2d 91       	ld	r18, X+
    1be0:	3c 91       	ld	r19, X
    1be2:	d7 97       	sbiw	r26, 0x37	; 55
    1be4:	82 17       	cp	r24, r18
    1be6:	93 07       	cpc	r25, r19
    1be8:	10 f5       	brcc	.+68     	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1bea:	da 96       	adiw	r26, 0x3a	; 58
    1bec:	2d 91       	ld	r18, X+
    1bee:	3c 91       	ld	r19, X
    1bf0:	db 97       	sbiw	r26, 0x3b	; 59
    1bf2:	d8 96       	adiw	r26, 0x38	; 56
    1bf4:	4d 91       	ld	r20, X+
    1bf6:	5c 91       	ld	r21, X
    1bf8:	d9 97       	sbiw	r26, 0x39	; 57
    1bfa:	be 01       	movw	r22, r28
    1bfc:	6b 5f       	subi	r22, 0xFB	; 251
    1bfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1c00:	ce 01       	movw	r24, r28
    1c02:	03 96       	adiw	r24, 0x03	; 3
    1c04:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <u8g2_clip_intersection2>
    1c08:	88 23       	and	r24, r24
    1c0a:	89 f0       	breq	.+34     	; 0x1c2e <u8g2_DrawHVLine+0x118>
    1c0c:	d7 01       	movw	r26, r14
    1c0e:	90 96       	adiw	r26, 0x20	; 32
    1c10:	ed 91       	ld	r30, X+
    1c12:	fc 91       	ld	r31, X
    1c14:	91 97       	sbiw	r26, 0x21	; 33
    1c16:	04 80       	ldd	r0, Z+4	; 0x04
    1c18:	f5 81       	ldd	r31, Z+5	; 0x05
    1c1a:	e0 2d       	mov	r30, r0
    1c1c:	2d 81       	ldd	r18, Y+5	; 0x05
    1c1e:	3e 81       	ldd	r19, Y+6	; 0x06
    1c20:	4b 81       	ldd	r20, Y+3	; 0x03
    1c22:	5c 81       	ldd	r21, Y+4	; 0x04
    1c24:	69 81       	ldd	r22, Y+1	; 0x01
    1c26:	7a 81       	ldd	r23, Y+2	; 0x02
    1c28:	01 2f       	mov	r16, r17
    1c2a:	c7 01       	movw	r24, r14
    1c2c:	09 95       	icall
    1c2e:	26 96       	adiw	r28, 0x06	; 6
    1c30:	0f b6       	in	r0, 0x3f	; 63
    1c32:	f8 94       	cli
    1c34:	de bf       	out	0x3e, r29	; 62
    1c36:	0f be       	out	0x3f, r0	; 63
    1c38:	cd bf       	out	0x3d, r28	; 61
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	1f 91       	pop	r17
    1c40:	0f 91       	pop	r16
    1c42:	ff 90       	pop	r15
    1c44:	ef 90       	pop	r14
    1c46:	08 95       	ret

00001c48 <u8g2_DrawPixel>:

void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
{
    1c48:	0f 93       	push	r16
    1c4a:	fc 01       	movw	r30, r24
#ifdef U8G2_WITH_INTERSECTION
  if ( y < u8g2->user_y0 )
    1c4c:	80 ad       	ldd	r24, Z+56	; 0x38
    1c4e:	91 ad       	ldd	r25, Z+57	; 0x39
    1c50:	48 17       	cp	r20, r24
    1c52:	59 07       	cpc	r21, r25
    1c54:	a8 f0       	brcs	.+42     	; 0x1c80 <u8g2_DrawPixel+0x38>
    return;
  if ( y >= u8g2->user_y1 )
    1c56:	82 ad       	ldd	r24, Z+58	; 0x3a
    1c58:	93 ad       	ldd	r25, Z+59	; 0x3b
    1c5a:	48 17       	cp	r20, r24
    1c5c:	59 07       	cpc	r21, r25
    1c5e:	80 f4       	brcc	.+32     	; 0x1c80 <u8g2_DrawPixel+0x38>
    return;
  if ( x < u8g2->user_x0 )
    1c60:	84 a9       	ldd	r24, Z+52	; 0x34
    1c62:	95 a9       	ldd	r25, Z+53	; 0x35
    1c64:	68 17       	cp	r22, r24
    1c66:	79 07       	cpc	r23, r25
    1c68:	58 f0       	brcs	.+22     	; 0x1c80 <u8g2_DrawPixel+0x38>
    return;
  if ( x >= u8g2->user_x1 )
    1c6a:	86 a9       	ldd	r24, Z+54	; 0x36
    1c6c:	97 a9       	ldd	r25, Z+55	; 0x37
    1c6e:	68 17       	cp	r22, r24
    1c70:	79 07       	cpc	r23, r25
    1c72:	30 f4       	brcc	.+12     	; 0x1c80 <u8g2_DrawPixel+0x38>
    1c74:	cf 01       	movw	r24, r30
    return;
#endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    1c76:	00 e0       	ldi	r16, 0x00	; 0
    1c78:	21 e0       	ldi	r18, 0x01	; 1
    1c7a:	30 e0       	ldi	r19, 0x00	; 0
    1c7c:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <u8g2_DrawHVLine>
}
    1c80:	0f 91       	pop	r16
    1c82:	08 95       	ret

00001c84 <u8g2_is_intersection_decision_tree>:
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    1c84:	46 17       	cp	r20, r22
    1c86:	57 07       	cpc	r21, r23
    1c88:	40 f4       	brcc	.+16     	; 0x1c9a <u8g2_is_intersection_decision_tree+0x16>
  {
    if ( v1 > a0 )	// v1 >= a0
    1c8a:	82 17       	cp	r24, r18
    1c8c:	93 07       	cpc	r25, r19
    1c8e:	68 f0       	brcs	.+26     	; 0x1caa <u8g2_is_intersection_decision_tree+0x26>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    1c90:	24 17       	cp	r18, r20
    1c92:	35 07       	cpc	r19, r21
    1c94:	60 f4       	brcc	.+24     	; 0x1cae <u8g2_is_intersection_decision_tree+0x2a>
      {
	return 1;
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	08 95       	ret
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    1c9a:	82 17       	cp	r24, r18
    1c9c:	93 07       	cpc	r25, r19
    1c9e:	48 f4       	brcc	.+18     	; 0x1cb2 <u8g2_is_intersection_decision_tree+0x2e>
    {
      if ( v0 > v1 )	// v0 > v1
    1ca0:	24 17       	cp	r18, r20
    1ca2:	35 07       	cpc	r19, r21
    1ca4:	40 f4       	brcc	.+16     	; 0x1cb6 <u8g2_is_intersection_decision_tree+0x32>
      {
	return 1;
    1ca6:	81 e0       	ldi	r24, 0x01	; 1
    1ca8:	08 95       	ret
{
  if ( v0 < a1 )		// v0 <= a1
  {
    if ( v1 > a0 )	// v1 >= a0
    {
      return 1;
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	08 95       	ret
      {
	return 1;
      }
      else
      {
	return 0;
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	08 95       	ret
	return 0;
      }
    }
    else
    {
      return 0;
    1cb2:	80 e0       	ldi	r24, 0x00	; 0
    1cb4:	08 95       	ret
      {
	return 1;
      }
      else
      {
	return 0;
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    else
    {
      return 0;
    }
  }
}
    1cb8:	08 95       	ret

00001cba <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    1cba:	cf 92       	push	r12
    1cbc:	df 92       	push	r13
    1cbe:	ef 92       	push	r14
    1cc0:	ff 92       	push	r15
    1cc2:	0f 93       	push	r16
    1cc4:	1f 93       	push	r17
    1cc6:	cf 93       	push	r28
    1cc8:	df 93       	push	r29
    1cca:	ec 01       	movw	r28, r24
    1ccc:	7b 01       	movw	r14, r22
    1cce:	69 01       	movw	r12, r18
    1cd0:	98 01       	movw	r18, r16
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    1cd2:	6a ad       	ldd	r22, Y+58	; 0x3a
    1cd4:	7b ad       	ldd	r23, Y+59	; 0x3b
    1cd6:	88 ad       	ldd	r24, Y+56	; 0x38
    1cd8:	99 ad       	ldd	r25, Y+57	; 0x39
    1cda:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <u8g2_is_intersection_decision_tree>
    1cde:	88 23       	and	r24, r24
    1ce0:	41 f0       	breq	.+16     	; 0x1cf2 <u8g2_IsIntersection+0x38>
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    1ce2:	6e a9       	ldd	r22, Y+54	; 0x36
    1ce4:	7f a9       	ldd	r23, Y+55	; 0x37
    1ce6:	96 01       	movw	r18, r12
    1ce8:	a7 01       	movw	r20, r14
    1cea:	8c a9       	ldd	r24, Y+52	; 0x34
    1cec:	9d a9       	ldd	r25, Y+53	; 0x35
    1cee:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <u8g2_is_intersection_decision_tree>
}
    1cf2:	df 91       	pop	r29
    1cf4:	cf 91       	pop	r28
    1cf6:	1f 91       	pop	r17
    1cf8:	0f 91       	pop	r16
    1cfa:	ff 90       	pop	r15
    1cfc:	ef 90       	pop	r14
    1cfe:	df 90       	pop	r13
    1d00:	cf 90       	pop	r12
    1d02:	08 95       	ret

00001d04 <u8g2_DrawLine>:

#include "u8g2.h"


void u8g2_DrawLine(u8g2_t *u8g2, u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2)
{
    1d04:	3f 92       	push	r3
    1d06:	4f 92       	push	r4
    1d08:	5f 92       	push	r5
    1d0a:	6f 92       	push	r6
    1d0c:	7f 92       	push	r7
    1d0e:	8f 92       	push	r8
    1d10:	9f 92       	push	r9
    1d12:	af 92       	push	r10
    1d14:	bf 92       	push	r11
    1d16:	cf 92       	push	r12
    1d18:	df 92       	push	r13
    1d1a:	ef 92       	push	r14
    1d1c:	ff 92       	push	r15
    1d1e:	0f 93       	push	r16
    1d20:	1f 93       	push	r17
    1d22:	cf 93       	push	r28
    1d24:	df 93       	push	r29
    1d26:	3c 01       	movw	r6, r24
    1d28:	eb 01       	movw	r28, r22
    1d2a:	6a 01       	movw	r12, r20
    1d2c:	59 01       	movw	r10, r18

  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
    1d2e:	26 17       	cp	r18, r22
    1d30:	37 07       	cpc	r19, r23
    1d32:	20 f4       	brcc	.+8      	; 0x1d3c <u8g2_DrawLine+0x38>
    1d34:	4b 01       	movw	r8, r22
    1d36:	82 1a       	sub	r8, r18
    1d38:	93 0a       	sbc	r9, r19
    1d3a:	03 c0       	rjmp	.+6      	; 0x1d42 <u8g2_DrawLine+0x3e>
    1d3c:	49 01       	movw	r8, r18
    1d3e:	86 1a       	sub	r8, r22
    1d40:	97 0a       	sbc	r9, r23
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    1d42:	0c 15       	cp	r16, r12
    1d44:	1d 05       	cpc	r17, r13
    1d46:	20 f4       	brcc	.+8      	; 0x1d50 <u8g2_DrawLine+0x4c>
    1d48:	26 01       	movw	r4, r12
    1d4a:	40 1a       	sub	r4, r16
    1d4c:	51 0a       	sbc	r5, r17
    1d4e:	03 c0       	rjmp	.+6      	; 0x1d56 <u8g2_DrawLine+0x52>
    1d50:	28 01       	movw	r4, r16
    1d52:	4c 18       	sub	r4, r12
    1d54:	5d 08       	sbc	r5, r13

  if ( dy > dx ) 
    1d56:	84 14       	cp	r8, r4
    1d58:	95 04       	cpc	r9, r5
    1d5a:	38 f0       	brcs	.+14     	; 0x1d6a <u8g2_DrawLine+0x66>
    1d5c:	94 2d       	mov	r25, r4
    1d5e:	85 2d       	mov	r24, r5
    1d60:	24 01       	movw	r4, r8
    1d62:	89 2e       	mov	r8, r25
    1d64:	98 2e       	mov	r9, r24
  u8g2_uint_t x,y;
  u8g2_uint_t dx, dy;
  u8g2_int_t err;
  u8g2_int_t ystep;

  uint8_t swapxy = 0;
    1d66:	31 2c       	mov	r3, r1
    1d68:	0c c0       	rjmp	.+24     	; 0x1d82 <u8g2_DrawLine+0x7e>
    1d6a:	9a 2d       	mov	r25, r10
    1d6c:	8b 2d       	mov	r24, r11
  if ( dy > dx ) 
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
    1d6e:	58 01       	movw	r10, r16
    1d70:	09 2f       	mov	r16, r25
    1d72:	18 2f       	mov	r17, r24
    1d74:	9c 2f       	mov	r25, r28
    1d76:	8d 2f       	mov	r24, r29

  if ( dy > dx ) 
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    1d78:	e6 01       	movw	r28, r12
    1d7a:	c9 2e       	mov	r12, r25
    1d7c:	d8 2e       	mov	r13, r24
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
  {
    swapxy = 1;
    1d7e:	33 24       	eor	r3, r3
    1d80:	33 94       	inc	r3
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
    1d82:	ac 16       	cp	r10, r28
    1d84:	bd 06       	cpc	r11, r29
    1d86:	50 f4       	brcc	.+20     	; 0x1d9c <u8g2_DrawLine+0x98>
    1d88:	9c 2d       	mov	r25, r12
    1d8a:	8d 2d       	mov	r24, r13
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
    1d8c:	68 01       	movw	r12, r16
    1d8e:	09 2f       	mov	r16, r25
    1d90:	18 2f       	mov	r17, r24
    1d92:	9c 2f       	mov	r25, r28
    1d94:	8d 2f       	mov	r24, r29
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
  }
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    1d96:	e5 01       	movw	r28, r10
    1d98:	a9 2e       	mov	r10, r25
    1d9a:	b8 2e       	mov	r11, r24
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    1d9c:	72 01       	movw	r14, r4
    1d9e:	f6 94       	lsr	r15
    1da0:	e7 94       	ror	r14
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    1da2:	c0 16       	cp	r12, r16
    1da4:	d1 06       	cpc	r13, r17
    1da6:	18 f4       	brcc	.+6      	; 0x1dae <u8g2_DrawLine+0xaa>
    1da8:	01 e0       	ldi	r16, 0x01	; 1
    1daa:	10 e0       	ldi	r17, 0x00	; 0
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <u8g2_DrawLine+0xae>
    1dae:	0f ef       	ldi	r16, 0xFF	; 255
    1db0:	1f ef       	ldi	r17, 0xFF	; 255

#ifndef  U8G2_16BIT
  if ( x2 == 255 )
    x2--;
#else
  if ( x2 == 0xffff )
    1db2:	8f ef       	ldi	r24, 0xFF	; 255
    1db4:	a8 16       	cp	r10, r24
    1db6:	b8 06       	cpc	r11, r24
    1db8:	e1 f4       	brne	.+56     	; 0x1df2 <u8g2_DrawLine+0xee>
    x2--;
    1dba:	81 e0       	ldi	r24, 0x01	; 1
    1dbc:	a8 1a       	sub	r10, r24
    1dbe:	b1 08       	sbc	r11, r1
#endif

  for( x = x1; x <= x2; x++ )
    1dc0:	18 c0       	rjmp	.+48     	; 0x1df2 <u8g2_DrawLine+0xee>
  {
    if ( swapxy == 0 ) 
    1dc2:	31 10       	cpse	r3, r1
    1dc4:	06 c0       	rjmp	.+12     	; 0x1dd2 <u8g2_DrawLine+0xce>
      u8g2_DrawPixel(u8g2, x, y); 
    1dc6:	a6 01       	movw	r20, r12
    1dc8:	be 01       	movw	r22, r28
    1dca:	c3 01       	movw	r24, r6
    1dcc:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <u8g2_DrawPixel>
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <u8g2_DrawLine+0xd8>
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    1dd2:	ae 01       	movw	r20, r28
    1dd4:	b6 01       	movw	r22, r12
    1dd6:	c3 01       	movw	r24, r6
    1dd8:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <u8g2_DrawPixel>
    err -= (u8g2_uint_t)dy;
    1ddc:	c7 01       	movw	r24, r14
    1dde:	88 19       	sub	r24, r8
    1de0:	99 09       	sbc	r25, r9
    1de2:	7c 01       	movw	r14, r24
    if ( err < 0 ) 
    1de4:	2a f4       	brpl	.+10     	; 0x1df0 <u8g2_DrawLine+0xec>
    {
      y += (u8g2_uint_t)ystep;
    1de6:	c0 0e       	add	r12, r16
    1de8:	d1 1e       	adc	r13, r17
      err += (u8g2_uint_t)dx;
    1dea:	72 01       	movw	r14, r4
    1dec:	e8 0e       	add	r14, r24
    1dee:	f9 1e       	adc	r15, r25
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    1df0:	21 96       	adiw	r28, 0x01	; 1
    1df2:	ac 16       	cp	r10, r28
    1df4:	bd 06       	cpc	r11, r29
    1df6:	28 f7       	brcc	.-54     	; 0x1dc2 <u8g2_DrawLine+0xbe>
    {
      y += (u8g2_uint_t)ystep;
      err += (u8g2_uint_t)dx;
    }
  }
}
    1df8:	df 91       	pop	r29
    1dfa:	cf 91       	pop	r28
    1dfc:	1f 91       	pop	r17
    1dfe:	0f 91       	pop	r16
    1e00:	ff 90       	pop	r15
    1e02:	ef 90       	pop	r14
    1e04:	df 90       	pop	r13
    1e06:	cf 90       	pop	r12
    1e08:	bf 90       	pop	r11
    1e0a:	af 90       	pop	r10
    1e0c:	9f 90       	pop	r9
    1e0e:	8f 90       	pop	r8
    1e10:	7f 90       	pop	r7
    1e12:	6f 90       	pop	r6
    1e14:	5f 90       	pop	r5
    1e16:	4f 90       	pop	r4
    1e18:	3f 90       	pop	r3
    1e1a:	08 95       	ret

00001e1c <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    1e1c:	0f 93       	push	r16
    1e1e:	1f 93       	push	r17
    1e20:	cf 93       	push	r28
    1e22:	df 93       	push	r29
    1e24:	dc 01       	movw	r26, r24
    1e26:	ca 01       	movw	r24, r20
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    1e28:	54 2f       	mov	r21, r20
    1e2a:	57 70       	andi	r21, 0x07	; 7
  mask = 1;
  mask <<= bit_pos;
    1e2c:	c1 e0       	ldi	r28, 0x01	; 1
    1e2e:	d0 e0       	ldi	r29, 0x00	; 0
    1e30:	05 2e       	mov	r0, r21
    1e32:	02 c0       	rjmp	.+4      	; 0x1e38 <u8g2_ll_hvline_vertical_top_lsb+0x1c>
    1e34:	cc 0f       	add	r28, r28
    1e36:	dd 1f       	adc	r29, r29
    1e38:	0a 94       	dec	r0
    1e3a:	e2 f7       	brpl	.-8      	; 0x1e34 <u8g2_ll_hvline_vertical_top_lsb+0x18>
    1e3c:	1c 2f       	mov	r17, r28

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    1e3e:	fd 01       	movw	r30, r26
    1e40:	ec 58       	subi	r30, 0x8C	; 140
    1e42:	ff 4f       	sbci	r31, 0xFF	; 255
    1e44:	e0 81       	ld	r30, Z
    1e46:	e2 30       	cpi	r30, 0x02	; 2
    1e48:	10 f0       	brcs	.+4      	; 0x1e4e <u8g2_ll_hvline_vertical_top_lsb+0x32>
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
    1e4a:	40 e0       	ldi	r20, 0x00	; 0
    1e4c:	01 c0       	rjmp	.+2      	; 0x1e50 <u8g2_ll_hvline_vertical_top_lsb+0x34>
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    or_mask  = mask;
    1e4e:	4c 2f       	mov	r20, r28
  if ( u8g2->draw_color != 1 )
    1e50:	e1 30       	cpi	r30, 0x01	; 1
    1e52:	09 f4       	brne	.+2      	; 0x1e56 <u8g2_ll_hvline_vertical_top_lsb+0x3a>
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
    1e54:	10 e0       	ldi	r17, 0x00	; 0
  if ( u8g2->draw_color != 1 )
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
    1e56:	88 7f       	andi	r24, 0xF8	; 248
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1e58:	ed 91       	ld	r30, X+
    1e5a:	fc 91       	ld	r31, X
    1e5c:	11 97       	sbiw	r26, 0x01	; 1
    1e5e:	c0 89       	ldd	r28, Z+16	; 0x10
    1e60:	c8 9f       	mul	r28, r24
    1e62:	f0 01       	movw	r30, r0
    1e64:	c9 9f       	mul	r28, r25
    1e66:	f0 0d       	add	r31, r0
    1e68:	11 24       	eor	r1, r1
  ptr = u8g2->tile_buf_ptr;
    1e6a:	92 96       	adiw	r26, 0x22	; 34
    1e6c:	8d 91       	ld	r24, X+
    1e6e:	9c 91       	ld	r25, X
    1e70:	93 97       	sbiw	r26, 0x23	; 35
  ptr += offset;
  ptr += x;
    1e72:	6e 0f       	add	r22, r30
    1e74:	7f 1f       	adc	r23, r31
    1e76:	fc 01       	movw	r30, r24
    1e78:	e6 0f       	add	r30, r22
    1e7a:	f7 1f       	adc	r31, r23
  
  if ( dir == 0 )
    1e7c:	01 11       	cpse	r16, r1
    1e7e:	08 c0       	rjmp	.+16     	; 0x1e90 <u8g2_ll_hvline_vertical_top_lsb+0x74>
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    1e80:	80 81       	ld	r24, Z
    1e82:	84 2b       	or	r24, r20
	*ptr ^= xor_mask;
    1e84:	81 27       	eor	r24, r17
    1e86:	81 93       	st	Z+, r24
	ptr++;
	len--;
    1e88:	21 50       	subi	r18, 0x01	; 1
    1e8a:	31 09       	sbc	r19, r1
      } while( len != 0 );
    1e8c:	c9 f7       	brne	.-14     	; 0x1e80 <u8g2_ll_hvline_vertical_top_lsb+0x64>
    1e8e:	21 c0       	rjmp	.+66     	; 0x1ed2 <u8g2_ll_hvline_vertical_top_lsb+0xb6>
    do
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
    1e90:	90 81       	ld	r25, Z
    1e92:	94 2b       	or	r25, r20
      *ptr ^= xor_mask;
    1e94:	91 27       	eor	r25, r17
    1e96:	90 83       	st	Z, r25
      
      bit_pos++;
    1e98:	5f 5f       	subi	r21, 0xFF	; 255
      bit_pos &= 7;
    1e9a:	57 70       	andi	r21, 0x07	; 7

      len--;
    1e9c:	21 50       	subi	r18, 0x01	; 1
    1e9e:	31 09       	sbc	r19, r1

      if ( bit_pos == 0 )
    1ea0:	51 11       	cpse	r21, r1
    1ea2:	10 c0       	rjmp	.+32     	; 0x1ec4 <u8g2_ll_hvline_vertical_top_lsb+0xa8>
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    1ea4:	96 96       	adiw	r26, 0x26	; 38
    1ea6:	8d 91       	ld	r24, X+
    1ea8:	9c 91       	ld	r25, X
    1eaa:	97 97       	sbiw	r26, 0x27	; 39
    1eac:	e8 0f       	add	r30, r24
    1eae:	f9 1f       	adc	r31, r25
		
	if ( u8g2->draw_color <= 1 )
    1eb0:	ed 01       	movw	r28, r26
    1eb2:	cc 58       	subi	r28, 0x8C	; 140
    1eb4:	df 4f       	sbci	r29, 0xFF	; 255
    1eb6:	88 81       	ld	r24, Y
    1eb8:	82 30       	cpi	r24, 0x02	; 2
    1eba:	08 f4       	brcc	.+2      	; 0x1ebe <u8g2_ll_hvline_vertical_top_lsb+0xa2>
	  or_mask  = 1;
    1ebc:	41 e0       	ldi	r20, 0x01	; 1
	if ( u8g2->draw_color != 1 )
    1ebe:	81 30       	cpi	r24, 0x01	; 1
    1ec0:	21 f4       	brne	.+8      	; 0x1eca <u8g2_ll_hvline_vertical_top_lsb+0xae>
    1ec2:	04 c0       	rjmp	.+8      	; 0x1ecc <u8g2_ll_hvline_vertical_top_lsb+0xb0>
	  xor_mask = 1;
      }
      else
      {
	or_mask <<= 1;
    1ec4:	44 0f       	add	r20, r20
	xor_mask <<= 1;
    1ec6:	11 0f       	add	r17, r17
    1ec8:	01 c0       	rjmp	.+2      	; 0x1ecc <u8g2_ll_hvline_vertical_top_lsb+0xb0>
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
    1eca:	11 e0       	ldi	r17, 0x01	; 1
      else
      {
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
    1ecc:	21 15       	cp	r18, r1
    1ece:	31 05       	cpc	r19, r1
    1ed0:	f9 f6       	brne	.-66     	; 0x1e90 <u8g2_ll_hvline_vertical_top_lsb+0x74>
  }
}
    1ed2:	df 91       	pop	r29
    1ed4:	cf 91       	pop	r28
    1ed6:	1f 91       	pop	r17
    1ed8:	0f 91       	pop	r16
    1eda:	08 95       	ret

00001edc <u8g2_update_dimension_common>:
  u8g2->clip_x0 = clip_x0;
  u8g2->clip_y0 = clip_y0;
  u8g2->clip_x1 = clip_x1;
  u8g2->clip_y1 = clip_y1;
  u8g2->cb->update_page_win(u8g2);
}
    1edc:	cf 93       	push	r28
    1ede:	df 93       	push	r29
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	a0 81       	ld	r26, Z
    1ee4:	b1 81       	ldd	r27, Z+1	; 0x01
    1ee6:	84 a1       	ldd	r24, Z+36	; 0x24
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	9c 01       	movw	r18, r24
    1eec:	22 0f       	add	r18, r18
    1eee:	33 1f       	adc	r19, r19
    1ef0:	22 0f       	add	r18, r18
    1ef2:	33 1f       	adc	r19, r19
    1ef4:	22 0f       	add	r18, r18
    1ef6:	33 1f       	adc	r19, r19
    1ef8:	31 a7       	std	Z+41, r19	; 0x29
    1efa:	20 a7       	std	Z+40, r18	; 0x28
    1efc:	50 96       	adiw	r26, 0x10	; 16
    1efe:	2c 91       	ld	r18, X
    1f00:	50 97       	sbiw	r26, 0x10	; 16
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	22 0f       	add	r18, r18
    1f06:	33 1f       	adc	r19, r19
    1f08:	22 0f       	add	r18, r18
    1f0a:	33 1f       	adc	r19, r19
    1f0c:	22 0f       	add	r18, r18
    1f0e:	33 1f       	adc	r19, r19
    1f10:	37 a3       	std	Z+39, r19	; 0x27
    1f12:	26 a3       	std	Z+38, r18	; 0x26
    1f14:	75 a1       	ldd	r23, Z+37	; 0x25
    1f16:	27 2f       	mov	r18, r23
    1f18:	30 e0       	ldi	r19, 0x00	; 0
    1f1a:	a9 01       	movw	r20, r18
    1f1c:	44 0f       	add	r20, r20
    1f1e:	55 1f       	adc	r21, r21
    1f20:	44 0f       	add	r20, r20
    1f22:	55 1f       	adc	r21, r21
    1f24:	44 0f       	add	r20, r20
    1f26:	55 1f       	adc	r21, r21
    1f28:	53 a7       	std	Z+43, r21	; 0x2b
    1f2a:	42 a7       	std	Z+42, r20	; 0x2a
    1f2c:	28 0f       	add	r18, r24
    1f2e:	39 1f       	adc	r19, r25
    1f30:	51 96       	adiw	r26, 0x11	; 17
    1f32:	6c 91       	ld	r22, X
    1f34:	51 97       	sbiw	r26, 0x11	; 17
    1f36:	c6 2f       	mov	r28, r22
    1f38:	d0 e0       	ldi	r29, 0x00	; 0
    1f3a:	c2 17       	cp	r28, r18
    1f3c:	d3 07       	cpc	r29, r19
    1f3e:	18 f4       	brcc	.+6      	; 0x1f46 <u8g2_update_dimension_common+0x6a>
    1f40:	ce 01       	movw	r24, r28
    1f42:	87 1b       	sub	r24, r23
    1f44:	91 09       	sbc	r25, r1
    1f46:	88 0f       	add	r24, r24
    1f48:	99 1f       	adc	r25, r25
    1f4a:	88 0f       	add	r24, r24
    1f4c:	99 1f       	adc	r25, r25
    1f4e:	88 0f       	add	r24, r24
    1f50:	99 1f       	adc	r25, r25
    1f52:	55 a7       	std	Z+45, r21	; 0x2d
    1f54:	44 a7       	std	Z+44, r20	; 0x2c
    1f56:	84 0f       	add	r24, r20
    1f58:	95 1f       	adc	r25, r21
    1f5a:	97 a7       	std	Z+47, r25	; 0x2f
    1f5c:	86 a7       	std	Z+46, r24	; 0x2e
    1f5e:	54 96       	adiw	r26, 0x14	; 20
    1f60:	8d 91       	ld	r24, X+
    1f62:	9c 91       	ld	r25, X
    1f64:	55 97       	sbiw	r26, 0x15	; 21
    1f66:	91 ab       	std	Z+49, r25	; 0x31
    1f68:	80 ab       	std	Z+48, r24	; 0x30
    1f6a:	56 96       	adiw	r26, 0x16	; 22
    1f6c:	8d 91       	ld	r24, X+
    1f6e:	9c 91       	ld	r25, X
    1f70:	57 97       	sbiw	r26, 0x17	; 23
    1f72:	93 ab       	std	Z+51, r25	; 0x33
    1f74:	82 ab       	std	Z+50, r24	; 0x32
    1f76:	df 91       	pop	r29
    1f78:	cf 91       	pop	r28
    1f7a:	08 95       	ret

00001f7c <u8g2_update_dimension_r0>:
    1f7c:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <u8g2_update_dimension_common>
    1f80:	08 95       	ret

00001f82 <u8g2_apply_clip_window>:
    1f82:	0f 93       	push	r16
    1f84:	1f 93       	push	r17
    1f86:	cf 93       	push	r28
    1f88:	df 93       	push	r29
    1f8a:	ec 01       	movw	r28, r24
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	ee 5b       	subi	r30, 0xBE	; 190
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	00 81       	ld	r16, Z
    1f94:	11 81       	ldd	r17, Z+1	; 0x01
    1f96:	2e ad       	ldd	r18, Y+62	; 0x3e
    1f98:	3f ad       	ldd	r19, Y+63	; 0x3f
    1f9a:	32 97       	sbiw	r30, 0x02	; 2
    1f9c:	40 81       	ld	r20, Z
    1f9e:	51 81       	ldd	r21, Z+1	; 0x01
    1fa0:	6c ad       	ldd	r22, Y+60	; 0x3c
    1fa2:	7d ad       	ldd	r23, Y+61	; 0x3d
    1fa4:	0e 94 5d 0e 	call	0x1cba	; 0x1cba <u8g2_IsIntersection>
    1fa8:	81 11       	cpse	r24, r1
    1faa:	04 c0       	rjmp	.+8      	; 0x1fb4 <u8g2_apply_clip_window+0x32>
    1fac:	c2 59       	subi	r28, 0x92	; 146
    1fae:	df 4f       	sbci	r29, 0xFF	; 255
    1fb0:	18 82       	st	Y, r1
    1fb2:	2f c0       	rjmp	.+94     	; 0x2012 <u8g2_apply_clip_window+0x90>
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	fe 01       	movw	r30, r28
    1fb8:	e2 59       	subi	r30, 0x92	; 146
    1fba:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbc:	80 83       	st	Z, r24
    1fbe:	2c a9       	ldd	r18, Y+52	; 0x34
    1fc0:	3d a9       	ldd	r19, Y+53	; 0x35
    1fc2:	8c ad       	ldd	r24, Y+60	; 0x3c
    1fc4:	9d ad       	ldd	r25, Y+61	; 0x3d
    1fc6:	28 17       	cp	r18, r24
    1fc8:	39 07       	cpc	r19, r25
    1fca:	10 f4       	brcc	.+4      	; 0x1fd0 <u8g2_apply_clip_window+0x4e>
    1fcc:	9d ab       	std	Y+53, r25	; 0x35
    1fce:	8c ab       	std	Y+52, r24	; 0x34
    1fd0:	2e a9       	ldd	r18, Y+54	; 0x36
    1fd2:	3f a9       	ldd	r19, Y+55	; 0x37
    1fd4:	8e ad       	ldd	r24, Y+62	; 0x3e
    1fd6:	9f ad       	ldd	r25, Y+63	; 0x3f
    1fd8:	82 17       	cp	r24, r18
    1fda:	93 07       	cpc	r25, r19
    1fdc:	10 f4       	brcc	.+4      	; 0x1fe2 <u8g2_apply_clip_window+0x60>
    1fde:	9f ab       	std	Y+55, r25	; 0x37
    1fe0:	8e ab       	std	Y+54, r24	; 0x36
    1fe2:	28 ad       	ldd	r18, Y+56	; 0x38
    1fe4:	39 ad       	ldd	r19, Y+57	; 0x39
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e0 5c       	subi	r30, 0xC0	; 192
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	80 81       	ld	r24, Z
    1fee:	91 81       	ldd	r25, Z+1	; 0x01
    1ff0:	28 17       	cp	r18, r24
    1ff2:	39 07       	cpc	r19, r25
    1ff4:	10 f4       	brcc	.+4      	; 0x1ffa <u8g2_apply_clip_window+0x78>
    1ff6:	99 af       	std	Y+57, r25	; 0x39
    1ff8:	88 af       	std	Y+56, r24	; 0x38
    1ffa:	2a ad       	ldd	r18, Y+58	; 0x3a
    1ffc:	3b ad       	ldd	r19, Y+59	; 0x3b
    1ffe:	fe 01       	movw	r30, r28
    2000:	ee 5b       	subi	r30, 0xBE	; 190
    2002:	ff 4f       	sbci	r31, 0xFF	; 255
    2004:	80 81       	ld	r24, Z
    2006:	91 81       	ldd	r25, Z+1	; 0x01
    2008:	82 17       	cp	r24, r18
    200a:	93 07       	cpc	r25, r19
    200c:	10 f4       	brcc	.+4      	; 0x2012 <u8g2_apply_clip_window+0x90>
    200e:	9b af       	std	Y+59, r25	; 0x3b
    2010:	8a af       	std	Y+58, r24	; 0x3a
    2012:	df 91       	pop	r29
    2014:	cf 91       	pop	r28
    2016:	1f 91       	pop	r17
    2018:	0f 91       	pop	r16
    201a:	08 95       	ret

0000201c <u8g2_update_page_win_r0>:
    201c:	fc 01       	movw	r30, r24
    201e:	15 aa       	std	Z+53, r1	; 0x35
    2020:	14 aa       	std	Z+52, r1	; 0x34
    2022:	80 a9       	ldd	r24, Z+48	; 0x30
    2024:	91 a9       	ldd	r25, Z+49	; 0x31
    2026:	97 ab       	std	Z+55, r25	; 0x37
    2028:	86 ab       	std	Z+54, r24	; 0x36
    202a:	84 a5       	ldd	r24, Z+44	; 0x2c
    202c:	95 a5       	ldd	r25, Z+45	; 0x2d
    202e:	91 af       	std	Z+57, r25	; 0x39
    2030:	80 af       	std	Z+56, r24	; 0x38
    2032:	86 a5       	ldd	r24, Z+46	; 0x2e
    2034:	97 a5       	ldd	r25, Z+47	; 0x2f
    2036:	93 af       	std	Z+59, r25	; 0x3b
    2038:	82 af       	std	Z+58, r24	; 0x3a
    203a:	cf 01       	movw	r24, r30
    203c:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <u8g2_apply_clip_window>
    2040:	08 95       	ret

00002042 <u8g2_draw_l90_r0>:
    2042:	0f 93       	push	r16
    2044:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <u8g2_draw_hv_line_2dir>
    2048:	0f 91       	pop	r16
    204a:	08 95       	ret

0000204c <u8g2_SetMaxClipWindow>:
    204c:	dc 01       	movw	r26, r24
    204e:	dd 96       	adiw	r26, 0x3d	; 61
    2050:	1c 92       	st	X, r1
    2052:	1e 92       	st	-X, r1
    2054:	dc 97       	sbiw	r26, 0x3c	; 60
    2056:	fc 01       	movw	r30, r24
    2058:	e0 5c       	subi	r30, 0xC0	; 192
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	11 82       	std	Z+1, r1	; 0x01
    205e:	10 82       	st	Z, r1
    2060:	2f ef       	ldi	r18, 0xFF	; 255
    2062:	3f ef       	ldi	r19, 0xFF	; 255
    2064:	fc 01       	movw	r30, r24
    2066:	37 af       	std	Z+63, r19	; 0x3f
    2068:	26 af       	std	Z+62, r18	; 0x3e
    206a:	ee 5b       	subi	r30, 0xBE	; 190
    206c:	ff 4f       	sbci	r31, 0xFF	; 255
    206e:	31 83       	std	Z+1, r19	; 0x01
    2070:	20 83       	st	Z, r18
    2072:	90 96       	adiw	r26, 0x20	; 32
    2074:	ed 91       	ld	r30, X+
    2076:	fc 91       	ld	r31, X
    2078:	91 97       	sbiw	r26, 0x21	; 33
    207a:	02 80       	ldd	r0, Z+2	; 0x02
    207c:	f3 81       	ldd	r31, Z+3	; 0x03
    207e:	e0 2d       	mov	r30, r0
    2080:	09 95       	icall
    2082:	08 95       	ret

00002084 <u8g2_SetupBuffer>:
/*
  This procedure is called after setting up the display (u8x8 structure).
  --> This is the central init procedure for u8g2 object
*/
void u8g2_SetupBuffer(u8g2_t *u8g2, uint8_t *buf, uint8_t tile_buf_height, u8g2_draw_ll_hvline_cb ll_hvline_cb, const u8g2_cb_t *u8g2_cb)
{
    2084:	0f 93       	push	r16
    2086:	1f 93       	push	r17
    2088:	cf 93       	push	r28
    208a:	df 93       	push	r29
    208c:	ec 01       	movw	r28, r24
  u8g2->font = NULL;
    208e:	fc 01       	movw	r30, r24
    2090:	ec 5b       	subi	r30, 0xBC	; 188
    2092:	ff 4f       	sbci	r31, 0xFF	; 255
    2094:	11 82       	std	Z+1, r1	; 0x01
    2096:	10 82       	st	Z, r1
  //u8g2->kerning = NULL;
  //u8g2->get_kerning_cb = u8g2_GetNullKerning;
  
  //u8g2->ll_hvline = u8g2_ll_hvline_vertical_top_lsb;
  u8g2->ll_hvline = ll_hvline_cb;
    2098:	3f 8f       	std	Y+31, r19	; 0x1f
    209a:	2e 8f       	std	Y+30, r18	; 0x1e
  
  u8g2->tile_buf_ptr = buf;
    209c:	7b a3       	std	Y+35, r23	; 0x23
    209e:	6a a3       	std	Y+34, r22	; 0x22
  u8g2->tile_buf_height = tile_buf_height;
    20a0:	4c a3       	std	Y+36, r20	; 0x24
  
  u8g2->tile_curr_row = 0;
    20a2:	1d a2       	std	Y+37, r1	; 0x25
  
  u8g2->font_decode.is_transparent = 0; /* issue 443 */
    20a4:	3f 96       	adiw	r30, 0x0f	; 15
    20a6:	10 82       	st	Z, r1
  u8g2->bitmap_transparency = 0;
    20a8:	b0 96       	adiw	r30, 0x20	; 32
    20aa:	10 82       	st	Z, r1
  
  u8g2->font_height_mode = 0; /* issue 2046 */
    20ac:	34 97       	sbiw	r30, 0x04	; 4
    20ae:	10 82       	st	Z, r1
  u8g2->draw_color = 1;
    20b0:	35 96       	adiw	r30, 0x05	; 5
    20b2:	81 e0       	ldi	r24, 0x01	; 1
    20b4:	80 83       	st	Z, r24
  u8g2->is_auto_page_clear = 1;
    20b6:	31 96       	adiw	r30, 0x01	; 1
    20b8:	80 83       	st	Z, r24
  
  u8g2->cb = u8g2_cb;
    20ba:	19 a3       	std	Y+33, r17	; 0x21
    20bc:	08 a3       	std	Y+32, r16	; 0x20
  u8g2->cb->update_dimension(u8g2);
    20be:	d8 01       	movw	r26, r16
    20c0:	ed 91       	ld	r30, X+
    20c2:	fc 91       	ld	r31, X
    20c4:	ce 01       	movw	r24, r28
    20c6:	09 95       	icall
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_SetMaxClipWindow(u8g2);		/* assign a clip window and call the update() procedure */
    20c8:	ce 01       	movw	r24, r28
    20ca:	0e 94 26 10 	call	0x204c	; 0x204c <u8g2_SetMaxClipWindow>
#else
  u8g2->cb->update_page_win(u8g2);
#endif

  u8g2_SetFontPosBaseline(u8g2);  /* issue 195 */
    20ce:	ce 01       	movw	r24, r28
    20d0:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <u8g2_SetFontPosBaseline>
  
#ifdef U8G2_WITH_FONT_ROTATION  
  u8g2->font_decode.dir = 0;
    20d4:	ca 5a       	subi	r28, 0xAA	; 170
    20d6:	df 4f       	sbci	r29, 0xFF	; 255
    20d8:	18 82       	st	Y, r1
#endif
}
    20da:	df 91       	pop	r29
    20dc:	cf 91       	pop	r28
    20de:	1f 91       	pop	r17
    20e0:	0f 91       	pop	r16
    20e2:	08 95       	ret

000020e4 <u8x8_ascii_next>:
      tile++;
      xx++;
    } while( xx < th );
    y+=2;
  } while( y < tv );  
}
    20e4:	66 23       	and	r22, r22
    20e6:	29 f0       	breq	.+10     	; 0x20f2 <u8x8_ascii_next+0xe>
    20e8:	6a 30       	cpi	r22, 0x0A	; 10
    20ea:	31 f0       	breq	.+12     	; 0x20f8 <u8x8_ascii_next+0x14>
    20ec:	86 2f       	mov	r24, r22
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	08 95       	ret
    20f2:	8f ef       	ldi	r24, 0xFF	; 255
    20f4:	9f ef       	ldi	r25, 0xFF	; 255
    20f6:	08 95       	ret
    20f8:	8f ef       	ldi	r24, 0xFF	; 255
    20fa:	9f ef       	ldi	r25, 0xFF	; 255
    20fc:	08 95       	ret

000020fe <u8x8_utf8_init>:
*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    20fe:	fc 01       	movw	r30, r24
    2100:	10 8e       	std	Z+24, r1	; 0x18
    2102:	08 95       	ret

00002104 <u8x8_byte_SendBytes>:
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    2104:	9a 01       	movw	r18, r20
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    2106:	dc 01       	movw	r26, r24
    2108:	18 96       	adiw	r26, 0x08	; 8
    210a:	ed 91       	ld	r30, X+
    210c:	fc 91       	ld	r31, X
    210e:	19 97       	sbiw	r26, 0x09	; 9
    2110:	46 2f       	mov	r20, r22
    2112:	67 e1       	ldi	r22, 0x17	; 23
    2114:	09 95       	icall
}
    2116:	08 95       	ret

00002118 <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    2118:	cf 93       	push	r28
    211a:	df 93       	push	r29
    211c:	1f 92       	push	r1
    211e:	cd b7       	in	r28, 0x3d	; 61
    2120:	de b7       	in	r29, 0x3e	; 62
    2122:	69 83       	std	Y+1, r22	; 0x01
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    2124:	ae 01       	movw	r20, r28
    2126:	4f 5f       	subi	r20, 0xFF	; 255
    2128:	5f 4f       	sbci	r21, 0xFF	; 255
    212a:	61 e0       	ldi	r22, 0x01	; 1
    212c:	0e 94 82 10 	call	0x2104	; 0x2104 <u8x8_byte_SendBytes>
}
    2130:	0f 90       	pop	r0
    2132:	df 91       	pop	r29
    2134:	cf 91       	pop	r28
    2136:	08 95       	ret

00002138 <u8x8_byte_StartTransfer>:

uint8_t u8x8_byte_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
    2138:	dc 01       	movw	r26, r24
    213a:	18 96       	adiw	r26, 0x08	; 8
    213c:	ed 91       	ld	r30, X+
    213e:	fc 91       	ld	r31, X
    2140:	19 97       	sbiw	r26, 0x09	; 9
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e0       	ldi	r20, 0x00	; 0
    2148:	68 e1       	ldi	r22, 0x18	; 24
    214a:	09 95       	icall
}
    214c:	08 95       	ret

0000214e <u8x8_byte_EndTransfer>:

uint8_t u8x8_byte_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
    214e:	dc 01       	movw	r26, r24
    2150:	18 96       	adiw	r26, 0x08	; 8
    2152:	ed 91       	ld	r30, X+
    2154:	fc 91       	ld	r31, X
    2156:	19 97       	sbiw	r26, 0x09	; 9
    2158:	20 e0       	ldi	r18, 0x00	; 0
    215a:	30 e0       	ldi	r19, 0x00	; 0
    215c:	40 e0       	ldi	r20, 0x00	; 0
    215e:	69 e1       	ldi	r22, 0x19	; 25
    2160:	09 95       	icall
}
    2162:	08 95       	ret

00002164 <u8x8_i2c_data_transfer>:
      break;
    default:
      return 0;
  }
  return 1;
}
    2164:	ef 92       	push	r14
    2166:	ff 92       	push	r15
    2168:	1f 93       	push	r17
    216a:	cf 93       	push	r28
    216c:	df 93       	push	r29
    216e:	ec 01       	movw	r28, r24
    2170:	16 2f       	mov	r17, r22
    2172:	7a 01       	movw	r14, r20
    2174:	0e 94 9c 10 	call	0x2138	; 0x2138 <u8x8_byte_StartTransfer>
    2178:	60 e4       	ldi	r22, 0x40	; 64
    217a:	ce 01       	movw	r24, r28
    217c:	0e 94 8c 10 	call	0x2118	; 0x2118 <u8x8_byte_SendByte>
    2180:	e8 85       	ldd	r30, Y+8	; 0x08
    2182:	f9 85       	ldd	r31, Y+9	; 0x09
    2184:	97 01       	movw	r18, r14
    2186:	41 2f       	mov	r20, r17
    2188:	67 e1       	ldi	r22, 0x17	; 23
    218a:	ce 01       	movw	r24, r28
    218c:	09 95       	icall
    218e:	ce 01       	movw	r24, r28
    2190:	0e 94 a7 10 	call	0x214e	; 0x214e <u8x8_byte_EndTransfer>
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	1f 91       	pop	r17
    219a:	ff 90       	pop	r15
    219c:	ef 90       	pop	r14
    219e:	08 95       	ret

000021a0 <u8x8_cad_SendCmd>:
    21a0:	46 2f       	mov	r20, r22
    21a2:	dc 01       	movw	r26, r24
    21a4:	16 96       	adiw	r26, 0x06	; 6
    21a6:	ed 91       	ld	r30, X+
    21a8:	fc 91       	ld	r31, X
    21aa:	17 97       	sbiw	r26, 0x07	; 7
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	30 e0       	ldi	r19, 0x00	; 0
    21b0:	65 e1       	ldi	r22, 0x15	; 21
    21b2:	09 95       	icall
    21b4:	08 95       	ret

000021b6 <u8x8_cad_SendArg>:
    21b6:	46 2f       	mov	r20, r22
    21b8:	dc 01       	movw	r26, r24
    21ba:	16 96       	adiw	r26, 0x06	; 6
    21bc:	ed 91       	ld	r30, X+
    21be:	fc 91       	ld	r31, X
    21c0:	17 97       	sbiw	r26, 0x07	; 7
    21c2:	20 e0       	ldi	r18, 0x00	; 0
    21c4:	30 e0       	ldi	r19, 0x00	; 0
    21c6:	66 e1       	ldi	r22, 0x16	; 22
    21c8:	09 95       	icall
    21ca:	08 95       	ret

000021cc <u8x8_cad_SendData>:
    21cc:	9a 01       	movw	r18, r20
    21ce:	dc 01       	movw	r26, r24
    21d0:	16 96       	adiw	r26, 0x06	; 6
    21d2:	ed 91       	ld	r30, X+
    21d4:	fc 91       	ld	r31, X
    21d6:	17 97       	sbiw	r26, 0x07	; 7
    21d8:	46 2f       	mov	r20, r22
    21da:	67 e1       	ldi	r22, 0x17	; 23
    21dc:	09 95       	icall
    21de:	08 95       	ret

000021e0 <u8x8_cad_StartTransfer>:
    21e0:	dc 01       	movw	r26, r24
    21e2:	16 96       	adiw	r26, 0x06	; 6
    21e4:	ed 91       	ld	r30, X+
    21e6:	fc 91       	ld	r31, X
    21e8:	17 97       	sbiw	r26, 0x07	; 7
    21ea:	20 e0       	ldi	r18, 0x00	; 0
    21ec:	30 e0       	ldi	r19, 0x00	; 0
    21ee:	40 e0       	ldi	r20, 0x00	; 0
    21f0:	68 e1       	ldi	r22, 0x18	; 24
    21f2:	09 95       	icall
    21f4:	08 95       	ret

000021f6 <u8x8_cad_EndTransfer>:
    21f6:	dc 01       	movw	r26, r24
    21f8:	16 96       	adiw	r26, 0x06	; 6
    21fa:	ed 91       	ld	r30, X+
    21fc:	fc 91       	ld	r31, X
    21fe:	17 97       	sbiw	r26, 0x07	; 7
    2200:	20 e0       	ldi	r18, 0x00	; 0
    2202:	30 e0       	ldi	r19, 0x00	; 0
    2204:	40 e0       	ldi	r20, 0x00	; 0
    2206:	69 e1       	ldi	r22, 0x19	; 25
    2208:	09 95       	icall
    220a:	08 95       	ret

0000220c <u8x8_cad_SendSequence>:
    220c:	ef 92       	push	r14
    220e:	ff 92       	push	r15
    2210:	0f 93       	push	r16
    2212:	1f 93       	push	r17
    2214:	cf 93       	push	r28
    2216:	df 93       	push	r29
    2218:	1f 92       	push	r1
    221a:	cd b7       	in	r28, 0x3d	; 61
    221c:	de b7       	in	r29, 0x3e	; 62
    221e:	7c 01       	movw	r14, r24
    2220:	8b 01       	movw	r16, r22
    2222:	d8 01       	movw	r26, r16
    2224:	6d 91       	ld	r22, X+
    2226:	8d 01       	movw	r16, r26
    2228:	67 31       	cpi	r22, 0x17	; 23
    222a:	b9 f0       	breq	.+46     	; 0x225a <u8x8_cad_SendSequence+0x4e>
    222c:	18 f4       	brcc	.+6      	; 0x2234 <u8x8_cad_SendSequence+0x28>
    222e:	65 31       	cpi	r22, 0x15	; 21
    2230:	30 f4       	brcc	.+12     	; 0x223e <u8x8_cad_SendSequence+0x32>
    2232:	33 c0       	rjmp	.+102    	; 0x229a <u8x8_cad_SendSequence+0x8e>
    2234:	6a 31       	cpi	r22, 0x1A	; 26
    2236:	e8 f0       	brcs	.+58     	; 0x2272 <u8x8_cad_SendSequence+0x66>
    2238:	6e 3f       	cpi	r22, 0xFE	; 254
    223a:	31 f1       	breq	.+76     	; 0x2288 <u8x8_cad_SendSequence+0x7c>
    223c:	2e c0       	rjmp	.+92     	; 0x229a <u8x8_cad_SendSequence+0x8e>
    223e:	fd 01       	movw	r30, r26
    2240:	41 91       	ld	r20, Z+
    2242:	8f 01       	movw	r16, r30
    2244:	49 83       	std	Y+1, r20	; 0x01
    2246:	d7 01       	movw	r26, r14
    2248:	16 96       	adiw	r26, 0x06	; 6
    224a:	ed 91       	ld	r30, X+
    224c:	fc 91       	ld	r31, X
    224e:	17 97       	sbiw	r26, 0x07	; 7
    2250:	20 e0       	ldi	r18, 0x00	; 0
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	c7 01       	movw	r24, r14
    2256:	09 95       	icall
    2258:	e4 cf       	rjmp	.-56     	; 0x2222 <u8x8_cad_SendSequence+0x16>
    225a:	fd 01       	movw	r30, r26
    225c:	81 91       	ld	r24, Z+
    225e:	8f 01       	movw	r16, r30
    2260:	89 83       	std	Y+1, r24	; 0x01
    2262:	ae 01       	movw	r20, r28
    2264:	4f 5f       	subi	r20, 0xFF	; 255
    2266:	5f 4f       	sbci	r21, 0xFF	; 255
    2268:	61 e0       	ldi	r22, 0x01	; 1
    226a:	c7 01       	movw	r24, r14
    226c:	0e 94 e6 10 	call	0x21cc	; 0x21cc <u8x8_cad_SendData>
    2270:	d8 cf       	rjmp	.-80     	; 0x2222 <u8x8_cad_SendSequence+0x16>
    2272:	d7 01       	movw	r26, r14
    2274:	16 96       	adiw	r26, 0x06	; 6
    2276:	ed 91       	ld	r30, X+
    2278:	fc 91       	ld	r31, X
    227a:	17 97       	sbiw	r26, 0x07	; 7
    227c:	20 e0       	ldi	r18, 0x00	; 0
    227e:	30 e0       	ldi	r19, 0x00	; 0
    2280:	40 e0       	ldi	r20, 0x00	; 0
    2282:	c7 01       	movw	r24, r14
    2284:	09 95       	icall
    2286:	cd cf       	rjmp	.-102    	; 0x2222 <u8x8_cad_SendSequence+0x16>
    2288:	fd 01       	movw	r30, r26
    228a:	41 91       	ld	r20, Z+
    228c:	8f 01       	movw	r16, r30
    228e:	49 83       	std	Y+1, r20	; 0x01
    2290:	69 e2       	ldi	r22, 0x29	; 41
    2292:	c7 01       	movw	r24, r14
    2294:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    2298:	c4 cf       	rjmp	.-120    	; 0x2222 <u8x8_cad_SendSequence+0x16>
    229a:	0f 90       	pop	r0
    229c:	df 91       	pop	r29
    229e:	cf 91       	pop	r28
    22a0:	1f 91       	pop	r17
    22a2:	0f 91       	pop	r16
    22a4:	ff 90       	pop	r15
    22a6:	ef 90       	pop	r14
    22a8:	08 95       	ret

000022aa <u8x8_cad_ssd13xx_fast_i2c>:


/* fast version with reduced data start/stops, issue 735 */
uint8_t u8x8_cad_ssd13xx_fast_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    22aa:	ef 92       	push	r14
    22ac:	ff 92       	push	r15
    22ae:	0f 93       	push	r16
    22b0:	1f 93       	push	r17
    22b2:	cf 93       	push	r28
    22b4:	7c 01       	movw	r14, r24
    22b6:	c4 2f       	mov	r28, r20
    22b8:	89 01       	movw	r16, r18
  static uint8_t in_transfer = 0;
  uint8_t *p;
  switch(msg)
    22ba:	66 31       	cpi	r22, 0x16	; 22
    22bc:	29 f1       	breq	.+74     	; 0x2308 <u8x8_cad_ssd13xx_fast_i2c+0x5e>
    22be:	30 f4       	brcc	.+12     	; 0x22cc <u8x8_cad_ssd13xx_fast_i2c+0x22>
    22c0:	64 31       	cpi	r22, 0x14	; 20
    22c2:	09 f4       	brne	.+2      	; 0x22c6 <u8x8_cad_ssd13xx_fast_i2c+0x1c>
    22c4:	41 c0       	rjmp	.+130    	; 0x2348 <u8x8_cad_ssd13xx_fast_i2c+0x9e>
    22c6:	65 31       	cpi	r22, 0x15	; 21
    22c8:	49 f0       	breq	.+18     	; 0x22dc <u8x8_cad_ssd13xx_fast_i2c+0x32>
    22ca:	60 c0       	rjmp	.+192    	; 0x238c <u8x8_cad_ssd13xx_fast_i2c+0xe2>
    22cc:	68 31       	cpi	r22, 0x18	; 24
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <u8x8_cad_ssd13xx_fast_i2c+0x28>
    22d0:	4e c0       	rjmp	.+156    	; 0x236e <u8x8_cad_ssd13xx_fast_i2c+0xc4>
    22d2:	f8 f0       	brcs	.+62     	; 0x2312 <u8x8_cad_ssd13xx_fast_i2c+0x68>
    22d4:	69 31       	cpi	r22, 0x19	; 25
    22d6:	09 f4       	brne	.+2      	; 0x22da <u8x8_cad_ssd13xx_fast_i2c+0x30>
    22d8:	4e c0       	rjmp	.+156    	; 0x2376 <u8x8_cad_ssd13xx_fast_i2c+0xcc>
    22da:	58 c0       	rjmp	.+176    	; 0x238c <u8x8_cad_ssd13xx_fast_i2c+0xe2>
  {
    case U8X8_MSG_CAD_SEND_CMD:
      /* improved version, takeover from ld7032 */
      /* assumes, that the args of a command is not longer than 31 bytes */
      /* speed improvement is about 4% compared to the classic version */
      if ( in_transfer != 0 )
    22dc:	80 91 78 05 	lds	r24, 0x0578	; 0x800578 <in_transfer.3630>
    22e0:	88 23       	and	r24, r24
    22e2:	19 f0       	breq	.+6      	; 0x22ea <u8x8_cad_ssd13xx_fast_i2c+0x40>
	 u8x8_byte_EndTransfer(u8x8); 
    22e4:	c7 01       	movw	r24, r14
    22e6:	0e 94 a7 10 	call	0x214e	; 0x214e <u8x8_byte_EndTransfer>
      
      u8x8_byte_StartTransfer(u8x8);
    22ea:	c7 01       	movw	r24, r14
    22ec:	0e 94 9c 10 	call	0x2138	; 0x2138 <u8x8_byte_StartTransfer>
      u8x8_byte_SendByte(u8x8, 0x000);	/* cmd byte for ssd13xx controller */
    22f0:	60 e0       	ldi	r22, 0x00	; 0
    22f2:	c7 01       	movw	r24, r14
    22f4:	0e 94 8c 10 	call	0x2118	; 0x2118 <u8x8_byte_SendByte>
      u8x8_byte_SendByte(u8x8, arg_int);
    22f8:	6c 2f       	mov	r22, r28
    22fa:	c7 01       	movw	r24, r14
    22fc:	0e 94 8c 10 	call	0x2118	; 0x2118 <u8x8_byte_SendByte>
      in_transfer = 1;
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	80 93 78 05 	sts	0x0578, r24	; 0x800578 <in_transfer.3630>
	//   u8x8_byte_StartTransfer(u8x8);
	//   u8x8_byte_SendByte(u8x8, 0x000);	/* cmd byte for ssd13xx controller */
	//   in_transfer = 1;
	// }
	//u8x8_byte_SendByte(u8x8, arg_int);
      break;
    2306:	43 c0       	rjmp	.+134    	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SendByte(u8x8, arg_int);
    2308:	64 2f       	mov	r22, r20
    230a:	0e 94 8c 10 	call	0x2118	; 0x2118 <u8x8_byte_SendByte>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    230e:	81 e0       	ldi	r24, 0x01	; 1
	// }
	//u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SendByte(u8x8, arg_int);
      break;      
    2310:	3e c0       	rjmp	.+124    	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    case U8X8_MSG_CAD_SEND_DATA:
      if ( in_transfer != 0 )
    2312:	80 91 78 05 	lds	r24, 0x0578	; 0x800578 <in_transfer.3630>
    2316:	88 23       	and	r24, r24
    2318:	61 f0       	breq	.+24     	; 0x2332 <u8x8_cad_ssd13xx_fast_i2c+0x88>
	u8x8_byte_EndTransfer(u8x8); 
    231a:	c7 01       	movw	r24, r14
    231c:	0e 94 a7 10 	call	0x214e	; 0x214e <u8x8_byte_EndTransfer>
    2320:	08 c0       	rjmp	.+16     	; 0x2332 <u8x8_cad_ssd13xx_fast_i2c+0x88>
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
    2322:	a8 01       	movw	r20, r16
    2324:	68 e1       	ldi	r22, 0x18	; 24
    2326:	c7 01       	movw	r24, r14
    2328:	0e 94 b2 10 	call	0x2164	; 0x2164 <u8x8_i2c_data_transfer>
	arg_int-=24;
    232c:	c8 51       	subi	r28, 0x18	; 24
	p+=24;
    232e:	08 5e       	subi	r16, 0xE8	; 232
    2330:	1f 4f       	sbci	r17, 0xFF	; 255
      /* I guess this is related to the size of the Wire buffers in Arduino */
      /* Unfortunately, this can not be handled in the byte level drivers, */
      /* so this is done here. Even further, only 24 bytes will be sent, */
      /* because there will be another byte (DC) required during the transfer */
      p = arg_ptr;
       while( arg_int > 24 )
    2332:	c9 31       	cpi	r28, 0x19	; 25
    2334:	b0 f7       	brcc	.-20     	; 0x2322 <u8x8_cad_ssd13xx_fast_i2c+0x78>
      {
	u8x8_i2c_data_transfer(u8x8, 24, p);
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
    2336:	a8 01       	movw	r20, r16
    2338:	6c 2f       	mov	r22, r28
    233a:	c7 01       	movw	r24, r14
    233c:	0e 94 b2 10 	call	0x2164	; 0x2164 <u8x8_i2c_data_transfer>
      in_transfer = 0;
    2340:	10 92 78 05 	sts	0x0578, r1	; 0x800578 <in_transfer.3630>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    2344:	81 e0       	ldi	r24, 0x01	; 1
	arg_int-=24;
	p+=24;
      }
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
      in_transfer = 0;
      break;
    2346:	23 c0       	rjmp	.+70     	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    case U8X8_MSG_CAD_INIT:
      /* apply default i2c adr if required so that the start transfer msg can use this */
      if ( u8x8->i2c_address == 255 )
    2348:	dc 01       	movw	r26, r24
    234a:	56 96       	adiw	r26, 0x16	; 22
    234c:	8c 91       	ld	r24, X
    234e:	56 97       	sbiw	r26, 0x16	; 22
    2350:	8f 3f       	cpi	r24, 0xFF	; 255
    2352:	19 f4       	brne	.+6      	; 0x235a <u8x8_cad_ssd13xx_fast_i2c+0xb0>
	u8x8->i2c_address = 0x078;
    2354:	88 e7       	ldi	r24, 0x78	; 120
    2356:	56 96       	adiw	r26, 0x16	; 22
    2358:	8c 93       	st	X, r24
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    235a:	d7 01       	movw	r26, r14
    235c:	18 96       	adiw	r26, 0x08	; 8
    235e:	ed 91       	ld	r30, X+
    2360:	fc 91       	ld	r31, X
    2362:	19 97       	sbiw	r26, 0x09	; 9
    2364:	98 01       	movw	r18, r16
    2366:	4c 2f       	mov	r20, r28
    2368:	c7 01       	movw	r24, r14
    236a:	09 95       	icall
    236c:	10 c0       	rjmp	.+32     	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    case U8X8_MSG_CAD_START_TRANSFER:
      in_transfer = 0;
    236e:	10 92 78 05 	sts	0x0578, r1	; 0x800578 <in_transfer.3630>
      in_transfer = 0;
      break;
    default:
      return 0;
  }
  return 1;
    2372:	81 e0       	ldi	r24, 0x01	; 1
      if ( u8x8->i2c_address == 255 )
	u8x8->i2c_address = 0x078;
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    case U8X8_MSG_CAD_START_TRANSFER:
      in_transfer = 0;
      break;
    2374:	0c c0       	rjmp	.+24     	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    case U8X8_MSG_CAD_END_TRANSFER:
      if ( in_transfer != 0 )
    2376:	80 91 78 05 	lds	r24, 0x0578	; 0x800578 <in_transfer.3630>
    237a:	88 23       	and	r24, r24
    237c:	19 f0       	breq	.+6      	; 0x2384 <u8x8_cad_ssd13xx_fast_i2c+0xda>
	u8x8_byte_EndTransfer(u8x8); 
    237e:	c7 01       	movw	r24, r14
    2380:	0e 94 a7 10 	call	0x214e	; 0x214e <u8x8_byte_EndTransfer>
      in_transfer = 0;
    2384:	10 92 78 05 	sts	0x0578, r1	; 0x800578 <in_transfer.3630>
      break;
    default:
      return 0;
  }
  return 1;
    2388:	81 e0       	ldi	r24, 0x01	; 1
      break;
    case U8X8_MSG_CAD_END_TRANSFER:
      if ( in_transfer != 0 )
	u8x8_byte_EndTransfer(u8x8); 
      in_transfer = 0;
      break;
    238a:	01 c0       	rjmp	.+2      	; 0x238e <u8x8_cad_ssd13xx_fast_i2c+0xe4>
    default:
      return 0;
    238c:	80 e0       	ldi	r24, 0x00	; 0
  }
  return 1;
}
    238e:	cf 91       	pop	r28
    2390:	1f 91       	pop	r17
    2392:	0f 91       	pop	r16
    2394:	ff 90       	pop	r15
    2396:	ef 90       	pop	r14
    2398:	08 95       	ret

0000239a <u8x8_d_helper_display_setup_memory>:
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
}

void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
    239a:	fc 01       	movw	r30, r24
    239c:	71 83       	std	Z+1, r23	; 0x01
    239e:	60 83       	st	Z, r22
    23a0:	fb 01       	movw	r30, r22
    23a2:	22 89       	ldd	r18, Z+18	; 0x12
    23a4:	fc 01       	movw	r30, r24
    23a6:	24 8b       	std	Z+20, r18	; 0x14
    23a8:	08 95       	ret

000023aa <u8x8_d_helper_display_init>:
    23aa:	cf 93       	push	r28
    23ac:	df 93       	push	r29
    23ae:	ec 01       	movw	r28, r24
    23b0:	ea 85       	ldd	r30, Y+10	; 0x0a
    23b2:	fb 85       	ldd	r31, Y+11	; 0x0b
    23b4:	20 e0       	ldi	r18, 0x00	; 0
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	40 e0       	ldi	r20, 0x00	; 0
    23ba:	68 e2       	ldi	r22, 0x28	; 40
    23bc:	09 95       	icall
    23be:	ee 81       	ldd	r30, Y+6	; 0x06
    23c0:	ff 81       	ldd	r31, Y+7	; 0x07
    23c2:	20 e0       	ldi	r18, 0x00	; 0
    23c4:	30 e0       	ldi	r19, 0x00	; 0
    23c6:	40 e0       	ldi	r20, 0x00	; 0
    23c8:	64 e1       	ldi	r22, 0x14	; 20
    23ca:	ce 01       	movw	r24, r28
    23cc:	09 95       	icall
    23ce:	41 e0       	ldi	r20, 0x01	; 1
    23d0:	6b e4       	ldi	r22, 0x4B	; 75
    23d2:	ce 01       	movw	r24, r28
    23d4:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    23d8:	e8 81       	ld	r30, Y
    23da:	f9 81       	ldd	r31, Y+1	; 0x01
    23dc:	44 81       	ldd	r20, Z+4	; 0x04
    23de:	69 e2       	ldi	r22, 0x29	; 41
    23e0:	ce 01       	movw	r24, r28
    23e2:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    23e6:	40 e0       	ldi	r20, 0x00	; 0
    23e8:	6b e4       	ldi	r22, 0x4B	; 75
    23ea:	ce 01       	movw	r24, r28
    23ec:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    23f0:	e8 81       	ld	r30, Y
    23f2:	f9 81       	ldd	r31, Y+1	; 0x01
    23f4:	44 81       	ldd	r20, Z+4	; 0x04
    23f6:	69 e2       	ldi	r22, 0x29	; 41
    23f8:	ce 01       	movw	r24, r28
    23fa:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    23fe:	41 e0       	ldi	r20, 0x01	; 1
    2400:	6b e4       	ldi	r22, 0x4B	; 75
    2402:	ce 01       	movw	r24, r28
    2404:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    2408:	e8 81       	ld	r30, Y
    240a:	f9 81       	ldd	r31, Y+1	; 0x01
    240c:	45 81       	ldd	r20, Z+5	; 0x05
    240e:	69 e2       	ldi	r22, 0x29	; 41
    2410:	ce 01       	movw	r24, r28
    2412:	0e 94 09 13 	call	0x2612	; 0x2612 <u8x8_gpio_call>
    2416:	df 91       	pop	r29
    2418:	cf 91       	pop	r28
    241a:	08 95       	ret

0000241c <u8x8_DrawTile>:
    241c:	0f 93       	push	r16
    241e:	1f 93       	push	r17
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	00 d0       	rcall	.+0      	; 0x2426 <u8x8_DrawTile+0xa>
    2426:	00 d0       	rcall	.+0      	; 0x2428 <u8x8_DrawTile+0xc>
    2428:	1f 92       	push	r1
    242a:	cd b7       	in	r28, 0x3d	; 61
    242c:	de b7       	in	r29, 0x3e	; 62
    242e:	6c 83       	std	Y+4, r22	; 0x04
    2430:	4d 83       	std	Y+5, r20	; 0x05
    2432:	2b 83       	std	Y+3, r18	; 0x03
    2434:	1a 83       	std	Y+2, r17	; 0x02
    2436:	09 83       	std	Y+1, r16	; 0x01
    2438:	dc 01       	movw	r26, r24
    243a:	14 96       	adiw	r26, 0x04	; 4
    243c:	ed 91       	ld	r30, X+
    243e:	fc 91       	ld	r31, X
    2440:	15 97       	sbiw	r26, 0x05	; 5
    2442:	9e 01       	movw	r18, r28
    2444:	2f 5f       	subi	r18, 0xFF	; 255
    2446:	3f 4f       	sbci	r19, 0xFF	; 255
    2448:	41 e0       	ldi	r20, 0x01	; 1
    244a:	6f e0       	ldi	r22, 0x0F	; 15
    244c:	09 95       	icall
    244e:	0f 90       	pop	r0
    2450:	0f 90       	pop	r0
    2452:	0f 90       	pop	r0
    2454:	0f 90       	pop	r0
    2456:	0f 90       	pop	r0
    2458:	df 91       	pop	r29
    245a:	cf 91       	pop	r28
    245c:	1f 91       	pop	r17
    245e:	0f 91       	pop	r16
    2460:	08 95       	ret

00002462 <u8x8_SetupMemory>:
    2462:	dc 01       	movw	r26, r24
    2464:	14 96       	adiw	r26, 0x04	; 4
    2466:	ed 91       	ld	r30, X+
    2468:	fc 91       	ld	r31, X
    246a:	15 97       	sbiw	r26, 0x05	; 5
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	40 e0       	ldi	r20, 0x00	; 0
    2472:	69 e0       	ldi	r22, 0x09	; 9
    2474:	09 95       	icall
    2476:	08 95       	ret

00002478 <u8x8_InitDisplay>:
    2478:	dc 01       	movw	r26, r24
    247a:	14 96       	adiw	r26, 0x04	; 4
    247c:	ed 91       	ld	r30, X+
    247e:	fc 91       	ld	r31, X
    2480:	15 97       	sbiw	r26, 0x05	; 5
    2482:	20 e0       	ldi	r18, 0x00	; 0
    2484:	30 e0       	ldi	r19, 0x00	; 0
    2486:	40 e0       	ldi	r20, 0x00	; 0
    2488:	6a e0       	ldi	r22, 0x0A	; 10
    248a:	09 95       	icall
    248c:	08 95       	ret

0000248e <u8x8_SetPowerSave>:
    248e:	46 2f       	mov	r20, r22
    2490:	dc 01       	movw	r26, r24
    2492:	14 96       	adiw	r26, 0x04	; 4
    2494:	ed 91       	ld	r30, X+
    2496:	fc 91       	ld	r31, X
    2498:	15 97       	sbiw	r26, 0x05	; 5
    249a:	20 e0       	ldi	r18, 0x00	; 0
    249c:	30 e0       	ldi	r19, 0x00	; 0
    249e:	6b e0       	ldi	r22, 0x0B	; 11
    24a0:	09 95       	icall
    24a2:	08 95       	ret

000024a4 <u8x8_RefreshDisplay>:
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    24a4:	dc 01       	movw	r26, r24
    24a6:	14 96       	adiw	r26, 0x04	; 4
    24a8:	ed 91       	ld	r30, X+
    24aa:	fc 91       	ld	r31, X
    24ac:	15 97       	sbiw	r26, 0x05	; 5
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	40 e0       	ldi	r20, 0x00	; 0
    24b4:	60 e1       	ldi	r22, 0x10	; 16
    24b6:	09 95       	icall
    24b8:	08 95       	ret

000024ba <u8x8_d_ssd1306_sh1106_generic>:
  U8X8_END_TRANSFER(),             	/* disable chip */
  U8X8_END()             			/* end of sequence */
};

static uint8_t u8x8_d_ssd1306_sh1106_generic(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    24ba:	ef 92       	push	r14
    24bc:	ff 92       	push	r15
    24be:	0f 93       	push	r16
    24c0:	1f 93       	push	r17
    24c2:	cf 93       	push	r28
    24c4:	df 93       	push	r29
    24c6:	8c 01       	movw	r16, r24
    24c8:	c4 2f       	mov	r28, r20
    24ca:	79 01       	movw	r14, r18
  uint8_t x, c;
  uint8_t *ptr;
  switch(msg)
    24cc:	6d 30       	cpi	r22, 0x0D	; 13
    24ce:	b9 f0       	breq	.+46     	; 0x24fe <u8x8_d_ssd1306_sh1106_generic+0x44>
    24d0:	18 f4       	brcc	.+6      	; 0x24d8 <u8x8_d_ssd1306_sh1106_generic+0x1e>
    24d2:	6b 30       	cpi	r22, 0x0B	; 11
    24d4:	31 f0       	breq	.+12     	; 0x24e2 <u8x8_d_ssd1306_sh1106_generic+0x28>
    24d6:	72 c0       	rjmp	.+228    	; 0x25bc <u8x8_d_ssd1306_sh1106_generic+0x102>
    24d8:	6e 30       	cpi	r22, 0x0E	; 14
    24da:	69 f1       	breq	.+90     	; 0x2536 <u8x8_d_ssd1306_sh1106_generic+0x7c>
    24dc:	6f 30       	cpi	r22, 0x0F	; 15
    24de:	d1 f1       	breq	.+116    	; 0x2554 <u8x8_d_ssd1306_sh1106_generic+0x9a>
    24e0:	6d c0       	rjmp	.+218    	; 0x25bc <u8x8_d_ssd1306_sh1106_generic+0x102>
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
    24e2:	41 11       	cpse	r20, r1
    24e4:	06 c0       	rjmp	.+12     	; 0x24f2 <u8x8_d_ssd1306_sh1106_generic+0x38>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave0_seq);
    24e6:	61 e3       	ldi	r22, 0x31	; 49
    24e8:	71 e0       	ldi	r23, 0x01	; 1
    24ea:	0e 94 06 11 	call	0x220c	; 0x220c <u8x8_cad_SendSequence>
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
    24ee:	81 e0       	ldi	r24, 0x01	; 1
    24f0:	66 c0       	rjmp	.+204    	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave0_seq);
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave1_seq);
    24f2:	6c e2       	ldi	r22, 0x2C	; 44
    24f4:	71 e0       	ldi	r23, 0x01	; 1
    24f6:	0e 94 06 11 	call	0x220c	; 0x220c <u8x8_cad_SendSequence>
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
    24fa:	81 e0       	ldi	r24, 0x01	; 1
    24fc:	60 c0       	rjmp	.+192    	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave0_seq);
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave1_seq);
      break;
    case U8X8_MSG_DISPLAY_SET_FLIP_MODE:
      if ( arg_int == 0 )
    24fe:	41 11       	cpse	r20, r1
    2500:	0d c0       	rjmp	.+26     	; 0x251c <u8x8_d_ssd1306_sh1106_generic+0x62>
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_flip0_seq);
    2502:	65 e2       	ldi	r22, 0x25	; 37
    2504:	71 e0       	ldi	r23, 0x01	; 1
    2506:	0e 94 06 11 	call	0x220c	; 0x220c <u8x8_cad_SendSequence>
	u8x8->x_offset = u8x8->display_info->default_x_offset;
    250a:	d8 01       	movw	r26, r16
    250c:	ed 91       	ld	r30, X+
    250e:	fc 91       	ld	r31, X
    2510:	11 97       	sbiw	r26, 0x01	; 1
    2512:	82 89       	ldd	r24, Z+18	; 0x12
    2514:	54 96       	adiw	r26, 0x14	; 20
    2516:	8c 93       	st	X, r24
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	51 c0       	rjmp	.+162    	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_flip0_seq);
	u8x8->x_offset = u8x8->display_info->default_x_offset;
      }
      else
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_flip1_seq);
    251c:	6e e1       	ldi	r22, 0x1E	; 30
    251e:	71 e0       	ldi	r23, 0x01	; 1
    2520:	0e 94 06 11 	call	0x220c	; 0x220c <u8x8_cad_SendSequence>
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
    2524:	d8 01       	movw	r26, r16
    2526:	ed 91       	ld	r30, X+
    2528:	fc 91       	ld	r31, X
    252a:	11 97       	sbiw	r26, 0x01	; 1
    252c:	83 89       	ldd	r24, Z+19	; 0x13
    252e:	54 96       	adiw	r26, 0x14	; 20
    2530:	8c 93       	st	X, r24
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	44 c0       	rjmp	.+136    	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
      }
      break;
#ifdef U8X8_WITH_SET_CONTRAST
    case U8X8_MSG_DISPLAY_SET_CONTRAST:
      u8x8_cad_StartTransfer(u8x8);
    2536:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <u8x8_cad_StartTransfer>
      u8x8_cad_SendCmd(u8x8, 0x081 );
    253a:	61 e8       	ldi	r22, 0x81	; 129
    253c:	c8 01       	movw	r24, r16
    253e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <u8x8_cad_SendCmd>
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1306 has range from 0 to 255 */
    2542:	6c 2f       	mov	r22, r28
    2544:	c8 01       	movw	r24, r16
    2546:	0e 94 db 10 	call	0x21b6	; 0x21b6 <u8x8_cad_SendArg>
      u8x8_cad_EndTransfer(u8x8);
    254a:	c8 01       	movw	r24, r16
    254c:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <u8x8_cad_EndTransfer>
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
    2550:	81 e0       	ldi	r24, 0x01	; 1
    case U8X8_MSG_DISPLAY_SET_CONTRAST:
      u8x8_cad_StartTransfer(u8x8);
      u8x8_cad_SendCmd(u8x8, 0x081 );
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1306 has range from 0 to 255 */
      u8x8_cad_EndTransfer(u8x8);
      break;
    2552:	35 c0       	rjmp	.+106    	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
#endif
    case U8X8_MSG_DISPLAY_DRAW_TILE:
      u8x8_cad_StartTransfer(u8x8);
    2554:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <u8x8_cad_StartTransfer>
      x = ((u8x8_tile_t *)arg_ptr)->x_pos;    
    2558:	f7 01       	movw	r30, r14
    255a:	d3 81       	ldd	r29, Z+3	; 0x03
      x *= 8;
    255c:	dd 0f       	add	r29, r29
    255e:	dd 0f       	add	r29, r29
    2560:	dd 0f       	add	r29, r29
      x += u8x8->x_offset;
    2562:	d8 01       	movw	r26, r16
    2564:	54 96       	adiw	r26, 0x14	; 20
    2566:	8c 91       	ld	r24, X
    2568:	d8 0f       	add	r29, r24
    
      u8x8_cad_SendCmd(u8x8, 0x040 );	/* set line offset to 0 */
    256a:	60 e4       	ldi	r22, 0x40	; 64
    256c:	c8 01       	movw	r24, r16
    256e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <u8x8_cad_SendCmd>
    
      u8x8_cad_SendCmd(u8x8, 0x010 | (x>>4) );
    2572:	6d 2f       	mov	r22, r29
    2574:	62 95       	swap	r22
    2576:	6f 70       	andi	r22, 0x0F	; 15
    2578:	60 61       	ori	r22, 0x10	; 16
    257a:	c8 01       	movw	r24, r16
    257c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <u8x8_cad_SendCmd>
      u8x8_cad_SendArg(u8x8, 0x000 | ((x&15)));					/* probably wrong, should be SendCmd */
    2580:	6d 2f       	mov	r22, r29
    2582:	6f 70       	andi	r22, 0x0F	; 15
    2584:	c8 01       	movw	r24, r16
    2586:	0e 94 db 10 	call	0x21b6	; 0x21b6 <u8x8_cad_SendArg>
      u8x8_cad_SendArg(u8x8, 0x0b0 | (((u8x8_tile_t *)arg_ptr)->y_pos));	/* probably wrong, should be SendCmd */
    258a:	f7 01       	movw	r30, r14
    258c:	64 81       	ldd	r22, Z+4	; 0x04
    258e:	60 6b       	ori	r22, 0xB0	; 176
    2590:	c8 01       	movw	r24, r16
    2592:	0e 94 db 10 	call	0x21b6	; 0x21b6 <u8x8_cad_SendArg>

    
      do
      {
	c = ((u8x8_tile_t *)arg_ptr)->cnt;
    2596:	d7 01       	movw	r26, r14
    2598:	12 96       	adiw	r26, 0x02	; 2
    259a:	6c 91       	ld	r22, X
    259c:	12 97       	sbiw	r26, 0x02	; 2
	ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;
    259e:	4d 91       	ld	r20, X+
    25a0:	5c 91       	ld	r21, X
	u8x8_cad_SendData(u8x8, c*8, ptr); 	/* note: SendData can not handle more than 255 bytes */
    25a2:	66 0f       	add	r22, r22
    25a4:	66 0f       	add	r22, r22
    25a6:	66 0f       	add	r22, r22
    25a8:	c8 01       	movw	r24, r16
    25aa:	0e 94 e6 10 	call	0x21cc	; 0x21cc <u8x8_cad_SendData>
	  u8x8_cad_SendData(u8x8, 8, ptr);
	  ptr += 8;
	  c--;
	} while( c > 0 );
	*/
	arg_int--;
    25ae:	c1 50       	subi	r28, 0x01	; 1
      } while( arg_int > 0 );
    25b0:	91 f7       	brne	.-28     	; 0x2596 <u8x8_d_ssd1306_sh1106_generic+0xdc>
      
      u8x8_cad_EndTransfer(u8x8);
    25b2:	c8 01       	movw	r24, r16
    25b4:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <u8x8_cad_EndTransfer>
      break;
    default:
      return 0;
  }
  return 1;
    25b8:	81 e0       	ldi	r24, 0x01	; 1
	*/
	arg_int--;
      } while( arg_int > 0 );
      
      u8x8_cad_EndTransfer(u8x8);
      break;
    25ba:	01 c0       	rjmp	.+2      	; 0x25be <u8x8_d_ssd1306_sh1106_generic+0x104>
    default:
      return 0;
    25bc:	80 e0       	ldi	r24, 0x00	; 0
  }
  return 1;
}
    25be:	df 91       	pop	r29
    25c0:	cf 91       	pop	r28
    25c2:	1f 91       	pop	r17
    25c4:	0f 91       	pop	r16
    25c6:	ff 90       	pop	r15
    25c8:	ef 90       	pop	r14
    25ca:	08 95       	ret

000025cc <u8x8_d_ssd1306_128x64_noname>:
  /* pixel_width = */ 128,
  /* pixel_height = */ 64
};

uint8_t u8x8_d_ssd1306_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    25cc:	0f 93       	push	r16
    25ce:	1f 93       	push	r17
    25d0:	cf 93       	push	r28
    25d2:	8c 01       	movw	r16, r24
    25d4:	c6 2f       	mov	r28, r22
    
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    25d6:	0e 94 5d 12 	call	0x24ba	; 0x24ba <u8x8_d_ssd1306_sh1106_generic>
    25da:	81 11       	cpse	r24, r1
    25dc:	15 c0       	rjmp	.+42     	; 0x2608 <u8x8_d_ssd1306_128x64_noname+0x3c>
    return 1;
  
  switch(msg)
    25de:	c9 30       	cpi	r28, 0x09	; 9
    25e0:	61 f0       	breq	.+24     	; 0x25fa <u8x8_d_ssd1306_128x64_noname+0x2e>
    25e2:	ca 30       	cpi	r28, 0x0A	; 10
    25e4:	91 f4       	brne	.+36     	; 0x260a <u8x8_d_ssd1306_128x64_noname+0x3e>
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
    25e6:	c8 01       	movw	r24, r16
    25e8:	0e 94 d5 11 	call	0x23aa	; 0x23aa <u8x8_d_helper_display_init>
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
    25ec:	66 e3       	ldi	r22, 0x36	; 54
    25ee:	71 e0       	ldi	r23, 0x01	; 1
    25f0:	c8 01       	movw	r24, r16
    25f2:	0e 94 06 11 	call	0x220c	; 0x220c <u8x8_cad_SendSequence>
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
      break;
    default:
      return 0;
  }
  return 1;
    25f6:	81 e0       	ldi	r24, 0x01	; 1
  switch(msg)
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    25f8:	08 c0       	rjmp	.+16     	; 0x260a <u8x8_d_ssd1306_128x64_noname+0x3e>
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
    25fa:	66 e0       	ldi	r22, 0x06	; 6
    25fc:	71 e0       	ldi	r23, 0x01	; 1
    25fe:	c8 01       	movw	r24, r16
    2600:	0e 94 cd 11 	call	0x239a	; 0x239a <u8x8_d_helper_display_setup_memory>
      break;
    default:
      return 0;
  }
  return 1;
    2604:	81 e0       	ldi	r24, 0x01	; 1
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
      break;
    2606:	01 c0       	rjmp	.+2      	; 0x260a <u8x8_d_ssd1306_128x64_noname+0x3e>

uint8_t u8x8_d_ssd1306_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
    2608:	81 e0       	ldi	r24, 0x01	; 1
      break;
    default:
      return 0;
  }
  return 1;
}
    260a:	cf 91       	pop	r28
    260c:	1f 91       	pop	r17
    260e:	0f 91       	pop	r16
    2610:	08 95       	ret

00002612 <u8x8_gpio_call>:
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    2612:	dc 01       	movw	r26, r24
    2614:	1a 96       	adiw	r26, 0x0a	; 10
    2616:	ed 91       	ld	r30, X+
    2618:	fc 91       	ld	r31, X
    261a:	1b 97       	sbiw	r26, 0x0b	; 11
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	09 95       	icall
    2622:	08 95       	ret

00002624 <u8x8_dummy_cb>:
      u8x8_d_helper_display_init(u8x8);
      break;
  }
  /* the null device callback will succeed for all messages */
  return 1;
}
    2624:	80 e0       	ldi	r24, 0x00	; 0
    2626:	08 95       	ret

00002628 <u8x8_SetupDefaults>:
    Setup u8x8
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    2628:	fc 01       	movw	r30, r24
    u8x8->display_info = NULL;
    262a:	11 82       	std	Z+1, r1	; 0x01
    262c:	10 82       	st	Z, r1
    u8x8->display_cb = u8x8_dummy_cb;
    262e:	82 e1       	ldi	r24, 0x12	; 18
    2630:	93 e1       	ldi	r25, 0x13	; 19
    2632:	95 83       	std	Z+5, r25	; 0x05
    2634:	84 83       	std	Z+4, r24	; 0x04
    u8x8->cad_cb = u8x8_dummy_cb;
    2636:	97 83       	std	Z+7, r25	; 0x07
    2638:	86 83       	std	Z+6, r24	; 0x06
    u8x8->byte_cb = u8x8_dummy_cb;
    263a:	91 87       	std	Z+9, r25	; 0x09
    263c:	80 87       	std	Z+8, r24	; 0x08
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    263e:	93 87       	std	Z+11, r25	; 0x0b
    2640:	82 87       	std	Z+10, r24	; 0x0a
    u8x8->is_font_inverse_mode = 0;
    2642:	15 8a       	std	Z+21, r1	; 0x15
    //u8x8->device_address = 0;
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    2644:	10 8e       	std	Z+24, r1	; 0x18
    u8x8->bus_clock = 0;		/* issue 769 */
    2646:	14 86       	std	Z+12, r1	; 0x0c
    2648:	15 86       	std	Z+13, r1	; 0x0d
    264a:	16 86       	std	Z+14, r1	; 0x0e
    264c:	17 86       	std	Z+15, r1	; 0x0f
    u8x8->i2c_address = 255;
    264e:	8f ef       	ldi	r24, 0xFF	; 255
    2650:	86 8b       	std	Z+22, r24	; 0x16
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
    2652:	82 8f       	std	Z+26, r24	; 0x1a
    2654:	08 95       	ret

00002656 <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
    2656:	af 92       	push	r10
    2658:	bf 92       	push	r11
    265a:	cf 92       	push	r12
    265c:	df 92       	push	r13
    265e:	ef 92       	push	r14
    2660:	ff 92       	push	r15
    2662:	0f 93       	push	r16
    2664:	1f 93       	push	r17
    2666:	cf 93       	push	r28
    2668:	df 93       	push	r29
    266a:	ec 01       	movw	r28, r24
    266c:	5b 01       	movw	r10, r22
    266e:	6a 01       	movw	r12, r20
    2670:	79 01       	movw	r14, r18
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
    2672:	0e 94 14 13 	call	0x2628	; 0x2628 <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
    2676:	bd 82       	std	Y+5, r11	; 0x05
    2678:	ac 82       	std	Y+4, r10	; 0x04
  u8x8->cad_cb = cad_cb;
    267a:	df 82       	std	Y+7, r13	; 0x07
    267c:	ce 82       	std	Y+6, r12	; 0x06
  u8x8->byte_cb = byte_cb;
    267e:	f9 86       	std	Y+9, r15	; 0x09
    2680:	e8 86       	std	Y+8, r14	; 0x08
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
    2682:	1b 87       	std	Y+11, r17	; 0x0b
    2684:	0a 87       	std	Y+10, r16	; 0x0a

  /* setup display info */
  u8x8_SetupMemory(u8x8);
    2686:	ce 01       	movw	r24, r28
    2688:	0e 94 31 12 	call	0x2462	; 0x2462 <u8x8_SetupMemory>
}
    268c:	df 91       	pop	r29
    268e:	cf 91       	pop	r28
    2690:	1f 91       	pop	r17
    2692:	0f 91       	pop	r16
    2694:	ff 90       	pop	r15
    2696:	ef 90       	pop	r14
    2698:	df 90       	pop	r13
    269a:	cf 90       	pop	r12
    269c:	bf 90       	pop	r11
    269e:	af 90       	pop	r10
    26a0:	08 95       	ret

000026a2 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    26a2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    26a6:	88 e4       	ldi	r24, 0x48	; 72
    26a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    26ac:	08 95       	ret

000026ae <i2c_start_wait>:
    26ae:	0f 93       	push	r16
    26b0:	1f 93       	push	r17
    26b2:	94 ea       	ldi	r25, 0xA4	; 164
    26b4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    26b8:	4f ef       	ldi	r20, 0xFF	; 255
    26ba:	50 e0       	ldi	r21, 0x00	; 0
    26bc:	60 e0       	ldi	r22, 0x00	; 0
    26be:	70 e0       	ldi	r23, 0x00	; 0
    26c0:	02 c0       	rjmp	.+4      	; 0x26c6 <i2c_start_wait+0x18>
    26c2:	b9 01       	movw	r22, r18
    26c4:	a8 01       	movw	r20, r16
    26c6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    26ca:	99 23       	and	r25, r25
    26cc:	54 f0       	brlt	.+20     	; 0x26e2 <i2c_start_wait+0x34>
    26ce:	8a 01       	movw	r16, r20
    26d0:	9b 01       	movw	r18, r22
    26d2:	01 50       	subi	r16, 0x01	; 1
    26d4:	11 09       	sbc	r17, r1
    26d6:	21 09       	sbc	r18, r1
    26d8:	31 09       	sbc	r19, r1
    26da:	45 2b       	or	r20, r21
    26dc:	46 2b       	or	r20, r22
    26de:	47 2b       	or	r20, r23
    26e0:	81 f7       	brne	.-32     	; 0x26c2 <i2c_start_wait+0x14>
    26e2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    26e6:	98 7f       	andi	r25, 0xF8	; 248
    26e8:	98 30       	cpi	r25, 0x08	; 8
    26ea:	11 f0       	breq	.+4      	; 0x26f0 <i2c_start_wait+0x42>
    26ec:	90 31       	cpi	r25, 0x10	; 16
    26ee:	09 f7       	brne	.-62     	; 0x26b2 <i2c_start_wait+0x4>
    26f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    26f4:	94 e8       	ldi	r25, 0x84	; 132
    26f6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    26fa:	4f ef       	ldi	r20, 0xFF	; 255
    26fc:	50 e0       	ldi	r21, 0x00	; 0
    26fe:	60 e0       	ldi	r22, 0x00	; 0
    2700:	70 e0       	ldi	r23, 0x00	; 0
    2702:	02 c0       	rjmp	.+4      	; 0x2708 <i2c_start_wait+0x5a>
    2704:	b9 01       	movw	r22, r18
    2706:	a8 01       	movw	r20, r16
    2708:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    270c:	99 23       	and	r25, r25
    270e:	54 f0       	brlt	.+20     	; 0x2724 <i2c_start_wait+0x76>
    2710:	8a 01       	movw	r16, r20
    2712:	9b 01       	movw	r18, r22
    2714:	01 50       	subi	r16, 0x01	; 1
    2716:	11 09       	sbc	r17, r1
    2718:	21 09       	sbc	r18, r1
    271a:	31 09       	sbc	r19, r1
    271c:	45 2b       	or	r20, r21
    271e:	46 2b       	or	r20, r22
    2720:	47 2b       	or	r20, r23
    2722:	81 f7       	brne	.-32     	; 0x2704 <i2c_start_wait+0x56>
    2724:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    2728:	98 7f       	andi	r25, 0xF8	; 248
    272a:	90 32       	cpi	r25, 0x20	; 32
    272c:	11 f0       	breq	.+4      	; 0x2732 <i2c_start_wait+0x84>
    272e:	98 35       	cpi	r25, 0x58	; 88
    2730:	c9 f4       	brne	.+50     	; 0x2764 <i2c_start_wait+0xb6>
    2732:	94 e9       	ldi	r25, 0x94	; 148
    2734:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2738:	4f ef       	ldi	r20, 0xFF	; 255
    273a:	50 e0       	ldi	r21, 0x00	; 0
    273c:	60 e0       	ldi	r22, 0x00	; 0
    273e:	70 e0       	ldi	r23, 0x00	; 0
    2740:	02 c0       	rjmp	.+4      	; 0x2746 <i2c_start_wait+0x98>
    2742:	b9 01       	movw	r22, r18
    2744:	a8 01       	movw	r20, r16
    2746:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    274a:	94 ff       	sbrs	r25, 4
    274c:	b2 cf       	rjmp	.-156    	; 0x26b2 <i2c_start_wait+0x4>
    274e:	8a 01       	movw	r16, r20
    2750:	9b 01       	movw	r18, r22
    2752:	01 50       	subi	r16, 0x01	; 1
    2754:	11 09       	sbc	r17, r1
    2756:	21 09       	sbc	r18, r1
    2758:	31 09       	sbc	r19, r1
    275a:	45 2b       	or	r20, r21
    275c:	46 2b       	or	r20, r22
    275e:	47 2b       	or	r20, r23
    2760:	81 f7       	brne	.-32     	; 0x2742 <i2c_start_wait+0x94>
    2762:	a7 cf       	rjmp	.-178    	; 0x26b2 <i2c_start_wait+0x4>
    2764:	1f 91       	pop	r17
    2766:	0f 91       	pop	r16
    2768:	08 95       	ret

0000276a <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    276a:	84 e9       	ldi	r24, 0x94	; 148
    276c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
    2770:	8f ef       	ldi	r24, 0xFF	; 255
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	a0 e0       	ldi	r26, 0x00	; 0
    2776:	b0 e0       	ldi	r27, 0x00	; 0
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    2778:	02 c0       	rjmp	.+4      	; 0x277e <i2c_stop+0x14>
    277a:	db 01       	movw	r26, r22
    277c:	ca 01       	movw	r24, r20
    277e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2782:	24 ff       	sbrs	r18, 4
    2784:	0a c0       	rjmp	.+20     	; 0x279a <i2c_stop+0x30>
    2786:	ac 01       	movw	r20, r24
    2788:	bd 01       	movw	r22, r26
    278a:	41 50       	subi	r20, 0x01	; 1
    278c:	51 09       	sbc	r21, r1
    278e:	61 09       	sbc	r22, r1
    2790:	71 09       	sbc	r23, r1
    2792:	89 2b       	or	r24, r25
    2794:	8a 2b       	or	r24, r26
    2796:	8b 2b       	or	r24, r27
    2798:	81 f7       	brne	.-32     	; 0x277a <i2c_stop+0x10>
    279a:	08 95       	ret

0000279c <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    279c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    27a0:	84 e8       	ldi	r24, 0x84	; 132
    27a2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    27a6:	8f ef       	ldi	r24, 0xFF	; 255
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	a0 e0       	ldi	r26, 0x00	; 0
    27ac:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    27ae:	02 c0       	rjmp	.+4      	; 0x27b4 <i2c_write+0x18>
    27b0:	db 01       	movw	r26, r22
    27b2:	ca 01       	movw	r24, r20
    27b4:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    27b8:	22 23       	and	r18, r18
    27ba:	64 f0       	brlt	.+24     	; 0x27d4 <i2c_write+0x38>
    27bc:	ac 01       	movw	r20, r24
    27be:	bd 01       	movw	r22, r26
    27c0:	41 50       	subi	r20, 0x01	; 1
    27c2:	51 09       	sbc	r21, r1
    27c4:	61 09       	sbc	r22, r1
    27c6:	71 09       	sbc	r23, r1
    27c8:	89 2b       	or	r24, r25
    27ca:	8a 2b       	or	r24, r26
    27cc:	8b 2b       	or	r24, r27
    27ce:	81 f7       	brne	.-32     	; 0x27b0 <i2c_write+0x14>
    27d0:	db 01       	movw	r26, r22
    27d2:	ca 01       	movw	r24, r20
	if(i2c_timer == 0)
    27d4:	89 2b       	or	r24, r25
    27d6:	8a 2b       	or	r24, r26
    27d8:	8b 2b       	or	r24, r27
    27da:	39 f0       	breq	.+14     	; 0x27ea <i2c_write+0x4e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    27dc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    27e0:	88 7f       	andi	r24, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
    27e2:	88 32       	cpi	r24, 0x28	; 40
    27e4:	21 f0       	breq	.+8      	; 0x27ee <i2c_write+0x52>
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	08 95       	ret

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    27ea:	81 e0       	ldi	r24, 0x01	; 1
    27ec:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;
    27ee:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
    27f0:	08 95       	ret

000027f2 <u8x8_byte_avr_hw_i2c>:
}
#endif

#ifdef AVR_USE_HW_I2C
uint8_t u8x8_byte_avr_hw_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    27f2:	0f 93       	push	r16
    27f4:	1f 93       	push	r17
    27f6:	cf 93       	push	r28
	uint8_t *data;
	switch(msg){
    27f8:	68 31       	cpi	r22, 0x18	; 24
    27fa:	f9 f0       	breq	.+62     	; 0x283a <u8x8_byte_avr_hw_i2c+0x48>
    27fc:	28 f4       	brcc	.+10     	; 0x2808 <u8x8_byte_avr_hw_i2c+0x16>
    27fe:	64 31       	cpi	r22, 0x14	; 20
    2800:	c1 f0       	breq	.+48     	; 0x2832 <u8x8_byte_avr_hw_i2c+0x40>
    2802:	67 31       	cpi	r22, 0x17	; 23
    2804:	81 f0       	breq	.+32     	; 0x2826 <u8x8_byte_avr_hw_i2c+0x34>
    2806:	04 c0       	rjmp	.+8      	; 0x2810 <u8x8_byte_avr_hw_i2c+0x1e>
    2808:	69 31       	cpi	r22, 0x19	; 25
    280a:	e9 f0       	breq	.+58     	; 0x2846 <u8x8_byte_avr_hw_i2c+0x54>
    280c:	60 32       	cpi	r22, 0x20	; 32
    280e:	f9 f0       	breq	.+62     	; 0x284e <u8x8_byte_avr_hw_i2c+0x5c>
			break;
		case U8X8_MSG_BYTE_END_TRANSFER:
			i2c_stop();
			break;
		default:
			return 0;
    2810:	80 e0       	ldi	r24, 0x00	; 0
    2812:	1e c0       	rjmp	.+60     	; 0x2850 <u8x8_byte_avr_hw_i2c+0x5e>
	uint8_t *data;
	switch(msg){
		case U8X8_MSG_BYTE_SEND:
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
				i2c_write(*data++);
    2814:	89 01       	movw	r16, r18
    2816:	0f 5f       	subi	r16, 0xFF	; 255
    2818:	1f 4f       	sbci	r17, 0xFF	; 255
    281a:	f9 01       	movw	r30, r18
    281c:	80 81       	ld	r24, Z
    281e:	0e 94 ce 13 	call	0x279c	; 0x279c <i2c_write>
{
	uint8_t *data;
	switch(msg){
		case U8X8_MSG_BYTE_SEND:
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
    2822:	4c 2f       	mov	r20, r28
				i2c_write(*data++);
    2824:	98 01       	movw	r18, r16
{
	uint8_t *data;
	switch(msg){
		case U8X8_MSG_BYTE_SEND:
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
    2826:	cf ef       	ldi	r28, 0xFF	; 255
    2828:	c4 0f       	add	r28, r20
    282a:	41 11       	cpse	r20, r1
    282c:	f3 cf       	rjmp	.-26     	; 0x2814 <u8x8_byte_avr_hw_i2c+0x22>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    282e:	81 e0       	ldi	r24, 0x01	; 1
    2830:	0f c0       	rjmp	.+30     	; 0x2850 <u8x8_byte_avr_hw_i2c+0x5e>
			data = (uint8_t *)arg_ptr;
			while( arg_int-- )
				i2c_write(*data++);
			break;
		case U8X8_MSG_BYTE_INIT:
			i2c_init();
    2832:	0e 94 51 13 	call	0x26a2	; 0x26a2 <i2c_init>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    2836:	81 e0       	ldi	r24, 0x01	; 1
			while( arg_int-- )
				i2c_write(*data++);
			break;
		case U8X8_MSG_BYTE_INIT:
			i2c_init();
			break;
    2838:	0b c0       	rjmp	.+22     	; 0x2850 <u8x8_byte_avr_hw_i2c+0x5e>
		case U8X8_MSG_BYTE_SET_DC:
			/* ignored for i2c */
			break;
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
    283a:	fc 01       	movw	r30, r24
    283c:	86 89       	ldd	r24, Z+22	; 0x16
    283e:	0e 94 57 13 	call	0x26ae	; 0x26ae <i2c_start_wait>
			i2c_stop();
			break;
		default:
			return 0;
	}
	return 1;
    2842:	81 e0       	ldi	r24, 0x01	; 1
		case U8X8_MSG_BYTE_SET_DC:
			/* ignored for i2c */
			break;
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
			break;
    2844:	05 c0       	rjmp	.+10     	; 0x2850 <u8x8_byte_avr_hw_i2c+0x5e>
		case U8X8_MSG_BYTE_END_TRANSFER:
			i2c_stop();
    2846:	0e 94 b5 13 	call	0x276a	; 0x276a <i2c_stop>
			break;
		default:
			return 0;
	}
	return 1;
    284a:	81 e0       	ldi	r24, 0x01	; 1
		case U8X8_MSG_BYTE_START_TRANSFER:
			i2c_start_wait(u8x8_GetI2CAddress(u8x8)+I2C_WRITE);
			break;
		case U8X8_MSG_BYTE_END_TRANSFER:
			i2c_stop();
			break;
    284c:	01 c0       	rjmp	.+2      	; 0x2850 <u8x8_byte_avr_hw_i2c+0x5e>
		default:
			return 0;
	}
	return 1;
    284e:	81 e0       	ldi	r24, 0x01	; 1
}
    2850:	cf 91       	pop	r28
    2852:	1f 91       	pop	r17
    2854:	0f 91       	pop	r16
    2856:	08 95       	ret

00002858 <u8x8_avr_delay>:
#endif

uint8_t u8x8_avr_delay (u8x8_t * u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr) {
	uint8_t cycles;

	switch(msg) {
    2858:	6a 32       	cpi	r22, 0x2A	; 42
    285a:	11 f1       	breq	.+68     	; 0x28a0 <u8x8_avr_delay+0x48>
    285c:	18 f4       	brcc	.+6      	; 0x2864 <u8x8_avr_delay+0xc>
    285e:	69 32       	cpi	r22, 0x29	; 41
    2860:	61 f1       	breq	.+88     	; 0x28ba <u8x8_avr_delay+0x62>
    2862:	04 c0       	rjmp	.+8      	; 0x286c <u8x8_avr_delay+0x14>
    2864:	6b 32       	cpi	r22, 0x2B	; 43
    2866:	21 f0       	breq	.+8      	; 0x2870 <u8x8_avr_delay+0x18>
    2868:	6c 32       	cpi	r22, 0x2C	; 44
    286a:	69 f1       	breq	.+90     	; 0x28c6 <u8x8_avr_delay+0x6e>
			break;
		case U8X8_MSG_DELAY_MILLI:  // delay arg_int * 1 milli second
			while( arg_int-- ) _delay_ms(1);
			break;
		default:
			return 0;
    286c:	80 e0       	ldi	r24, 0x00	; 0
    286e:	08 95       	ret
			#define CALL_CYCLES 26UL
			#define CALC_CYCLES 4UL
			#define RETURN_CYCLES 4UL
			#define CYCLES_PER_LOOP 4UL

			cycles = (100UL * arg_int) / (P_CPU_NS * CYCLES_PER_LOOP);
    2870:	24 2f       	mov	r18, r20
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	a4 e6       	ldi	r26, 0x64	; 100
    2876:	b0 e0       	ldi	r27, 0x00	; 0
    2878:	0e 94 80 18 	call	0x3100	; 0x3100 <__umulhisi3>
    287c:	28 ef       	ldi	r18, 0xF8	; 248
    287e:	30 e0       	ldi	r19, 0x00	; 0
    2880:	40 e0       	ldi	r20, 0x00	; 0
    2882:	50 e0       	ldi	r21, 0x00	; 0
    2884:	0e 94 3f 18 	call	0x307e	; 0x307e <__udivmodsi4>

			if (cycles > CALL_CYCLES + RETURN_CYCLES + CALC_CYCLES)
    2888:	23 32       	cpi	r18, 0x23	; 35
    288a:	f8 f4       	brcc	.+62     	; 0x28ca <u8x8_avr_delay+0x72>
				break;

			__asm__ __volatile__ (
    288c:	82 2f       	mov	r24, r18
    288e:	01 97       	sbiw	r24, 0x01	; 1
    2890:	f1 f7       	brne	.-4      	; 0x288e <u8x8_avr_delay+0x36>
			break;
		default:
			return 0;
	}

	return 1;
    2892:	81 e0       	ldi	r24, 0x01	; 1

			__asm__ __volatile__ (
			  "1: sbiw %0,1" "\n\t"  // 2 cycles
			  "brne 1b":"=w" (cycles):"0" (cycles)  // 2 cycles
			);
			break;
    2894:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2896:	95 e3       	ldi	r25, 0x35	; 53
    2898:	9a 95       	dec	r25
    289a:	f1 f7       	brne	.-4      	; 0x2898 <u8x8_avr_delay+0x40>
    289c:	00 00       	nop
		case U8X8_MSG_DELAY_10MICRO: // delay arg_int * 10 micro seconds
			while( arg_int-- ) _delay_us(10);
    289e:	48 2f       	mov	r20, r24
    28a0:	8f ef       	ldi	r24, 0xFF	; 255
    28a2:	84 0f       	add	r24, r20
    28a4:	41 11       	cpse	r20, r1
    28a6:	f7 cf       	rjmp	.-18     	; 0x2896 <u8x8_avr_delay+0x3e>
			break;
		default:
			return 0;
	}

	return 1;
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    28ac:	ef e9       	ldi	r30, 0x9F	; 159
    28ae:	ff e0       	ldi	r31, 0x0F	; 15
    28b0:	31 97       	sbiw	r30, 0x01	; 1
    28b2:	f1 f7       	brne	.-4      	; 0x28b0 <u8x8_avr_delay+0x58>
    28b4:	00 c0       	rjmp	.+0      	; 0x28b6 <u8x8_avr_delay+0x5e>
    28b6:	00 00       	nop
			break;
		case U8X8_MSG_DELAY_10MICRO: // delay arg_int * 10 micro seconds
			while( arg_int-- ) _delay_us(10);
			break;
		case U8X8_MSG_DELAY_MILLI:  // delay arg_int * 1 milli second
			while( arg_int-- ) _delay_ms(1);
    28b8:	48 2f       	mov	r20, r24
    28ba:	8f ef       	ldi	r24, 0xFF	; 255
    28bc:	84 0f       	add	r24, r20
    28be:	41 11       	cpse	r20, r1
    28c0:	f5 cf       	rjmp	.-22     	; 0x28ac <u8x8_avr_delay+0x54>
			break;
		default:
			return 0;
	}

	return 1;
    28c2:	81 e0       	ldi	r24, 0x01	; 1
    28c4:	08 95       	ret
    28c6:	81 e0       	ldi	r24, 0x01	; 1
    28c8:	08 95       	ret
    28ca:	81 e0       	ldi	r24, 0x01	; 1
}
    28cc:	08 95       	ret

000028ce <drawMultiplePWMWaveforms>:

u8g2_t u8g2;

// To draw the square wave
void drawMultiplePWMWaveforms(float dutyCycle, uint8_t numCycles)
{
    28ce:	4f 92       	push	r4
    28d0:	5f 92       	push	r5
    28d2:	6f 92       	push	r6
    28d4:	7f 92       	push	r7
    28d6:	8f 92       	push	r8
    28d8:	9f 92       	push	r9
    28da:	af 92       	push	r10
    28dc:	bf 92       	push	r11
    28de:	cf 92       	push	r12
    28e0:	df 92       	push	r13
    28e2:	ef 92       	push	r14
    28e4:	ff 92       	push	r15
    28e6:	0f 93       	push	r16
    28e8:	1f 93       	push	r17
    28ea:	cf 93       	push	r28
    28ec:	df 93       	push	r29
    28ee:	cd b7       	in	r28, 0x3d	; 61
    28f0:	de b7       	in	r29, 0x3e	; 62
    28f2:	2a 97       	sbiw	r28, 0x0a	; 10
    28f4:	0f b6       	in	r0, 0x3f	; 63
    28f6:	f8 94       	cli
    28f8:	de bf       	out	0x3e, r29	; 62
    28fa:	0f be       	out	0x3f, r0	; 63
    28fc:	cd bf       	out	0x3d, r28	; 61
    28fe:	6d 83       	std	Y+5, r22	; 0x05
    2900:	7e 83       	std	Y+6, r23	; 0x06
    2902:	8f 83       	std	Y+7, r24	; 0x07
    2904:	98 87       	std	Y+8, r25	; 0x08
    2906:	4a 87       	std	Y+10, r20	; 0x0a
	u8g2_ClearBuffer(&u8g2);
    2908:	8d e7       	ldi	r24, 0x7D	; 125
    290a:	95 e0       	ldi	r25, 0x05	; 5
    290c:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <u8g2_ClearBuffer>
	u8g2_SetFont(&u8g2, u8g2_font_5x8_tf);
    2910:	6f e2       	ldi	r22, 0x2F	; 47
    2912:	7a e0       	ldi	r23, 0x0A	; 10
    2914:	8d e7       	ldi	r24, 0x7D	; 125
    2916:	95 e0       	ldi	r25, 0x05	; 5
    2918:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <u8g2_SetFont>
	u8g2_SetFontRefHeightText(&u8g2);
    291c:	8d e7       	ldi	r24, 0x7D	; 125
    291e:	95 e0       	ldi	r25, 0x05	; 5
    2920:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <u8g2_SetFontRefHeightText>
	u8g2_SetFontPosTop(&u8g2);
    2924:	8d e7       	ldi	r24, 0x7D	; 125
    2926:	95 e0       	ldi	r25, 0x05	; 5
    2928:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <u8g2_SetFontPosTop>

	// Calculate the width of each cycle
	float cycleWidth = 128.0 / numCycles;
    292c:	2a 85       	ldd	r18, Y+10	; 0x0a
    292e:	62 2f       	mov	r22, r18
    2930:	70 e0       	ldi	r23, 0x00	; 0
    2932:	80 e0       	ldi	r24, 0x00	; 0
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__floatsisf>
    293a:	9b 01       	movw	r18, r22
    293c:	ac 01       	movw	r20, r24
    293e:	60 e0       	ldi	r22, 0x00	; 0
    2940:	70 e0       	ldi	r23, 0x00	; 0
    2942:	80 e0       	ldi	r24, 0x00	; 0
    2944:	93 e4       	ldi	r25, 0x43	; 67
    2946:	0e 94 9c 16 	call	0x2d38	; 0x2d38 <__divsf3>
    294a:	6b 01       	movw	r12, r22
    294c:	7c 01       	movw	r14, r24

	for (uint8_t i = 0; i < numCycles; ++i)
    294e:	19 86       	std	Y+9, r1	; 0x09
    2950:	7c c0       	rjmp	.+248    	; 0x2a4a <drawMultiplePWMWaveforms+0x17c>
	{
		// Define the start of each rising and falling edge
		float startX = i * cycleWidth;
    2952:	89 85       	ldd	r24, Y+9	; 0x09
    2954:	68 2e       	mov	r6, r24
    2956:	71 2c       	mov	r7, r1
    2958:	b3 01       	movw	r22, r6
    295a:	07 2c       	mov	r0, r7
    295c:	00 0c       	add	r0, r0
    295e:	88 0b       	sbc	r24, r24
    2960:	99 0b       	sbc	r25, r25
    2962:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__floatsisf>
    2966:	9b 01       	movw	r18, r22
    2968:	ac 01       	movw	r20, r24
    296a:	c7 01       	movw	r24, r14
    296c:	b6 01       	movw	r22, r12
    296e:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__mulsf3>
    2972:	4b 01       	movw	r8, r22
    2974:	5c 01       	movw	r10, r24
		float endX = (i + 1) * cycleWidth;
    2976:	b3 01       	movw	r22, r6
    2978:	6f 5f       	subi	r22, 0xFF	; 255
    297a:	7f 4f       	sbci	r23, 0xFF	; 255
    297c:	07 2e       	mov	r0, r23
    297e:	00 0c       	add	r0, r0
    2980:	88 0b       	sbc	r24, r24
    2982:	99 0b       	sbc	r25, r25
    2984:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__floatsisf>
    2988:	9b 01       	movw	r18, r22
    298a:	ac 01       	movw	r20, r24
    298c:	c7 01       	movw	r24, r14
    298e:	b6 01       	movw	r22, r12
    2990:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__mulsf3>
    2994:	69 83       	std	Y+1, r22	; 0x01
    2996:	7a 83       	std	Y+2, r23	; 0x02
    2998:	8b 83       	std	Y+3, r24	; 0x03
    299a:	9c 83       	std	Y+4, r25	; 0x04

		// Draw the vertical line
		u8g2_DrawLine(&u8g2, startX, 30, startX, 60);
    299c:	c5 01       	movw	r24, r10
    299e:	b4 01       	movw	r22, r8
    29a0:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__fixunssfsi>
    29a4:	0c e3       	ldi	r16, 0x3C	; 60
    29a6:	10 e0       	ldi	r17, 0x00	; 0
    29a8:	9b 01       	movw	r18, r22
    29aa:	4e e1       	ldi	r20, 0x1E	; 30
    29ac:	50 e0       	ldi	r21, 0x00	; 0
    29ae:	8d e7       	ldi	r24, 0x7D	; 125
    29b0:	95 e0       	ldi	r25, 0x05	; 5
    29b2:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <u8g2_DrawLine>

		// Draw the first horizontal line
		u8g2_DrawLine(&u8g2, startX + 1, 30, startX + 1 + (dutyCycle * cycleWidth / 100.0), 30);
    29b6:	20 e0       	ldi	r18, 0x00	; 0
    29b8:	30 e0       	ldi	r19, 0x00	; 0
    29ba:	40 e8       	ldi	r20, 0x80	; 128
    29bc:	5f e3       	ldi	r21, 0x3F	; 63
    29be:	c5 01       	movw	r24, r10
    29c0:	b4 01       	movw	r22, r8
    29c2:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__addsf3>
    29c6:	4b 01       	movw	r8, r22
    29c8:	5c 01       	movw	r10, r24
    29ca:	2d 81       	ldd	r18, Y+5	; 0x05
    29cc:	3e 81       	ldd	r19, Y+6	; 0x06
    29ce:	4f 81       	ldd	r20, Y+7	; 0x07
    29d0:	58 85       	ldd	r21, Y+8	; 0x08
    29d2:	c7 01       	movw	r24, r14
    29d4:	b6 01       	movw	r22, r12
    29d6:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__mulsf3>
    29da:	20 e0       	ldi	r18, 0x00	; 0
    29dc:	30 e0       	ldi	r19, 0x00	; 0
    29de:	48 ec       	ldi	r20, 0xC8	; 200
    29e0:	52 e4       	ldi	r21, 0x42	; 66
    29e2:	0e 94 9c 16 	call	0x2d38	; 0x2d38 <__divsf3>
    29e6:	9b 01       	movw	r18, r22
    29e8:	ac 01       	movw	r20, r24
    29ea:	c5 01       	movw	r24, r10
    29ec:	b4 01       	movw	r22, r8
    29ee:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__addsf3>
    29f2:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__fixunssfsi>
    29f6:	2b 01       	movw	r4, r22
    29f8:	3c 01       	movw	r6, r24
    29fa:	c5 01       	movw	r24, r10
    29fc:	b4 01       	movw	r22, r8
    29fe:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__fixunssfsi>
    2a02:	0e e1       	ldi	r16, 0x1E	; 30
    2a04:	10 e0       	ldi	r17, 0x00	; 0
    2a06:	92 01       	movw	r18, r4
    2a08:	4e e1       	ldi	r20, 0x1E	; 30
    2a0a:	50 e0       	ldi	r21, 0x00	; 0
    2a0c:	8d e7       	ldi	r24, 0x7D	; 125
    2a0e:	95 e0       	ldi	r25, 0x05	; 5
    2a10:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <u8g2_DrawLine>

		// Draw the second vertical line
		u8g2_DrawLine(&u8g2, startX + 1 + (dutyCycle * cycleWidth / 100.0), 30, startX + 1 + (dutyCycle * cycleWidth / 100.0), 60);
    2a14:	0c e3       	ldi	r16, 0x3C	; 60
    2a16:	10 e0       	ldi	r17, 0x00	; 0
    2a18:	92 01       	movw	r18, r4
    2a1a:	4e e1       	ldi	r20, 0x1E	; 30
    2a1c:	50 e0       	ldi	r21, 0x00	; 0
    2a1e:	b2 01       	movw	r22, r4
    2a20:	8d e7       	ldi	r24, 0x7D	; 125
    2a22:	95 e0       	ldi	r25, 0x05	; 5
    2a24:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <u8g2_DrawLine>

		// Draw the second horizontal line
		u8g2_DrawLine(&u8g2, startX + 1 + (dutyCycle * cycleWidth / 100.0), 60, endX, 60);
    2a28:	69 81       	ldd	r22, Y+1	; 0x01
    2a2a:	7a 81       	ldd	r23, Y+2	; 0x02
    2a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a2e:	9c 81       	ldd	r25, Y+4	; 0x04
    2a30:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__fixunssfsi>
    2a34:	9b 01       	movw	r18, r22
    2a36:	4c e3       	ldi	r20, 0x3C	; 60
    2a38:	50 e0       	ldi	r21, 0x00	; 0
    2a3a:	b2 01       	movw	r22, r4
    2a3c:	8d e7       	ldi	r24, 0x7D	; 125
    2a3e:	95 e0       	ldi	r25, 0x05	; 5
    2a40:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <u8g2_DrawLine>
	u8g2_SetFontPosTop(&u8g2);

	// Calculate the width of each cycle
	float cycleWidth = 128.0 / numCycles;

	for (uint8_t i = 0; i < numCycles; ++i)
    2a44:	99 85       	ldd	r25, Y+9	; 0x09
    2a46:	9f 5f       	subi	r25, 0xFF	; 255
    2a48:	99 87       	std	Y+9, r25	; 0x09
    2a4a:	29 85       	ldd	r18, Y+9	; 0x09
    2a4c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a4e:	28 17       	cp	r18, r24
    2a50:	08 f4       	brcc	.+2      	; 0x2a54 <drawMultiplePWMWaveforms+0x186>
    2a52:	7f cf       	rjmp	.-258    	; 0x2952 <drawMultiplePWMWaveforms+0x84>

		// Draw the second horizontal line
		u8g2_DrawLine(&u8g2, startX + 1 + (dutyCycle * cycleWidth / 100.0), 60, endX, 60);
	}

	u8g2_SendBuffer(&u8g2);
    2a54:	8d e7       	ldi	r24, 0x7D	; 125
    2a56:	95 e0       	ldi	r25, 0x05	; 5
    2a58:	0e 94 e6 08 	call	0x11cc	; 0x11cc <u8g2_SendBuffer>
}
    2a5c:	2a 96       	adiw	r28, 0x0a	; 10
    2a5e:	0f b6       	in	r0, 0x3f	; 63
    2a60:	f8 94       	cli
    2a62:	de bf       	out	0x3e, r29	; 62
    2a64:	0f be       	out	0x3f, r0	; 63
    2a66:	cd bf       	out	0x3d, r28	; 61
    2a68:	df 91       	pop	r29
    2a6a:	cf 91       	pop	r28
    2a6c:	1f 91       	pop	r17
    2a6e:	0f 91       	pop	r16
    2a70:	ff 90       	pop	r15
    2a72:	ef 90       	pop	r14
    2a74:	df 90       	pop	r13
    2a76:	cf 90       	pop	r12
    2a78:	bf 90       	pop	r11
    2a7a:	af 90       	pop	r10
    2a7c:	9f 90       	pop	r9
    2a7e:	8f 90       	pop	r8
    2a80:	7f 90       	pop	r7
    2a82:	6f 90       	pop	r6
    2a84:	5f 90       	pop	r5
    2a86:	4f 90       	pop	r4
    2a88:	08 95       	ret

00002a8a <main>:


int main()
{
    2a8a:	cf 93       	push	r28
    2a8c:	df 93       	push	r29
    2a8e:	cd b7       	in	r28, 0x3d	; 61
    2a90:	de b7       	in	r29, 0x3e	; 62
    2a92:	6f 97       	sbiw	r28, 0x1f	; 31
    2a94:	0f b6       	in	r0, 0x3f	; 63
    2a96:	f8 94       	cli
    2a98:	de bf       	out	0x3e, r29	; 62
    2a9a:	0f be       	out	0x3f, r0	; 63
    2a9c:	cd bf       	out	0x3d, r28	; 61
	u8g2_Setup_ssd1306_i2c_128x64_noname_f(&u8g2, U8G2_R0, u8x8_byte_avr_hw_i2c, u8x8_avr_delay);
    2a9e:	2c e2       	ldi	r18, 0x2C	; 44
    2aa0:	34 e1       	ldi	r19, 0x14	; 20
    2aa2:	49 ef       	ldi	r20, 0xF9	; 249
    2aa4:	53 e1       	ldi	r21, 0x13	; 19
    2aa6:	60 e0       	ldi	r22, 0x00	; 0
    2aa8:	71 e0       	ldi	r23, 0x01	; 1
    2aaa:	8d e7       	ldi	r24, 0x7D	; 125
    2aac:	95 e0       	ldi	r25, 0x05	; 5
    2aae:	0e 94 f7 08 	call	0x11ee	; 0x11ee <u8g2_Setup_ssd1306_i2c_128x64_noname_f>
	u8g2_SetI2CAddress(&u8g2, SSD1306_ADDR);
    2ab2:	88 e7       	ldi	r24, 0x78	; 120
    2ab4:	80 93 93 05 	sts	0x0593, r24	; 0x800593 <u8g2+0x16>
	u8g2_InitDisplay(&u8g2);
    2ab8:	8d e7       	ldi	r24, 0x7D	; 125
    2aba:	95 e0       	ldi	r25, 0x05	; 5
    2abc:	0e 94 3c 12 	call	0x2478	; 0x2478 <u8x8_InitDisplay>
	u8g2_SetPowerSave(&u8g2, 0);
    2ac0:	60 e0       	ldi	r22, 0x00	; 0
    2ac2:	8d e7       	ldi	r24, 0x7D	; 125
    2ac4:	95 e0       	ldi	r25, 0x05	; 5
    2ac6:	0e 94 47 12 	call	0x248e	; 0x248e <u8x8_SetPowerSave>
	
	u8g2_ClearBuffer(&u8g2);
    2aca:	8d e7       	ldi	r24, 0x7D	; 125
    2acc:	95 e0       	ldi	r25, 0x05	; 5
    2ace:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <u8g2_ClearBuffer>
	u8g2_SetFont(&u8g2, u8g2_font_6x12_mf);
    2ad2:	68 e6       	ldi	r22, 0x68	; 104
    2ad4:	70 e0       	ldi	r23, 0x00	; 0
    2ad6:	8d e7       	ldi	r24, 0x7D	; 125
    2ad8:	95 e0       	ldi	r25, 0x05	; 5
    2ada:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <u8g2_SetFont>
	u8g2_SetFontRefHeightText(&u8g2);
    2ade:	8d e7       	ldi	r24, 0x7D	; 125
    2ae0:	95 e0       	ldi	r25, 0x05	; 5
    2ae2:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <u8g2_SetFontRefHeightText>
	u8g2_SetFontPosTop(&u8g2);
    2ae6:	8d e7       	ldi	r24, 0x7D	; 125
    2ae8:	95 e0       	ldi	r25, 0x05	; 5
    2aea:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <u8g2_SetFontPosTop>
	
	unsigned int a, b, c, high, period;
	char frequency[14], duty_cy[7], per[10];

	PORTD = 0xFF; 
    2aee:	8f ef       	ldi	r24, 0xFF	; 255
    2af0:	8b b9       	out	0x0b, r24	; 11

	while (1)
	{
		TCCR1A = 0;
    2af2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
		TCNT1 = 0;
    2af6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    2afa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
		TIFR1 = (1 << ICF1); /* Clear ICF (Input Capture flag) flag */
    2afe:	80 e2       	ldi	r24, 0x20	; 32
    2b00:	86 bb       	out	0x16, r24	; 22

		TCCR1B = (1 << ICES1) | (1 << CS10) | (1 << CS11); /* Rising edge, 64 prescaler */
    2b02:	83 e4       	ldi	r24, 0x43	; 67
    2b04:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
		while ((TIFR1 & (1 << ICF1)) == 0);
    2b08:	b5 9b       	sbis	0x16, 5	; 22
    2b0a:	fe cf       	rjmp	.-4      	; 0x2b08 <main+0x7e>
		a = ICR1; /* Take value of capture register */
    2b0c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
    2b10:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
		TIFR1 = (1 << ICF1); /* Clear ICF flag */
    2b14:	20 e2       	ldi	r18, 0x20	; 32
    2b16:	26 bb       	out	0x16, r18	; 22

		TCCR1B = (1 << CS10) | (1 << CS11); /* Falling edge, 64 prescaler */
    2b18:	23 e0       	ldi	r18, 0x03	; 3
    2b1a:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
		while ((TIFR1 & (1 << ICF1)) == 0);
    2b1e:	b5 9b       	sbis	0x16, 5	; 22
    2b20:	fe cf       	rjmp	.-4      	; 0x2b1e <main+0x94>
		b = ICR1; /* Take value of capture register */
    2b22:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
    2b26:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
		TIFR1 = (1 << ICF1); /* Clear ICF flag */
    2b2a:	20 e2       	ldi	r18, 0x20	; 32
    2b2c:	26 bb       	out	0x16, r18	; 22

		TCCR1B = (1 << ICES1) | (1 << CS10) | (1 << CS11); /* Rising edge, 64 prescaler */
    2b2e:	23 e4       	ldi	r18, 0x43	; 67
    2b30:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
		while ((TIFR1 & (1 << ICF1)) == 0);
    2b34:	b5 9b       	sbis	0x16, 5	; 22
    2b36:	fe cf       	rjmp	.-4      	; 0x2b34 <main+0xaa>
		c = ICR1; /* Take value of capture register */
    2b38:	c0 90 86 00 	lds	r12, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
    2b3c:	d0 90 87 00 	lds	r13, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
		TIFR1 = (1 << ICF1); /* Clear ICF flag */
    2b40:	20 e2       	ldi	r18, 0x20	; 32
    2b42:	26 bb       	out	0x16, r18	; 22

		//TCCR1B = 0; /* Stop the timer */

		high = b - a;
    2b44:	8b 01       	movw	r16, r22
    2b46:	08 1b       	sub	r16, r24
    2b48:	19 0b       	sbc	r17, r25
		period = c - a;
    2b4a:	c8 1a       	sub	r12, r24
    2b4c:	d9 0a       	sbc	r13, r25

		long freq = F_CPU / period; /* Calculate frequency */
    2b4e:	e1 2c       	mov	r14, r1
    2b50:	f1 2c       	mov	r15, r1
    2b52:	60 e0       	ldi	r22, 0x00	; 0
    2b54:	74 e2       	ldi	r23, 0x24	; 36
    2b56:	84 ef       	ldi	r24, 0xF4	; 244
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	a7 01       	movw	r20, r14
    2b5c:	96 01       	movw	r18, r12
    2b5e:	0e 94 61 18 	call	0x30c2	; 0x30c2 <__divmodsi4>
    2b62:	49 01       	movw	r8, r18
    2b64:	5a 01       	movw	r10, r20

		/* Calculate duty cycle */
		float duty_cycle = ((float)high / (float)period) * 100.0;
    2b66:	b8 01       	movw	r22, r16
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <__floatunsisf>
    2b70:	2b 01       	movw	r4, r22
    2b72:	3c 01       	movw	r6, r24
    2b74:	c7 01       	movw	r24, r14
    2b76:	b6 01       	movw	r22, r12
    2b78:	0e 94 44 17 	call	0x2e88	; 0x2e88 <__floatunsisf>
    2b7c:	9b 01       	movw	r18, r22
    2b7e:	ac 01       	movw	r20, r24
    2b80:	c3 01       	movw	r24, r6
    2b82:	b2 01       	movw	r22, r4
    2b84:	0e 94 9c 16 	call	0x2d38	; 0x2d38 <__divsf3>
    2b88:	20 e0       	ldi	r18, 0x00	; 0
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	48 ec       	ldi	r20, 0xC8	; 200
    2b8e:	52 e4       	ldi	r21, 0x42	; 66
    2b90:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__mulsf3>
    2b94:	2b 01       	movw	r4, r22
    2b96:	3c 01       	movw	r6, r24

		itoa((int)duty_cycle, duty_cy, 10);
    2b98:	0e 94 0e 17 	call	0x2e1c	; 0x2e1c <__fixsfsi>
    2b9c:	dc 01       	movw	r26, r24
    2b9e:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    2ba0:	4a e0       	ldi	r20, 0x0A	; 10
    2ba2:	be 01       	movw	r22, r28
    2ba4:	61 5f       	subi	r22, 0xF1	; 241
    2ba6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba8:	0e 94 96 18 	call	0x312c	; 0x312c <__itoa_ncheck>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
    2bac:	2a e0       	ldi	r18, 0x0A	; 10
    2bae:	ae 01       	movw	r20, r28
    2bb0:	4f 5f       	subi	r20, 0xFF	; 255
    2bb2:	5f 4f       	sbci	r21, 0xFF	; 255
    2bb4:	c5 01       	movw	r24, r10
    2bb6:	b4 01       	movw	r22, r8
    2bb8:	0e 94 a1 18 	call	0x3142	; 0x3142 <__ltoa_ncheck>
    2bbc:	2a e0       	ldi	r18, 0x0A	; 10
    2bbe:	ae 01       	movw	r20, r28
    2bc0:	4a 5e       	subi	r20, 0xEA	; 234
    2bc2:	5f 4f       	sbci	r21, 0xFF	; 255
    2bc4:	c7 01       	movw	r24, r14
    2bc6:	b6 01       	movw	r22, r12
    2bc8:	0e 94 a1 18 	call	0x3142	; 0x3142 <__ltoa_ncheck>
		ltoa(freq, frequency, 10);
		ltoa(period, per, 10);
		
		drawMultiplePWMWaveforms(duty_cycle, 5);
    2bcc:	45 e0       	ldi	r20, 0x05	; 5
    2bce:	c3 01       	movw	r24, r6
    2bd0:	b2 01       	movw	r22, r4
    2bd2:	0e 94 67 14 	call	0x28ce	; 0x28ce <drawMultiplePWMWaveforms>
		
		u8g2_DrawStr(&u8g2, 0, 0, "F: ");
    2bd6:	2b e6       	ldi	r18, 0x6B	; 107
    2bd8:	31 e0       	ldi	r19, 0x01	; 1
    2bda:	40 e0       	ldi	r20, 0x00	; 0
    2bdc:	50 e0       	ldi	r21, 0x00	; 0
    2bde:	60 e0       	ldi	r22, 0x00	; 0
    2be0:	70 e0       	ldi	r23, 0x00	; 0
    2be2:	8d e7       	ldi	r24, 0x7D	; 125
    2be4:	95 e0       	ldi	r25, 0x05	; 5
    2be6:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, 75, 0, "DC: ");
    2bea:	2f e6       	ldi	r18, 0x6F	; 111
    2bec:	31 e0       	ldi	r19, 0x01	; 1
    2bee:	40 e0       	ldi	r20, 0x00	; 0
    2bf0:	50 e0       	ldi	r21, 0x00	; 0
    2bf2:	6b e4       	ldi	r22, 0x4B	; 75
    2bf4:	70 e0       	ldi	r23, 0x00	; 0
    2bf6:	8d e7       	ldi	r24, 0x7D	; 125
    2bf8:	95 e0       	ldi	r25, 0x05	; 5
    2bfa:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, 0, 10, "P: ");
    2bfe:	24 e7       	ldi	r18, 0x74	; 116
    2c00:	31 e0       	ldi	r19, 0x01	; 1
    2c02:	4a e0       	ldi	r20, 0x0A	; 10
    2c04:	50 e0       	ldi	r21, 0x00	; 0
    2c06:	60 e0       	ldi	r22, 0x00	; 0
    2c08:	70 e0       	ldi	r23, 0x00	; 0
    2c0a:	8d e7       	ldi	r24, 0x7D	; 125
    2c0c:	95 e0       	ldi	r25, 0x05	; 5
    2c0e:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
				
		u8g2_DrawStr(&u8g2, 95, 0, duty_cy);
    2c12:	9e 01       	movw	r18, r28
    2c14:	21 5f       	subi	r18, 0xF1	; 241
    2c16:	3f 4f       	sbci	r19, 0xFF	; 255
    2c18:	40 e0       	ldi	r20, 0x00	; 0
    2c1a:	50 e0       	ldi	r21, 0x00	; 0
    2c1c:	6f e5       	ldi	r22, 0x5F	; 95
    2c1e:	70 e0       	ldi	r23, 0x00	; 0
    2c20:	8d e7       	ldi	r24, 0x7D	; 125
    2c22:	95 e0       	ldi	r25, 0x05	; 5
    2c24:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, 15, 0, frequency);
    2c28:	9e 01       	movw	r18, r28
    2c2a:	2f 5f       	subi	r18, 0xFF	; 255
    2c2c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c2e:	40 e0       	ldi	r20, 0x00	; 0
    2c30:	50 e0       	ldi	r21, 0x00	; 0
    2c32:	6f e0       	ldi	r22, 0x0F	; 15
    2c34:	70 e0       	ldi	r23, 0x00	; 0
    2c36:	8d e7       	ldi	r24, 0x7D	; 125
    2c38:	95 e0       	ldi	r25, 0x05	; 5
    2c3a:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
		u8g2_DrawStr(&u8g2, 15, 10, per);
    2c3e:	9e 01       	movw	r18, r28
    2c40:	2a 5e       	subi	r18, 0xEA	; 234
    2c42:	3f 4f       	sbci	r19, 0xFF	; 255
    2c44:	4a e0       	ldi	r20, 0x0A	; 10
    2c46:	50 e0       	ldi	r21, 0x00	; 0
    2c48:	6f e0       	ldi	r22, 0x0F	; 15
    2c4a:	70 e0       	ldi	r23, 0x00	; 0
    2c4c:	8d e7       	ldi	r24, 0x7D	; 125
    2c4e:	95 e0       	ldi	r25, 0x05	; 5
    2c50:	0e 94 ce 0c 	call	0x199c	; 0x199c <u8g2_DrawStr>
		u8g2_SendBuffer(&u8g2);
    2c54:	8d e7       	ldi	r24, 0x7D	; 125
    2c56:	95 e0       	ldi	r25, 0x05	; 5
    2c58:	0e 94 e6 08 	call	0x11cc	; 0x11cc <u8g2_SendBuffer>
	}
    2c5c:	4a cf       	rjmp	.-364    	; 0x2af2 <main+0x68>

00002c5e <__subsf3>:
    2c5e:	50 58       	subi	r21, 0x80	; 128

00002c60 <__addsf3>:
    2c60:	bb 27       	eor	r27, r27
    2c62:	aa 27       	eor	r26, r26
    2c64:	0e 94 47 16 	call	0x2c8e	; 0x2c8e <__addsf3x>
    2c68:	0c 94 98 17 	jmp	0x2f30	; 0x2f30 <__fp_round>
    2c6c:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <__fp_pscA>
    2c70:	38 f0       	brcs	.+14     	; 0x2c80 <__addsf3+0x20>
    2c72:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__fp_pscB>
    2c76:	20 f0       	brcs	.+8      	; 0x2c80 <__addsf3+0x20>
    2c78:	39 f4       	brne	.+14     	; 0x2c88 <__addsf3+0x28>
    2c7a:	9f 3f       	cpi	r25, 0xFF	; 255
    2c7c:	19 f4       	brne	.+6      	; 0x2c84 <__addsf3+0x24>
    2c7e:	26 f4       	brtc	.+8      	; 0x2c88 <__addsf3+0x28>
    2c80:	0c 94 87 17 	jmp	0x2f0e	; 0x2f0e <__fp_nan>
    2c84:	0e f4       	brtc	.+2      	; 0x2c88 <__addsf3+0x28>
    2c86:	e0 95       	com	r30
    2c88:	e7 fb       	bst	r30, 7
    2c8a:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__fp_inf>

00002c8e <__addsf3x>:
    2c8e:	e9 2f       	mov	r30, r25
    2c90:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__fp_split3>
    2c94:	58 f3       	brcs	.-42     	; 0x2c6c <__addsf3+0xc>
    2c96:	ba 17       	cp	r27, r26
    2c98:	62 07       	cpc	r22, r18
    2c9a:	73 07       	cpc	r23, r19
    2c9c:	84 07       	cpc	r24, r20
    2c9e:	95 07       	cpc	r25, r21
    2ca0:	20 f0       	brcs	.+8      	; 0x2caa <__addsf3x+0x1c>
    2ca2:	79 f4       	brne	.+30     	; 0x2cc2 <__addsf3x+0x34>
    2ca4:	a6 f5       	brtc	.+104    	; 0x2d0e <__addsf3x+0x80>
    2ca6:	0c 94 cb 17 	jmp	0x2f96	; 0x2f96 <__fp_zero>
    2caa:	0e f4       	brtc	.+2      	; 0x2cae <__addsf3x+0x20>
    2cac:	e0 95       	com	r30
    2cae:	0b 2e       	mov	r0, r27
    2cb0:	ba 2f       	mov	r27, r26
    2cb2:	a0 2d       	mov	r26, r0
    2cb4:	0b 01       	movw	r0, r22
    2cb6:	b9 01       	movw	r22, r18
    2cb8:	90 01       	movw	r18, r0
    2cba:	0c 01       	movw	r0, r24
    2cbc:	ca 01       	movw	r24, r20
    2cbe:	a0 01       	movw	r20, r0
    2cc0:	11 24       	eor	r1, r1
    2cc2:	ff 27       	eor	r31, r31
    2cc4:	59 1b       	sub	r21, r25
    2cc6:	99 f0       	breq	.+38     	; 0x2cee <__addsf3x+0x60>
    2cc8:	59 3f       	cpi	r21, 0xF9	; 249
    2cca:	50 f4       	brcc	.+20     	; 0x2ce0 <__addsf3x+0x52>
    2ccc:	50 3e       	cpi	r21, 0xE0	; 224
    2cce:	68 f1       	brcs	.+90     	; 0x2d2a <__addsf3x+0x9c>
    2cd0:	1a 16       	cp	r1, r26
    2cd2:	f0 40       	sbci	r31, 0x00	; 0
    2cd4:	a2 2f       	mov	r26, r18
    2cd6:	23 2f       	mov	r18, r19
    2cd8:	34 2f       	mov	r19, r20
    2cda:	44 27       	eor	r20, r20
    2cdc:	58 5f       	subi	r21, 0xF8	; 248
    2cde:	f3 cf       	rjmp	.-26     	; 0x2cc6 <__addsf3x+0x38>
    2ce0:	46 95       	lsr	r20
    2ce2:	37 95       	ror	r19
    2ce4:	27 95       	ror	r18
    2ce6:	a7 95       	ror	r26
    2ce8:	f0 40       	sbci	r31, 0x00	; 0
    2cea:	53 95       	inc	r21
    2cec:	c9 f7       	brne	.-14     	; 0x2ce0 <__addsf3x+0x52>
    2cee:	7e f4       	brtc	.+30     	; 0x2d0e <__addsf3x+0x80>
    2cf0:	1f 16       	cp	r1, r31
    2cf2:	ba 0b       	sbc	r27, r26
    2cf4:	62 0b       	sbc	r22, r18
    2cf6:	73 0b       	sbc	r23, r19
    2cf8:	84 0b       	sbc	r24, r20
    2cfa:	ba f0       	brmi	.+46     	; 0x2d2a <__addsf3x+0x9c>
    2cfc:	91 50       	subi	r25, 0x01	; 1
    2cfe:	a1 f0       	breq	.+40     	; 0x2d28 <__addsf3x+0x9a>
    2d00:	ff 0f       	add	r31, r31
    2d02:	bb 1f       	adc	r27, r27
    2d04:	66 1f       	adc	r22, r22
    2d06:	77 1f       	adc	r23, r23
    2d08:	88 1f       	adc	r24, r24
    2d0a:	c2 f7       	brpl	.-16     	; 0x2cfc <__addsf3x+0x6e>
    2d0c:	0e c0       	rjmp	.+28     	; 0x2d2a <__addsf3x+0x9c>
    2d0e:	ba 0f       	add	r27, r26
    2d10:	62 1f       	adc	r22, r18
    2d12:	73 1f       	adc	r23, r19
    2d14:	84 1f       	adc	r24, r20
    2d16:	48 f4       	brcc	.+18     	; 0x2d2a <__addsf3x+0x9c>
    2d18:	87 95       	ror	r24
    2d1a:	77 95       	ror	r23
    2d1c:	67 95       	ror	r22
    2d1e:	b7 95       	ror	r27
    2d20:	f7 95       	ror	r31
    2d22:	9e 3f       	cpi	r25, 0xFE	; 254
    2d24:	08 f0       	brcs	.+2      	; 0x2d28 <__addsf3x+0x9a>
    2d26:	b0 cf       	rjmp	.-160    	; 0x2c88 <__addsf3+0x28>
    2d28:	93 95       	inc	r25
    2d2a:	88 0f       	add	r24, r24
    2d2c:	08 f0       	brcs	.+2      	; 0x2d30 <__addsf3x+0xa2>
    2d2e:	99 27       	eor	r25, r25
    2d30:	ee 0f       	add	r30, r30
    2d32:	97 95       	ror	r25
    2d34:	87 95       	ror	r24
    2d36:	08 95       	ret

00002d38 <__divsf3>:
    2d38:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__divsf3x>
    2d3c:	0c 94 98 17 	jmp	0x2f30	; 0x2f30 <__fp_round>
    2d40:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__fp_pscB>
    2d44:	58 f0       	brcs	.+22     	; 0x2d5c <__divsf3+0x24>
    2d46:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <__fp_pscA>
    2d4a:	40 f0       	brcs	.+16     	; 0x2d5c <__divsf3+0x24>
    2d4c:	29 f4       	brne	.+10     	; 0x2d58 <__divsf3+0x20>
    2d4e:	5f 3f       	cpi	r21, 0xFF	; 255
    2d50:	29 f0       	breq	.+10     	; 0x2d5c <__divsf3+0x24>
    2d52:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__fp_inf>
    2d56:	51 11       	cpse	r21, r1
    2d58:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_szero>
    2d5c:	0c 94 87 17 	jmp	0x2f0e	; 0x2f0e <__fp_nan>

00002d60 <__divsf3x>:
    2d60:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__fp_split3>
    2d64:	68 f3       	brcs	.-38     	; 0x2d40 <__divsf3+0x8>

00002d66 <__divsf3_pse>:
    2d66:	99 23       	and	r25, r25
    2d68:	b1 f3       	breq	.-20     	; 0x2d56 <__divsf3+0x1e>
    2d6a:	55 23       	and	r21, r21
    2d6c:	91 f3       	breq	.-28     	; 0x2d52 <__divsf3+0x1a>
    2d6e:	95 1b       	sub	r25, r21
    2d70:	55 0b       	sbc	r21, r21
    2d72:	bb 27       	eor	r27, r27
    2d74:	aa 27       	eor	r26, r26
    2d76:	62 17       	cp	r22, r18
    2d78:	73 07       	cpc	r23, r19
    2d7a:	84 07       	cpc	r24, r20
    2d7c:	38 f0       	brcs	.+14     	; 0x2d8c <__divsf3_pse+0x26>
    2d7e:	9f 5f       	subi	r25, 0xFF	; 255
    2d80:	5f 4f       	sbci	r21, 0xFF	; 255
    2d82:	22 0f       	add	r18, r18
    2d84:	33 1f       	adc	r19, r19
    2d86:	44 1f       	adc	r20, r20
    2d88:	aa 1f       	adc	r26, r26
    2d8a:	a9 f3       	breq	.-22     	; 0x2d76 <__divsf3_pse+0x10>
    2d8c:	35 d0       	rcall	.+106    	; 0x2df8 <__divsf3_pse+0x92>
    2d8e:	0e 2e       	mov	r0, r30
    2d90:	3a f0       	brmi	.+14     	; 0x2da0 <__divsf3_pse+0x3a>
    2d92:	e0 e8       	ldi	r30, 0x80	; 128
    2d94:	32 d0       	rcall	.+100    	; 0x2dfa <__divsf3_pse+0x94>
    2d96:	91 50       	subi	r25, 0x01	; 1
    2d98:	50 40       	sbci	r21, 0x00	; 0
    2d9a:	e6 95       	lsr	r30
    2d9c:	00 1c       	adc	r0, r0
    2d9e:	ca f7       	brpl	.-14     	; 0x2d92 <__divsf3_pse+0x2c>
    2da0:	2b d0       	rcall	.+86     	; 0x2df8 <__divsf3_pse+0x92>
    2da2:	fe 2f       	mov	r31, r30
    2da4:	29 d0       	rcall	.+82     	; 0x2df8 <__divsf3_pse+0x92>
    2da6:	66 0f       	add	r22, r22
    2da8:	77 1f       	adc	r23, r23
    2daa:	88 1f       	adc	r24, r24
    2dac:	bb 1f       	adc	r27, r27
    2dae:	26 17       	cp	r18, r22
    2db0:	37 07       	cpc	r19, r23
    2db2:	48 07       	cpc	r20, r24
    2db4:	ab 07       	cpc	r26, r27
    2db6:	b0 e8       	ldi	r27, 0x80	; 128
    2db8:	09 f0       	breq	.+2      	; 0x2dbc <__divsf3_pse+0x56>
    2dba:	bb 0b       	sbc	r27, r27
    2dbc:	80 2d       	mov	r24, r0
    2dbe:	bf 01       	movw	r22, r30
    2dc0:	ff 27       	eor	r31, r31
    2dc2:	93 58       	subi	r25, 0x83	; 131
    2dc4:	5f 4f       	sbci	r21, 0xFF	; 255
    2dc6:	3a f0       	brmi	.+14     	; 0x2dd6 <__divsf3_pse+0x70>
    2dc8:	9e 3f       	cpi	r25, 0xFE	; 254
    2dca:	51 05       	cpc	r21, r1
    2dcc:	78 f0       	brcs	.+30     	; 0x2dec <__divsf3_pse+0x86>
    2dce:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__fp_inf>
    2dd2:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_szero>
    2dd6:	5f 3f       	cpi	r21, 0xFF	; 255
    2dd8:	e4 f3       	brlt	.-8      	; 0x2dd2 <__divsf3_pse+0x6c>
    2dda:	98 3e       	cpi	r25, 0xE8	; 232
    2ddc:	d4 f3       	brlt	.-12     	; 0x2dd2 <__divsf3_pse+0x6c>
    2dde:	86 95       	lsr	r24
    2de0:	77 95       	ror	r23
    2de2:	67 95       	ror	r22
    2de4:	b7 95       	ror	r27
    2de6:	f7 95       	ror	r31
    2de8:	9f 5f       	subi	r25, 0xFF	; 255
    2dea:	c9 f7       	brne	.-14     	; 0x2dde <__divsf3_pse+0x78>
    2dec:	88 0f       	add	r24, r24
    2dee:	91 1d       	adc	r25, r1
    2df0:	96 95       	lsr	r25
    2df2:	87 95       	ror	r24
    2df4:	97 f9       	bld	r25, 7
    2df6:	08 95       	ret
    2df8:	e1 e0       	ldi	r30, 0x01	; 1
    2dfa:	66 0f       	add	r22, r22
    2dfc:	77 1f       	adc	r23, r23
    2dfe:	88 1f       	adc	r24, r24
    2e00:	bb 1f       	adc	r27, r27
    2e02:	62 17       	cp	r22, r18
    2e04:	73 07       	cpc	r23, r19
    2e06:	84 07       	cpc	r24, r20
    2e08:	ba 07       	cpc	r27, r26
    2e0a:	20 f0       	brcs	.+8      	; 0x2e14 <__divsf3_pse+0xae>
    2e0c:	62 1b       	sub	r22, r18
    2e0e:	73 0b       	sbc	r23, r19
    2e10:	84 0b       	sbc	r24, r20
    2e12:	ba 0b       	sbc	r27, r26
    2e14:	ee 1f       	adc	r30, r30
    2e16:	88 f7       	brcc	.-30     	; 0x2dfa <__divsf3_pse+0x94>
    2e18:	e0 95       	com	r30
    2e1a:	08 95       	ret

00002e1c <__fixsfsi>:
    2e1c:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__fixunssfsi>
    2e20:	68 94       	set
    2e22:	b1 11       	cpse	r27, r1
    2e24:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_szero>
    2e28:	08 95       	ret

00002e2a <__fixunssfsi>:
    2e2a:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <__fp_splitA>
    2e2e:	88 f0       	brcs	.+34     	; 0x2e52 <__fixunssfsi+0x28>
    2e30:	9f 57       	subi	r25, 0x7F	; 127
    2e32:	98 f0       	brcs	.+38     	; 0x2e5a <__fixunssfsi+0x30>
    2e34:	b9 2f       	mov	r27, r25
    2e36:	99 27       	eor	r25, r25
    2e38:	b7 51       	subi	r27, 0x17	; 23
    2e3a:	b0 f0       	brcs	.+44     	; 0x2e68 <__fixunssfsi+0x3e>
    2e3c:	e1 f0       	breq	.+56     	; 0x2e76 <__fixunssfsi+0x4c>
    2e3e:	66 0f       	add	r22, r22
    2e40:	77 1f       	adc	r23, r23
    2e42:	88 1f       	adc	r24, r24
    2e44:	99 1f       	adc	r25, r25
    2e46:	1a f0       	brmi	.+6      	; 0x2e4e <__fixunssfsi+0x24>
    2e48:	ba 95       	dec	r27
    2e4a:	c9 f7       	brne	.-14     	; 0x2e3e <__fixunssfsi+0x14>
    2e4c:	14 c0       	rjmp	.+40     	; 0x2e76 <__fixunssfsi+0x4c>
    2e4e:	b1 30       	cpi	r27, 0x01	; 1
    2e50:	91 f0       	breq	.+36     	; 0x2e76 <__fixunssfsi+0x4c>
    2e52:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <__fp_zero>
    2e56:	b1 e0       	ldi	r27, 0x01	; 1
    2e58:	08 95       	ret
    2e5a:	0c 94 cb 17 	jmp	0x2f96	; 0x2f96 <__fp_zero>
    2e5e:	67 2f       	mov	r22, r23
    2e60:	78 2f       	mov	r23, r24
    2e62:	88 27       	eor	r24, r24
    2e64:	b8 5f       	subi	r27, 0xF8	; 248
    2e66:	39 f0       	breq	.+14     	; 0x2e76 <__fixunssfsi+0x4c>
    2e68:	b9 3f       	cpi	r27, 0xF9	; 249
    2e6a:	cc f3       	brlt	.-14     	; 0x2e5e <__fixunssfsi+0x34>
    2e6c:	86 95       	lsr	r24
    2e6e:	77 95       	ror	r23
    2e70:	67 95       	ror	r22
    2e72:	b3 95       	inc	r27
    2e74:	d9 f7       	brne	.-10     	; 0x2e6c <__fixunssfsi+0x42>
    2e76:	3e f4       	brtc	.+14     	; 0x2e86 <__fixunssfsi+0x5c>
    2e78:	90 95       	com	r25
    2e7a:	80 95       	com	r24
    2e7c:	70 95       	com	r23
    2e7e:	61 95       	neg	r22
    2e80:	7f 4f       	sbci	r23, 0xFF	; 255
    2e82:	8f 4f       	sbci	r24, 0xFF	; 255
    2e84:	9f 4f       	sbci	r25, 0xFF	; 255
    2e86:	08 95       	ret

00002e88 <__floatunsisf>:
    2e88:	e8 94       	clt
    2e8a:	09 c0       	rjmp	.+18     	; 0x2e9e <__floatsisf+0x12>

00002e8c <__floatsisf>:
    2e8c:	97 fb       	bst	r25, 7
    2e8e:	3e f4       	brtc	.+14     	; 0x2e9e <__floatsisf+0x12>
    2e90:	90 95       	com	r25
    2e92:	80 95       	com	r24
    2e94:	70 95       	com	r23
    2e96:	61 95       	neg	r22
    2e98:	7f 4f       	sbci	r23, 0xFF	; 255
    2e9a:	8f 4f       	sbci	r24, 0xFF	; 255
    2e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e9e:	99 23       	and	r25, r25
    2ea0:	a9 f0       	breq	.+42     	; 0x2ecc <__floatsisf+0x40>
    2ea2:	f9 2f       	mov	r31, r25
    2ea4:	96 e9       	ldi	r25, 0x96	; 150
    2ea6:	bb 27       	eor	r27, r27
    2ea8:	93 95       	inc	r25
    2eaa:	f6 95       	lsr	r31
    2eac:	87 95       	ror	r24
    2eae:	77 95       	ror	r23
    2eb0:	67 95       	ror	r22
    2eb2:	b7 95       	ror	r27
    2eb4:	f1 11       	cpse	r31, r1
    2eb6:	f8 cf       	rjmp	.-16     	; 0x2ea8 <__floatsisf+0x1c>
    2eb8:	fa f4       	brpl	.+62     	; 0x2ef8 <__floatsisf+0x6c>
    2eba:	bb 0f       	add	r27, r27
    2ebc:	11 f4       	brne	.+4      	; 0x2ec2 <__floatsisf+0x36>
    2ebe:	60 ff       	sbrs	r22, 0
    2ec0:	1b c0       	rjmp	.+54     	; 0x2ef8 <__floatsisf+0x6c>
    2ec2:	6f 5f       	subi	r22, 0xFF	; 255
    2ec4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ec6:	8f 4f       	sbci	r24, 0xFF	; 255
    2ec8:	9f 4f       	sbci	r25, 0xFF	; 255
    2eca:	16 c0       	rjmp	.+44     	; 0x2ef8 <__floatsisf+0x6c>
    2ecc:	88 23       	and	r24, r24
    2ece:	11 f0       	breq	.+4      	; 0x2ed4 <__floatsisf+0x48>
    2ed0:	96 e9       	ldi	r25, 0x96	; 150
    2ed2:	11 c0       	rjmp	.+34     	; 0x2ef6 <__floatsisf+0x6a>
    2ed4:	77 23       	and	r23, r23
    2ed6:	21 f0       	breq	.+8      	; 0x2ee0 <__floatsisf+0x54>
    2ed8:	9e e8       	ldi	r25, 0x8E	; 142
    2eda:	87 2f       	mov	r24, r23
    2edc:	76 2f       	mov	r23, r22
    2ede:	05 c0       	rjmp	.+10     	; 0x2eea <__floatsisf+0x5e>
    2ee0:	66 23       	and	r22, r22
    2ee2:	71 f0       	breq	.+28     	; 0x2f00 <__floatsisf+0x74>
    2ee4:	96 e8       	ldi	r25, 0x86	; 134
    2ee6:	86 2f       	mov	r24, r22
    2ee8:	70 e0       	ldi	r23, 0x00	; 0
    2eea:	60 e0       	ldi	r22, 0x00	; 0
    2eec:	2a f0       	brmi	.+10     	; 0x2ef8 <__floatsisf+0x6c>
    2eee:	9a 95       	dec	r25
    2ef0:	66 0f       	add	r22, r22
    2ef2:	77 1f       	adc	r23, r23
    2ef4:	88 1f       	adc	r24, r24
    2ef6:	da f7       	brpl	.-10     	; 0x2eee <__floatsisf+0x62>
    2ef8:	88 0f       	add	r24, r24
    2efa:	96 95       	lsr	r25
    2efc:	87 95       	ror	r24
    2efe:	97 f9       	bld	r25, 7
    2f00:	08 95       	ret

00002f02 <__fp_inf>:
    2f02:	97 f9       	bld	r25, 7
    2f04:	9f 67       	ori	r25, 0x7F	; 127
    2f06:	80 e8       	ldi	r24, 0x80	; 128
    2f08:	70 e0       	ldi	r23, 0x00	; 0
    2f0a:	60 e0       	ldi	r22, 0x00	; 0
    2f0c:	08 95       	ret

00002f0e <__fp_nan>:
    2f0e:	9f ef       	ldi	r25, 0xFF	; 255
    2f10:	80 ec       	ldi	r24, 0xC0	; 192
    2f12:	08 95       	ret

00002f14 <__fp_pscA>:
    2f14:	00 24       	eor	r0, r0
    2f16:	0a 94       	dec	r0
    2f18:	16 16       	cp	r1, r22
    2f1a:	17 06       	cpc	r1, r23
    2f1c:	18 06       	cpc	r1, r24
    2f1e:	09 06       	cpc	r0, r25
    2f20:	08 95       	ret

00002f22 <__fp_pscB>:
    2f22:	00 24       	eor	r0, r0
    2f24:	0a 94       	dec	r0
    2f26:	12 16       	cp	r1, r18
    2f28:	13 06       	cpc	r1, r19
    2f2a:	14 06       	cpc	r1, r20
    2f2c:	05 06       	cpc	r0, r21
    2f2e:	08 95       	ret

00002f30 <__fp_round>:
    2f30:	09 2e       	mov	r0, r25
    2f32:	03 94       	inc	r0
    2f34:	00 0c       	add	r0, r0
    2f36:	11 f4       	brne	.+4      	; 0x2f3c <__fp_round+0xc>
    2f38:	88 23       	and	r24, r24
    2f3a:	52 f0       	brmi	.+20     	; 0x2f50 <__fp_round+0x20>
    2f3c:	bb 0f       	add	r27, r27
    2f3e:	40 f4       	brcc	.+16     	; 0x2f50 <__fp_round+0x20>
    2f40:	bf 2b       	or	r27, r31
    2f42:	11 f4       	brne	.+4      	; 0x2f48 <__fp_round+0x18>
    2f44:	60 ff       	sbrs	r22, 0
    2f46:	04 c0       	rjmp	.+8      	; 0x2f50 <__fp_round+0x20>
    2f48:	6f 5f       	subi	r22, 0xFF	; 255
    2f4a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f4c:	8f 4f       	sbci	r24, 0xFF	; 255
    2f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f50:	08 95       	ret

00002f52 <__fp_split3>:
    2f52:	57 fd       	sbrc	r21, 7
    2f54:	90 58       	subi	r25, 0x80	; 128
    2f56:	44 0f       	add	r20, r20
    2f58:	55 1f       	adc	r21, r21
    2f5a:	59 f0       	breq	.+22     	; 0x2f72 <__fp_splitA+0x10>
    2f5c:	5f 3f       	cpi	r21, 0xFF	; 255
    2f5e:	71 f0       	breq	.+28     	; 0x2f7c <__fp_splitA+0x1a>
    2f60:	47 95       	ror	r20

00002f62 <__fp_splitA>:
    2f62:	88 0f       	add	r24, r24
    2f64:	97 fb       	bst	r25, 7
    2f66:	99 1f       	adc	r25, r25
    2f68:	61 f0       	breq	.+24     	; 0x2f82 <__fp_splitA+0x20>
    2f6a:	9f 3f       	cpi	r25, 0xFF	; 255
    2f6c:	79 f0       	breq	.+30     	; 0x2f8c <__fp_splitA+0x2a>
    2f6e:	87 95       	ror	r24
    2f70:	08 95       	ret
    2f72:	12 16       	cp	r1, r18
    2f74:	13 06       	cpc	r1, r19
    2f76:	14 06       	cpc	r1, r20
    2f78:	55 1f       	adc	r21, r21
    2f7a:	f2 cf       	rjmp	.-28     	; 0x2f60 <__fp_split3+0xe>
    2f7c:	46 95       	lsr	r20
    2f7e:	f1 df       	rcall	.-30     	; 0x2f62 <__fp_splitA>
    2f80:	08 c0       	rjmp	.+16     	; 0x2f92 <__fp_splitA+0x30>
    2f82:	16 16       	cp	r1, r22
    2f84:	17 06       	cpc	r1, r23
    2f86:	18 06       	cpc	r1, r24
    2f88:	99 1f       	adc	r25, r25
    2f8a:	f1 cf       	rjmp	.-30     	; 0x2f6e <__fp_splitA+0xc>
    2f8c:	86 95       	lsr	r24
    2f8e:	71 05       	cpc	r23, r1
    2f90:	61 05       	cpc	r22, r1
    2f92:	08 94       	sec
    2f94:	08 95       	ret

00002f96 <__fp_zero>:
    2f96:	e8 94       	clt

00002f98 <__fp_szero>:
    2f98:	bb 27       	eor	r27, r27
    2f9a:	66 27       	eor	r22, r22
    2f9c:	77 27       	eor	r23, r23
    2f9e:	cb 01       	movw	r24, r22
    2fa0:	97 f9       	bld	r25, 7
    2fa2:	08 95       	ret

00002fa4 <__mulsf3>:
    2fa4:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__mulsf3x>
    2fa8:	0c 94 98 17 	jmp	0x2f30	; 0x2f30 <__fp_round>
    2fac:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <__fp_pscA>
    2fb0:	38 f0       	brcs	.+14     	; 0x2fc0 <__mulsf3+0x1c>
    2fb2:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__fp_pscB>
    2fb6:	20 f0       	brcs	.+8      	; 0x2fc0 <__mulsf3+0x1c>
    2fb8:	95 23       	and	r25, r21
    2fba:	11 f0       	breq	.+4      	; 0x2fc0 <__mulsf3+0x1c>
    2fbc:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__fp_inf>
    2fc0:	0c 94 87 17 	jmp	0x2f0e	; 0x2f0e <__fp_nan>
    2fc4:	11 24       	eor	r1, r1
    2fc6:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_szero>

00002fca <__mulsf3x>:
    2fca:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <__fp_split3>
    2fce:	70 f3       	brcs	.-36     	; 0x2fac <__mulsf3+0x8>

00002fd0 <__mulsf3_pse>:
    2fd0:	95 9f       	mul	r25, r21
    2fd2:	c1 f3       	breq	.-16     	; 0x2fc4 <__mulsf3+0x20>
    2fd4:	95 0f       	add	r25, r21
    2fd6:	50 e0       	ldi	r21, 0x00	; 0
    2fd8:	55 1f       	adc	r21, r21
    2fda:	62 9f       	mul	r22, r18
    2fdc:	f0 01       	movw	r30, r0
    2fde:	72 9f       	mul	r23, r18
    2fe0:	bb 27       	eor	r27, r27
    2fe2:	f0 0d       	add	r31, r0
    2fe4:	b1 1d       	adc	r27, r1
    2fe6:	63 9f       	mul	r22, r19
    2fe8:	aa 27       	eor	r26, r26
    2fea:	f0 0d       	add	r31, r0
    2fec:	b1 1d       	adc	r27, r1
    2fee:	aa 1f       	adc	r26, r26
    2ff0:	64 9f       	mul	r22, r20
    2ff2:	66 27       	eor	r22, r22
    2ff4:	b0 0d       	add	r27, r0
    2ff6:	a1 1d       	adc	r26, r1
    2ff8:	66 1f       	adc	r22, r22
    2ffa:	82 9f       	mul	r24, r18
    2ffc:	22 27       	eor	r18, r18
    2ffe:	b0 0d       	add	r27, r0
    3000:	a1 1d       	adc	r26, r1
    3002:	62 1f       	adc	r22, r18
    3004:	73 9f       	mul	r23, r19
    3006:	b0 0d       	add	r27, r0
    3008:	a1 1d       	adc	r26, r1
    300a:	62 1f       	adc	r22, r18
    300c:	83 9f       	mul	r24, r19
    300e:	a0 0d       	add	r26, r0
    3010:	61 1d       	adc	r22, r1
    3012:	22 1f       	adc	r18, r18
    3014:	74 9f       	mul	r23, r20
    3016:	33 27       	eor	r19, r19
    3018:	a0 0d       	add	r26, r0
    301a:	61 1d       	adc	r22, r1
    301c:	23 1f       	adc	r18, r19
    301e:	84 9f       	mul	r24, r20
    3020:	60 0d       	add	r22, r0
    3022:	21 1d       	adc	r18, r1
    3024:	82 2f       	mov	r24, r18
    3026:	76 2f       	mov	r23, r22
    3028:	6a 2f       	mov	r22, r26
    302a:	11 24       	eor	r1, r1
    302c:	9f 57       	subi	r25, 0x7F	; 127
    302e:	50 40       	sbci	r21, 0x00	; 0
    3030:	9a f0       	brmi	.+38     	; 0x3058 <__mulsf3_pse+0x88>
    3032:	f1 f0       	breq	.+60     	; 0x3070 <__mulsf3_pse+0xa0>
    3034:	88 23       	and	r24, r24
    3036:	4a f0       	brmi	.+18     	; 0x304a <__mulsf3_pse+0x7a>
    3038:	ee 0f       	add	r30, r30
    303a:	ff 1f       	adc	r31, r31
    303c:	bb 1f       	adc	r27, r27
    303e:	66 1f       	adc	r22, r22
    3040:	77 1f       	adc	r23, r23
    3042:	88 1f       	adc	r24, r24
    3044:	91 50       	subi	r25, 0x01	; 1
    3046:	50 40       	sbci	r21, 0x00	; 0
    3048:	a9 f7       	brne	.-22     	; 0x3034 <__mulsf3_pse+0x64>
    304a:	9e 3f       	cpi	r25, 0xFE	; 254
    304c:	51 05       	cpc	r21, r1
    304e:	80 f0       	brcs	.+32     	; 0x3070 <__mulsf3_pse+0xa0>
    3050:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__fp_inf>
    3054:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_szero>
    3058:	5f 3f       	cpi	r21, 0xFF	; 255
    305a:	e4 f3       	brlt	.-8      	; 0x3054 <__mulsf3_pse+0x84>
    305c:	98 3e       	cpi	r25, 0xE8	; 232
    305e:	d4 f3       	brlt	.-12     	; 0x3054 <__mulsf3_pse+0x84>
    3060:	86 95       	lsr	r24
    3062:	77 95       	ror	r23
    3064:	67 95       	ror	r22
    3066:	b7 95       	ror	r27
    3068:	f7 95       	ror	r31
    306a:	e7 95       	ror	r30
    306c:	9f 5f       	subi	r25, 0xFF	; 255
    306e:	c1 f7       	brne	.-16     	; 0x3060 <__mulsf3_pse+0x90>
    3070:	fe 2b       	or	r31, r30
    3072:	88 0f       	add	r24, r24
    3074:	91 1d       	adc	r25, r1
    3076:	96 95       	lsr	r25
    3078:	87 95       	ror	r24
    307a:	97 f9       	bld	r25, 7
    307c:	08 95       	ret

0000307e <__udivmodsi4>:
    307e:	a1 e2       	ldi	r26, 0x21	; 33
    3080:	1a 2e       	mov	r1, r26
    3082:	aa 1b       	sub	r26, r26
    3084:	bb 1b       	sub	r27, r27
    3086:	fd 01       	movw	r30, r26
    3088:	0d c0       	rjmp	.+26     	; 0x30a4 <__udivmodsi4_ep>

0000308a <__udivmodsi4_loop>:
    308a:	aa 1f       	adc	r26, r26
    308c:	bb 1f       	adc	r27, r27
    308e:	ee 1f       	adc	r30, r30
    3090:	ff 1f       	adc	r31, r31
    3092:	a2 17       	cp	r26, r18
    3094:	b3 07       	cpc	r27, r19
    3096:	e4 07       	cpc	r30, r20
    3098:	f5 07       	cpc	r31, r21
    309a:	20 f0       	brcs	.+8      	; 0x30a4 <__udivmodsi4_ep>
    309c:	a2 1b       	sub	r26, r18
    309e:	b3 0b       	sbc	r27, r19
    30a0:	e4 0b       	sbc	r30, r20
    30a2:	f5 0b       	sbc	r31, r21

000030a4 <__udivmodsi4_ep>:
    30a4:	66 1f       	adc	r22, r22
    30a6:	77 1f       	adc	r23, r23
    30a8:	88 1f       	adc	r24, r24
    30aa:	99 1f       	adc	r25, r25
    30ac:	1a 94       	dec	r1
    30ae:	69 f7       	brne	.-38     	; 0x308a <__udivmodsi4_loop>
    30b0:	60 95       	com	r22
    30b2:	70 95       	com	r23
    30b4:	80 95       	com	r24
    30b6:	90 95       	com	r25
    30b8:	9b 01       	movw	r18, r22
    30ba:	ac 01       	movw	r20, r24
    30bc:	bd 01       	movw	r22, r26
    30be:	cf 01       	movw	r24, r30
    30c0:	08 95       	ret

000030c2 <__divmodsi4>:
    30c2:	05 2e       	mov	r0, r21
    30c4:	97 fb       	bst	r25, 7
    30c6:	1e f4       	brtc	.+6      	; 0x30ce <__divmodsi4+0xc>
    30c8:	00 94       	com	r0
    30ca:	0e 94 78 18 	call	0x30f0	; 0x30f0 <__negsi2>
    30ce:	57 fd       	sbrc	r21, 7
    30d0:	07 d0       	rcall	.+14     	; 0x30e0 <__divmodsi4_neg2>
    30d2:	0e 94 3f 18 	call	0x307e	; 0x307e <__udivmodsi4>
    30d6:	07 fc       	sbrc	r0, 7
    30d8:	03 d0       	rcall	.+6      	; 0x30e0 <__divmodsi4_neg2>
    30da:	4e f4       	brtc	.+18     	; 0x30ee <__divmodsi4_exit>
    30dc:	0c 94 78 18 	jmp	0x30f0	; 0x30f0 <__negsi2>

000030e0 <__divmodsi4_neg2>:
    30e0:	50 95       	com	r21
    30e2:	40 95       	com	r20
    30e4:	30 95       	com	r19
    30e6:	21 95       	neg	r18
    30e8:	3f 4f       	sbci	r19, 0xFF	; 255
    30ea:	4f 4f       	sbci	r20, 0xFF	; 255
    30ec:	5f 4f       	sbci	r21, 0xFF	; 255

000030ee <__divmodsi4_exit>:
    30ee:	08 95       	ret

000030f0 <__negsi2>:
    30f0:	90 95       	com	r25
    30f2:	80 95       	com	r24
    30f4:	70 95       	com	r23
    30f6:	61 95       	neg	r22
    30f8:	7f 4f       	sbci	r23, 0xFF	; 255
    30fa:	8f 4f       	sbci	r24, 0xFF	; 255
    30fc:	9f 4f       	sbci	r25, 0xFF	; 255
    30fe:	08 95       	ret

00003100 <__umulhisi3>:
    3100:	a2 9f       	mul	r26, r18
    3102:	b0 01       	movw	r22, r0
    3104:	b3 9f       	mul	r27, r19
    3106:	c0 01       	movw	r24, r0
    3108:	a3 9f       	mul	r26, r19
    310a:	70 0d       	add	r23, r0
    310c:	81 1d       	adc	r24, r1
    310e:	11 24       	eor	r1, r1
    3110:	91 1d       	adc	r25, r1
    3112:	b2 9f       	mul	r27, r18
    3114:	70 0d       	add	r23, r0
    3116:	81 1d       	adc	r24, r1
    3118:	11 24       	eor	r1, r1
    311a:	91 1d       	adc	r25, r1
    311c:	08 95       	ret

0000311e <memset>:
    311e:	dc 01       	movw	r26, r24
    3120:	01 c0       	rjmp	.+2      	; 0x3124 <memset+0x6>
    3122:	6d 93       	st	X+, r22
    3124:	41 50       	subi	r20, 0x01	; 1
    3126:	50 40       	sbci	r21, 0x00	; 0
    3128:	e0 f7       	brcc	.-8      	; 0x3122 <memset+0x4>
    312a:	08 95       	ret

0000312c <__itoa_ncheck>:
    312c:	bb 27       	eor	r27, r27
    312e:	4a 30       	cpi	r20, 0x0A	; 10
    3130:	31 f4       	brne	.+12     	; 0x313e <__itoa_ncheck+0x12>
    3132:	99 23       	and	r25, r25
    3134:	22 f4       	brpl	.+8      	; 0x313e <__itoa_ncheck+0x12>
    3136:	bd e2       	ldi	r27, 0x2D	; 45
    3138:	90 95       	com	r25
    313a:	81 95       	neg	r24
    313c:	9f 4f       	sbci	r25, 0xFF	; 255
    313e:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <__utoa_common>

00003142 <__ltoa_ncheck>:
    3142:	bb 27       	eor	r27, r27
    3144:	2a 30       	cpi	r18, 0x0A	; 10
    3146:	51 f4       	brne	.+20     	; 0x315c <__ltoa_ncheck+0x1a>
    3148:	99 23       	and	r25, r25
    314a:	42 f4       	brpl	.+16     	; 0x315c <__ltoa_ncheck+0x1a>
    314c:	bd e2       	ldi	r27, 0x2D	; 45
    314e:	90 95       	com	r25
    3150:	80 95       	com	r24
    3152:	70 95       	com	r23
    3154:	61 95       	neg	r22
    3156:	7f 4f       	sbci	r23, 0xFF	; 255
    3158:	8f 4f       	sbci	r24, 0xFF	; 255
    315a:	9f 4f       	sbci	r25, 0xFF	; 255
    315c:	0c 94 b1 18 	jmp	0x3162	; 0x3162 <__ultoa_common>

00003160 <__ultoa_ncheck>:
    3160:	bb 27       	eor	r27, r27

00003162 <__ultoa_common>:
    3162:	fa 01       	movw	r30, r20
    3164:	a6 2f       	mov	r26, r22
    3166:	62 17       	cp	r22, r18
    3168:	71 05       	cpc	r23, r1
    316a:	81 05       	cpc	r24, r1
    316c:	91 05       	cpc	r25, r1
    316e:	33 0b       	sbc	r19, r19
    3170:	30 fb       	bst	r19, 0
    3172:	66 f0       	brts	.+24     	; 0x318c <__ultoa_common+0x2a>
    3174:	aa 27       	eor	r26, r26
    3176:	66 0f       	add	r22, r22
    3178:	77 1f       	adc	r23, r23
    317a:	88 1f       	adc	r24, r24
    317c:	99 1f       	adc	r25, r25
    317e:	aa 1f       	adc	r26, r26
    3180:	a2 17       	cp	r26, r18
    3182:	10 f0       	brcs	.+4      	; 0x3188 <__ultoa_common+0x26>
    3184:	a2 1b       	sub	r26, r18
    3186:	63 95       	inc	r22
    3188:	38 50       	subi	r19, 0x08	; 8
    318a:	a9 f7       	brne	.-22     	; 0x3176 <__ultoa_common+0x14>
    318c:	a0 5d       	subi	r26, 0xD0	; 208
    318e:	aa 33       	cpi	r26, 0x3A	; 58
    3190:	08 f0       	brcs	.+2      	; 0x3194 <__ultoa_common+0x32>
    3192:	a9 5d       	subi	r26, 0xD9	; 217
    3194:	a1 93       	st	Z+, r26
    3196:	36 f7       	brtc	.-52     	; 0x3164 <__ultoa_common+0x2>
    3198:	b1 11       	cpse	r27, r1
    319a:	b1 93       	st	Z+, r27
    319c:	10 82       	st	Z, r1
    319e:	ca 01       	movw	r24, r20
    31a0:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <strrev>

000031a4 <__utoa_ncheck>:
    31a4:	bb 27       	eor	r27, r27

000031a6 <__utoa_common>:
    31a6:	fb 01       	movw	r30, r22
    31a8:	55 27       	eor	r21, r21
    31aa:	aa 27       	eor	r26, r26
    31ac:	88 0f       	add	r24, r24
    31ae:	99 1f       	adc	r25, r25
    31b0:	aa 1f       	adc	r26, r26
    31b2:	a4 17       	cp	r26, r20
    31b4:	10 f0       	brcs	.+4      	; 0x31ba <__utoa_common+0x14>
    31b6:	a4 1b       	sub	r26, r20
    31b8:	83 95       	inc	r24
    31ba:	50 51       	subi	r21, 0x10	; 16
    31bc:	b9 f7       	brne	.-18     	; 0x31ac <__utoa_common+0x6>
    31be:	a0 5d       	subi	r26, 0xD0	; 208
    31c0:	aa 33       	cpi	r26, 0x3A	; 58
    31c2:	08 f0       	brcs	.+2      	; 0x31c6 <__utoa_common+0x20>
    31c4:	a9 5d       	subi	r26, 0xD9	; 217
    31c6:	a1 93       	st	Z+, r26
    31c8:	00 97       	sbiw	r24, 0x00	; 0
    31ca:	79 f7       	brne	.-34     	; 0x31aa <__utoa_common+0x4>
    31cc:	b1 11       	cpse	r27, r1
    31ce:	b1 93       	st	Z+, r27
    31d0:	11 92       	st	Z+, r1
    31d2:	cb 01       	movw	r24, r22
    31d4:	0c 94 ec 18 	jmp	0x31d8	; 0x31d8 <strrev>

000031d8 <strrev>:
    31d8:	dc 01       	movw	r26, r24
    31da:	fc 01       	movw	r30, r24
    31dc:	67 2f       	mov	r22, r23
    31de:	71 91       	ld	r23, Z+
    31e0:	77 23       	and	r23, r23
    31e2:	e1 f7       	brne	.-8      	; 0x31dc <strrev+0x4>
    31e4:	32 97       	sbiw	r30, 0x02	; 2
    31e6:	04 c0       	rjmp	.+8      	; 0x31f0 <strrev+0x18>
    31e8:	7c 91       	ld	r23, X
    31ea:	6d 93       	st	X+, r22
    31ec:	70 83       	st	Z, r23
    31ee:	62 91       	ld	r22, -Z
    31f0:	ae 17       	cp	r26, r30
    31f2:	bf 07       	cpc	r27, r31
    31f4:	c8 f3       	brcs	.-14     	; 0x31e8 <strrev+0x10>
    31f6:	08 95       	ret

000031f8 <_exit>:
    31f8:	f8 94       	cli

000031fa <__stop_program>:
    31fa:	ff cf       	rjmp	.-2      	; 0x31fa <__stop_program>
